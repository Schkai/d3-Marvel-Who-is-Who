!function t(n,e,r){function i(u,a){if(!e[u]){if(!n[u]){var c="function"==typeof require&&require;if(!a&&c)return c(u,!0);if(o)return o(u,!0);var s=new Error("Cannot find module '"+u+"'");throw s.code="MODULE_NOT_FOUND",s}var l=e[u]={exports:{}};n[u][0].call(l.exports,function(t){var e=n[u][1][t];return i(e?e:t)},l,l.exports,t,n,e,r)}return e[u].exports}for(var o="function"==typeof require&&require,u=0;u<r.length;u++)i(r[u]);return i}({1:[function(t,n,e){!function(){function t(t,n){if(n in t)return n;n=n.charAt(0).toUpperCase()+n.slice(1);for(var e=0,r=He.length;e<r;++e){var i=He[e]+n;if(i in t)return i}}function e(t){return je(t,$e),t}function r(t){return"function"==typeof t?t:function(){return Xe(t,this)}}function i(t,n){function e(){this.removeAttribute(t)}function r(){this.removeAttributeNS(t.space,t.local)}function i(){this.setAttribute(t,n)}function o(){this.setAttributeNS(t.space,t.local,n)}function u(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}function a(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}return t=qe.ns.qualify(t),null==n?t.local?r:e:"function"==typeof n?t.local?a:u:t.local?o:i}function o(t){return t.trim().replace(/\s+/g," ")}function u(t){return new RegExp("(?:^|\\s+)"+qe.requote(t)+"(?:\\s+|$)","g")}function a(t){return(t+"").trim().split(/^|\s+/)}function c(t,n){function e(){for(var e=-1;++e<i;)t[e](this,n)}function r(){for(var e=-1,r=n.apply(this,arguments);++e<i;)t[e](this,r)}t=a(t).map(s);var i=t.length;return"function"==typeof n?r:e}function s(t){var n=u(t);return function(e,r){if(i=e.classList)return r?i.add(t):i.remove(t);var i=e.getAttribute("class")||"";r?(n.lastIndex=0,n.test(i)||e.setAttribute("class",o(i+" "+t))):e.setAttribute("class",o(i.replace(n," ")))}}function l(t,n,e){function r(){this.style.removeProperty(t)}function i(){this.style.setProperty(t,n,e)}function o(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}return null==n?r:"function"==typeof n?o:i}function f(t,n){function e(){delete this[t]}function r(){this[t]=n}function i(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}return null==n?e:"function"==typeof n?i:r}function h(t){return"function"==typeof t?t:(t=qe.ns.qualify(t)).local?function(){return this.ownerDocument.createElementNS(t.space,t.local)}:function(){return this.ownerDocument.createElementNS(this.namespaceURI,t)}}function p(){var t=this.parentNode;t&&t.removeChild(this)}function d(t,n){for(var e in n)Object.defineProperty(t.prototype,e,{value:n[e],enumerable:!1})}function g(){this._=Object.create(null)}function v(t){return(t+="")===Je||t[0]===Qe?Qe+t:t}function y(t){return(t+="")[0]===Qe?t.slice(1):t}function _(t){return v(t)in this._}function m(t){return(t=v(t))in this._&&delete this._[t]}function x(){var t=[];for(var n in this._)t.push(y(n));return t}function b(){var t=0;for(var n in this._)++t;return t}function w(){for(var t in this._)return!1;return!0}function M(){this._=Object.create(null)}function k(t){return{__data__:t}}function T(t){return function(){return Ze(this,t)}}function S(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}function A(t){return arguments.length||(t=S),function(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}}function N(){}function E(){}function C(t){function n(){for(var n,r=e,i=-1,o=r.length;++i<o;)(n=r[i].on)&&n.apply(this,arguments);return t}var e=[],r=new g;return n.on=function(n,i){var o,u=r.get(n);return arguments.length<2?u&&u.on:(u&&(u.on=null,e=e.slice(0,o=e.indexOf(u)).concat(e.slice(o+1)),r.remove(n)),i&&e.push(r.set(n,{on:i})),t)},n}function z(){qe.event.preventDefault()}function D(){for(var t,n=qe.event;t=n.sourceEvent;)n=t;return n}function L(t){for(var n=new E,e=0,r=arguments.length;++e<r;)n[arguments[e]]=C(n);return n.of=function(e,r){return function(i){try{var o=i.sourceEvent=qe.event;i.target=t,qe.event=i,n[i.type].apply(e,r)}finally{qe.event=o}}},n}function P(t,n,e){function r(){var n=this[u];n&&(this.removeEventListener(t,n,n.$),delete this[u])}function i(){var i=c(n,Re(arguments));r.call(this),this.addEventListener(t,this[u]=i,i.$=e),i._=n}function o(){var n,e=new RegExp("^__on([^.]+)"+qe.requote(t)+"$");for(var r in this)if(n=r.match(e)){var i=this[r];this.removeEventListener(n[1],i,i.$),delete this[r]}}var u="__on"+t,a=t.indexOf("."),c=q;a>0&&(t=t.slice(0,a));var s=Ke.get(t);return s&&(t=s,c=U),a?n?i:r:n?N:o}function q(t,n){return function(e){var r=qe.event;qe.event=e,n[0]=this.__data__;try{t.apply(this,n)}finally{qe.event=r}}}function U(t,n){var e=q(t,n);return function(t){var n=this,r=t.relatedTarget;r&&(r===n||8&r.compareDocumentPosition(n))||e.call(n,t)}}function R(t,n){for(var e=0,r=t.length;e<r;e++)for(var i,o=t[e],u=0,a=o.length;u<a;u++)(i=o[u])&&n(i,u,e);return t}function O(t){return je(t,tr),t}function F(t){var n,e;return function(r,i,o){var u,a=t[o].update,c=a.length;for(o!=e&&(e=o,n=0),i>=n&&(n=i+1);!(u=a[n])&&++n<c;);return u}}function Y(t){return"function"==typeof t?t:function(){return Be(t,this)}}function I(t){return"function"==typeof t?t:function(){return t}}function j(){return 0}function H(t){return t>1?ur:t<-1?-ur:Math.asin(t)}function B(t,n,e){return(e[0]-n[0])*(t[1]-n[1])<(e[1]-n[1])*(t[0]-n[0])}function X(t,n,e,r){var i=t[0],o=e[0],u=n[0]-i,a=r[0]-o,c=t[1],s=e[1],l=n[1]-c,f=r[1]-s,h=(a*(c-s)-f*(i-o))/(f*u-a*l);return[i+h*u,c+h*l]}function V(t){var n=t[0],e=t[t.length-1];return!(n[0]-e[0]||n[1]-e[1])}function Z(t){return t.innerRadius}function $(t){return t.outerRadius}function W(t){return t.startAngle}function G(t){return t.endAngle}function J(t){return t&&t.padAngle}function Q(t,n,e,r){return(t-e)*n-(n-r)*t>0?0:1}function K(t,n,e,r,i){var o=t[0]-n[0],u=t[1]-n[1],a=(i?r:-r)/Math.sqrt(o*o+u*u),c=a*u,s=-a*o,l=t[0]+c,f=t[1]+s,h=n[0]+c,p=n[1]+s,d=(l+h)/2,g=(f+p)/2,v=h-l,y=p-f,_=v*v+y*y,m=e-r,x=l*p-h*f,b=(y<0?-1:1)*Math.sqrt(m*m*_-x*x),w=(x*y-v*b)/_,M=(-x*v-y*b)/_,k=(x*y+v*b)/_,T=(-x*v+y*b)/_,S=w-d,A=M-g,N=k-d,E=T-g;return S*S+A*A>N*N+E*E&&(w=k,M=T),[[w-c,M-s],[w*e/m,M*e/m]]}function tt(t){return t}function nt(){return!0}function et(t){return t[0]}function rt(t){return t[1]}function it(t){function n(n){function u(){s.push("M",o(t(l),a))}for(var c,s=[],l=[],f=-1,h=n.length,p=I(e),d=I(r);++f<h;)i.call(this,c=n[f],f)?l.push([+p.call(this,c,f),+d.call(this,c,f)]):l.length&&(u(),l=[]);return l.length&&u(),s.length?s.join(""):null}var e=et,r=rt,i=nt,o=ot,u=o.key,a=.7;return n.x=function(t){return arguments.length?(e=t,n):e},n.y=function(t){return arguments.length?(r=t,n):r},n.defined=function(t){return arguments.length?(i=t,n):i},n.interpolate=function(t){return arguments.length?(u="function"==typeof t?o=t:(o=hr.get(t)||ot).key,n):u},n.tension=function(t){return arguments.length?(a=t,n):a},n}function ot(t){return t.join("L")}function ut(t){return ot(t)+"Z"}function at(t){for(var n=0,e=t.length,r=t[0],i=[r[0],",",r[1]];++n<e;)i.push("H",(r[0]+(r=t[n])[0])/2,"V",r[1]);return e>1&&i.push("H",r[0]),i.join("")}function ct(t){for(var n=0,e=t.length,r=t[0],i=[r[0],",",r[1]];++n<e;)i.push("V",(r=t[n])[1],"H",r[0]);return i.join("")}function st(t){for(var n=0,e=t.length,r=t[0],i=[r[0],",",r[1]];++n<e;)i.push("H",(r=t[n])[0],"V",r[1]);return i.join("")}function lt(t,n){return t.length<4?ot(t):t[1]+pt(t.slice(1,-1),dt(t,n))}function ft(t,n){return t.length<3?ot(t):t[0]+pt((t.push(t[0]),t),dt([t[t.length-2]].concat(t,[t[1]]),n))}function ht(t,n){return t.length<3?ot(t):t[0]+pt(t,dt(t,n))}function pt(t,n){if(n.length<1||t.length!=n.length&&t.length!=n.length+2)return ot(t);var e=t.length!=n.length,r="",i=t[0],o=t[1],u=n[0],a=u,c=1;if(e&&(r+="Q"+(o[0]-2*u[0]/3)+","+(o[1]-2*u[1]/3)+","+o[0]+","+o[1],i=t[1],c=2),n.length>1){a=n[1],o=t[c],c++,r+="C"+(i[0]+u[0])+","+(i[1]+u[1])+","+(o[0]-a[0])+","+(o[1]-a[1])+","+o[0]+","+o[1];for(var s=2;s<n.length;s++,c++)o=t[c],a=n[s],r+="S"+(o[0]-a[0])+","+(o[1]-a[1])+","+o[0]+","+o[1]}if(e){var l=t[c];r+="Q"+(o[0]+2*a[0]/3)+","+(o[1]+2*a[1]/3)+","+l[0]+","+l[1]}return r}function dt(t,n){for(var e,r=[],i=(1-n)/2,o=t[0],u=t[1],a=1,c=t.length;++a<c;)e=o,o=u,u=t[a],r.push([i*(u[0]-e[0]),i*(u[1]-e[1])]);return r}function gt(t){if(t.length<3)return ot(t);var n=1,e=t.length,r=t[0],i=r[0],o=r[1],u=[i,i,i,(r=t[1])[0]],a=[o,o,o,r[1]],c=[i,",",o,"L",mt(gr,u),",",mt(gr,a)];for(t.push(t[e-1]);++n<=e;)r=t[n],u.shift(),u.push(r[0]),a.shift(),a.push(r[1]),xt(c,u,a);return t.pop(),c.push("L",r),c.join("")}function vt(t){if(t.length<4)return ot(t);for(var n,e=[],r=-1,i=t.length,o=[0],u=[0];++r<3;)n=t[r],o.push(n[0]),u.push(n[1]);for(e.push(mt(gr,o)+","+mt(gr,u)),--r;++r<i;)n=t[r],o.shift(),o.push(n[0]),u.shift(),u.push(n[1]),xt(e,o,u);return e.join("")}function yt(t){for(var n,e,r=-1,i=t.length,o=i+4,u=[],a=[];++r<4;)e=t[r%i],u.push(e[0]),a.push(e[1]);for(n=[mt(gr,u),",",mt(gr,a)],--r;++r<o;)e=t[r%i],u.shift(),u.push(e[0]),a.shift(),a.push(e[1]),xt(n,u,a);return n.join("")}function _t(t,n){var e=t.length-1;if(e)for(var r,i,o=t[0][0],u=t[0][1],a=t[e][0]-o,c=t[e][1]-u,s=-1;++s<=e;)r=t[s],i=s/e,r[0]=n*r[0]+(1-n)*(o+i*a),r[1]=n*r[1]+(1-n)*(u+i*c);return gt(t)}function mt(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]+t[3]*n[3]}function xt(t,n,e){t.push("C",mt(pr,n),",",mt(pr,e),",",mt(dr,n),",",mt(dr,e),",",mt(gr,n),",",mt(gr,e))}function bt(t,n){return(n[1]-t[1])/(n[0]-t[0])}function wt(t){for(var n=0,e=t.length-1,r=[],i=t[0],o=t[1],u=r[0]=bt(i,o);++n<e;)r[n]=(u+(u=bt(i=o,o=t[n+1])))/2;return r[n]=u,r}function Mt(t){for(var n,e,r,i,o=[],u=wt(t),a=-1,c=t.length-1;++a<c;)n=bt(t[a],t[a+1]),fr(n)<er?u[a]=u[a+1]=0:(e=u[a]/n,r=u[a+1]/n,i=e*e+r*r,i>9&&(i=3*n/Math.sqrt(i),u[a]=i*e,u[a+1]=i*r));for(a=-1;++a<=c;)i=(t[Math.min(c,a+1)][0]-t[Math.max(0,a-1)][0])/(6*(1+u[a]*u[a])),o.push([i||0,u[a]*i||0]);return o}function kt(t){return t.length<3?ot(t):t[0]+pt(t,Mt(t))}function Tt(t){for(var n,e,r,i=-1,o=t.length;++i<o;)n=t[i],e=n[0],r=n[1]-ur,n[0]=e*Math.cos(r),n[1]=e*Math.sin(r);return t}function St(t){function n(n){function c(){g.push("M",a(t(y),f),l,s(t(v.reverse()),f),"Z")}for(var h,p,d,g=[],v=[],y=[],_=-1,m=n.length,x=I(e),b=I(i),w=e===r?function(){return p}:I(r),M=i===o?function(){return d}:I(o);++_<m;)u.call(this,h=n[_],_)?(v.push([p=+x.call(this,h,_),d=+b.call(this,h,_)]),y.push([+w.call(this,h,_),+M.call(this,h,_)])):v.length&&(c(),v=[],y=[]);return v.length&&c(),g.length?g.join(""):null}var e=et,r=et,i=0,o=rt,u=nt,a=ot,c=a.key,s=a,l="L",f=.7;return n.x=function(t){return arguments.length?(e=r=t,n):r},n.x0=function(t){return arguments.length?(e=t,n):e},n.x1=function(t){return arguments.length?(r=t,n):r},n.y=function(t){return arguments.length?(i=o=t,n):o},n.y0=function(t){return arguments.length?(i=t,n):i},n.y1=function(t){return arguments.length?(o=t,n):o},n.defined=function(t){return arguments.length?(u=t,n):u},n.interpolate=function(t){return arguments.length?(c="function"==typeof t?a=t:(a=hr.get(t)||ot).key,s=a.reverse||a,l=a.closed?"M":"L",n):c},n.tension=function(t){return arguments.length?(f=t,n):f},n}function At(t){return t.source}function Nt(t){return t.target}function Et(t){return t.radius}function Ct(t){return[t.x,t.y]}function zt(t){return function(){var n=t.apply(this,arguments),e=n[0],r=n[1]-ur;return[e*Math.cos(r),e*Math.sin(r)]}}function Dt(){return 64}function Lt(){return"circle"}function Pt(t){var n=Math.sqrt(t/rr);return"M0,"+n+"A"+n+","+n+" 0 1,1 0,"+-n+"A"+n+","+n+" 0 1,1 0,"+n+"Z"}function qt(t){for(var n=1;t*n%1;)n*=10;return n}function Ut(t,n,e){return function(){var r=e.apply(n,arguments);return r===n?t:r}}function Rt(){}function Ot(t,n,e){return this instanceof Ot?(this.h=+t,this.s=+n,void(this.l=+e)):arguments.length<2?t instanceof Ot?new Ot(t.h,t.s,t.l):Jt(""+t,Qt,Ot):new Ot(t,n,e)}function Ft(t,n,e){function r(t){return t>360?t-=360:t<0&&(t+=360),t<60?o+(u-o)*t/60:t<180?u:t<240?o+(u-o)*(240-t)/60:o}function i(t){return Math.round(255*r(t))}var o,u;return t=isNaN(t)?0:(t%=360)<0?t+360:t,n=isNaN(n)?0:n<0?0:n>1?1:n,e=e<0?0:e>1?1:e,u=e<=.5?e*(1+n):e+n-e*n,o=2*e-u,new $t(i(t+120),i(t),i(t-120))}function Yt(t,n,e){return this instanceof Yt?(this.h=+t,this.c=+n,void(this.l=+e)):arguments.length<2?t instanceof Yt?new Yt(t.h,t.c,t.l):t instanceof jt?Bt(t.l,t.a,t.b):Bt((t=Kt((t=qe.rgb(t)).r,t.g,t.b)).l,t.a,t.b):new Yt(t,n,e)}function It(t,n,e){return isNaN(t)&&(t=0),isNaN(n)&&(n=0),new jt(e,Math.cos(t*=ar)*n,Math.sin(t)*n)}function jt(t,n,e){return this instanceof jt?(this.l=+t,this.a=+n,void(this.b=+e)):arguments.length<2?t instanceof jt?new jt(t.l,t.a,t.b):t instanceof Yt?It(t.h,t.c,t.l):Kt((t=$t(t)).r,t.g,t.b):new jt(t,n,e)}function Ht(t,n,e){var r=(t+16)/116,i=r+n/500,o=r-e/200;return i=Xt(i)*wr,r=Xt(r)*Mr,o=Xt(o)*kr,new $t(Zt(3.2404542*i-1.5371385*r-.4985314*o),Zt(-.969266*i+1.8760108*r+.041556*o),Zt(.0556434*i-.2040259*r+1.0572252*o))}function Bt(t,n,e){return t>0?new Yt(Math.atan2(e,n)*cr,Math.sqrt(n*n+e*e),t):new Yt(NaN,NaN,t)}function Xt(t){return t>.206893034?t*t*t:(t-4/29)/7.787037}function Vt(t){return t>.008856?Math.pow(t,1/3):7.787037*t+4/29}function Zt(t){return Math.round(255*(t<=.00304?12.92*t:1.055*Math.pow(t,1/2.4)-.055))}function $t(t,n,e){return this instanceof $t?(this.r=~~t,this.g=~~n,void(this.b=~~e)):arguments.length<2?t instanceof $t?new $t(t.r,t.g,t.b):Jt(""+t,$t,Ft):new $t(t,n,e)}function Wt(t){return new $t(t>>16,t>>8&255,255&t)}function Gt(t){return t<16?"0"+Math.max(0,t).toString(16):Math.min(255,t).toString(16)}function Jt(t,n,e){var r,i,o,u=0,a=0,c=0;if(r=/([a-z]+)\((.*)\)/i.exec(t))switch(i=r[2].split(","),r[1]){case"hsl":return e(parseFloat(i[0]),parseFloat(i[1])/100,parseFloat(i[2])/100);case"rgb":return n(nn(i[0]),nn(i[1]),nn(i[2]))}return(o=Ar.get(t))?n(o.r,o.g,o.b):(null==t||"#"!==t.charAt(0)||isNaN(o=parseInt(t.slice(1),16))||(4===t.length?(u=(3840&o)>>4,u=u>>4|u,a=240&o,a=a>>4|a,c=15&o,c=c<<4|c):7===t.length&&(u=(16711680&o)>>16,a=(65280&o)>>8,c=255&o)),n(u,a,c))}function Qt(t,n,e){var r,i,o=Math.min(t/=255,n/=255,e/=255),u=Math.max(t,n,e),a=u-o,c=(u+o)/2;return a?(i=c<.5?a/(u+o):a/(2-u-o),r=t==u?(n-e)/a+(n<e?6:0):n==u?(e-t)/a+2:(t-n)/a+4,r*=60):(r=NaN,i=c>0&&c<1?0:r),new Ot(r,i,c)}function Kt(t,n,e){t=tn(t),n=tn(n),e=tn(e);var r=Vt((.4124564*t+.3575761*n+.1804375*e)/wr),i=Vt((.2126729*t+.7151522*n+.072175*e)/Mr),o=Vt((.0193339*t+.119192*n+.9503041*e)/kr);return jt(116*i-16,500*(r-i),200*(i-o))}function tn(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function nn(t){var n=parseFloat(t);return"%"===t.charAt(t.length-1)?Math.round(2.55*n):n}function en(t,n){t=qe.rgb(t),n=qe.rgb(n);var e=t.r,r=t.g,i=t.b,o=n.r-e,u=n.g-r,a=n.b-i;return function(t){return"#"+Gt(Math.round(e+o*t))+Gt(Math.round(r+u*t))+Gt(Math.round(i+a*t))}}function rn(t,n){var e,r={},i={};for(e in t)e in n?r[e]=cn(t[e],n[e]):i[e]=t[e];for(e in n)e in t||(i[e]=n[e]);return function(t){for(e in r)i[e]=r[e](t);return i}}function on(t,n){var e,r=[],i=[],o=t.length,u=n.length,a=Math.min(t.length,n.length);for(e=0;e<a;++e)r.push(cn(t[e],n[e]));for(;e<o;++e)i[e]=t[e];for(;e<u;++e)i[e]=n[e];return function(t){for(e=0;e<a;++e)i[e]=r[e](t);return i}}function un(t,n){return t=+t,n=+n,function(e){return t*(1-e)+n*e}}function an(t,n){var e,r,i,o=Nr.lastIndex=Er.lastIndex=0,u=-1,a=[],c=[];for(t+="",n+="";(e=Nr.exec(t))&&(r=Er.exec(n));)(i=r.index)>o&&(i=n.slice(o,i),a[u]?a[u]+=i:a[++u]=i),(e=e[0])===(r=r[0])?a[u]?a[u]+=r:a[++u]=r:(a[++u]=null,c.push({i:u,x:un(e,r)})),o=Er.lastIndex;return o<n.length&&(i=n.slice(o),a[u]?a[u]+=i:a[++u]=i),a.length<2?c[0]?(n=c[0].x,function(t){return n(t)+""}):function(){return n}:(n=c.length,function(t){for(var e,r=0;r<n;++r)a[(e=c[r]).i]=e.x(t);return a.join("")})}function cn(t,n){for(var e,r=qe.interpolators.length;--r>=0&&!(e=qe.interpolators[r](t,n)););return e}function sn(t,n){return n-=t,function(e){return Math.round(t+n*e)}}function ln(t,n){return n=(n-=t=+t)||1/n,function(e){return(e-t)/n}}function fn(t,n){return n=(n-=t=+t)||1/n,function(e){return Math.max(0,Math.min(1,(e-t)/n))}}function hn(t,n){return n-(t?Math.ceil(Math.log(t)/Math.LN10):1)}function pn(t,n){var e=Math.pow(10,3*fr(8-n));return{scale:n>8?function(t){return t/e}:function(t){return t*e},symbol:t}}function dn(t){var n=t.decimal,e=t.thousands,r=t.grouping,i=t.currency,o=r&&e?function(t,n){for(var i=t.length,o=[],u=0,a=r[0],c=0;i>0&&a>0&&(c+a+1>n&&(a=Math.max(1,n-c)),o.push(t.substring(i-=a,i+a)),!((c+=a+1)>n));)a=r[u=(u+1)%r.length];return o.reverse().join(e)}:tt;return function(t){var e=zr.exec(t),r=e[1]||" ",u=e[2]||">",a=e[3]||"-",c=e[4]||"",s=e[5],l=+e[6],f=e[7],h=e[8],p=e[9],d=1,g="",v="",y=!1,_=!0;switch(h&&(h=+h.substring(1)),(s||"0"===r&&"="===u)&&(s=r="0",u="="),p){case"n":f=!0,p="g";break;case"%":d=100,v="%",p="f";break;case"p":d=100,v="%",p="r";break;case"b":case"o":case"x":case"X":"#"===c&&(g="0"+p.toLowerCase());case"c":_=!1;case"d":y=!0,h=0;break;case"s":d=-1,p="r"}"$"===c&&(g=i[0],v=i[1]),"r"!=p||h||(p="g"),null!=h&&("g"==p?h=Math.max(1,Math.min(21,h)):"e"!=p&&"f"!=p||(h=Math.max(0,Math.min(20,h)))),p=Dr.get(p)||gn;var m=s&&f;return function(t){var e=v;if(y&&t%1)return"";var i=t<0||0===t&&1/t<0?(t=-t,"-"):"-"===a?"":a;if(d<0){var c=qe.formatPrefix(t,h);t=c.scale(t),e=c.symbol+v}else t*=d;t=p(t,h);var x,b,w=t.lastIndexOf(".");if(w<0){var M=_?t.lastIndexOf("e"):-1;M<0?(x=t,b=""):(x=t.substring(0,M),b=t.substring(M))}else x=t.substring(0,w),b=n+t.substring(w+1);!s&&f&&(x=o(x,1/0));var k=g.length+x.length+b.length+(m?0:i.length),T=k<l?new Array(k=l-k+1).join(r):"";return m&&(x=o(T+x,T.length?l-b.length:1/0)),i+=g,t=x+b,("<"===u?i+t+T:">"===u?T+i+t:"^"===u?T.substring(0,k>>=1)+i+t+T.substring(k):i+(m?t:T+t))+e}}}function gn(t){return t+""}function vn(){this._=new Date(arguments.length>1?Date.UTC.apply(this,arguments):arguments[0])}function yn(t,n,e){function r(n){var e=t(n),r=o(e,1);return n-e<r-n?e:r}function i(e){return n(e=t(new Pr(e-1)),1),e}function o(t,e){return n(t=new Pr((+t)),e),t}function u(t,r,o){var u=i(t),a=[];if(o>1)for(;u<r;)e(u)%o||a.push(new Date((+u))),n(u,1);else for(;u<r;)a.push(new Date((+u))),n(u,1);return a}function a(t,n,e){try{Pr=vn;var r=new vn;return r._=t,u(r,n,e)}finally{Pr=Date}}t.floor=t,t.round=r,t.ceil=i,t.offset=o,t.range=u;var c=t.utc=_n(t);return c.floor=c,c.round=_n(r),c.ceil=_n(i),c.offset=_n(o),c.range=a,t}function _n(t){return function(n,e){try{Pr=vn;var r=new vn;return r._=n,t(r,e)._}finally{Pr=Date}}}function mn(t){function n(t){function n(n){for(var e,i,o,u=[],a=-1,c=0;++a<r;)37===t.charCodeAt(a)&&(u.push(t.slice(c,a)),null!=(i=Ur[e=t.charAt(++a)])&&(e=t.charAt(++a)),(o=N[e])&&(e=o(n,null==i?"e"===e?" ":"0":i)),u.push(e),c=a+1);return u.push(t.slice(c,a)),u.join("")}var r=t.length;return n.parse=function(n){var r={y:1900,m:0,d:1,H:0,M:0,S:0,L:0,Z:null},i=e(r,t,n,0);if(i!=n.length)return null;"p"in r&&(r.H=r.H%12+12*r.p);var o=null!=r.Z&&Pr!==vn,u=new(o?vn:Pr);return"j"in r?u.setFullYear(r.y,0,r.j):"w"in r&&("W"in r||"U"in r)?(u.setFullYear(r.y,0,1),u.setFullYear(r.y,0,"W"in r?(r.w+6)%7+7*r.W-(u.getDay()+5)%7:r.w+7*r.U-(u.getDay()+6)%7)):u.setFullYear(r.y,r.m,r.d),u.setHours(r.H+(r.Z/100|0),r.M+r.Z%100,r.S,r.L),o?u._:u},n.toString=function(){return t},n}function e(t,n,e,r){for(var i,o,u,a=0,c=n.length,s=e.length;a<c;){if(r>=s)return-1;if(i=n.charCodeAt(a++),37===i){if(u=n.charAt(a++),o=E[u in Ur?n.charAt(a++):u],!o||(r=o(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}function r(t,n,e){w.lastIndex=0;var r=w.exec(n.slice(e));return r?(t.w=M.get(r[0].toLowerCase()),e+r[0].length):-1}function i(t,n,e){x.lastIndex=0;var r=x.exec(n.slice(e));return r?(t.w=b.get(r[0].toLowerCase()),e+r[0].length):-1}function o(t,n,e){S.lastIndex=0;var r=S.exec(n.slice(e));return r?(t.m=A.get(r[0].toLowerCase()),e+r[0].length):-1}function u(t,n,e){k.lastIndex=0;var r=k.exec(n.slice(e));return r?(t.m=T.get(r[0].toLowerCase()),e+r[0].length):-1}function a(t,n,r){return e(t,N.c.toString(),n,r)}function c(t,n,r){return e(t,N.x.toString(),n,r)}function s(t,n,r){return e(t,N.X.toString(),n,r)}function l(t,n,e){var r=m.get(n.slice(e,e+=2).toLowerCase());return null==r?-1:(t.p=r,e)}var f=t.dateTime,h=t.date,p=t.time,d=t.periods,g=t.days,v=t.shortDays,y=t.months,_=t.shortMonths;n.utc=function(t){function e(t){try{Pr=vn;var n=new Pr;return n._=t,r(n)}finally{Pr=Date}}var r=n(t);return e.parse=function(t){try{Pr=vn;var n=r.parse(t);return n&&n._}finally{Pr=Date}},e.toString=r.toString,e},n.multi=n.utc.multi=Fn;var m=qe.map(),x=bn(g),b=wn(g),w=bn(v),M=wn(v),k=bn(y),T=wn(y),S=bn(_),A=wn(_);d.forEach(function(t,n){m.set(t.toLowerCase(),n)});var N={a:function(t){return v[t.getDay()]},A:function(t){return g[t.getDay()]},b:function(t){return _[t.getMonth()]},B:function(t){return y[t.getMonth()]},c:n(f),d:function(t,n){return xn(t.getDate(),n,2)},e:function(t,n){return xn(t.getDate(),n,2)},H:function(t,n){return xn(t.getHours(),n,2)},I:function(t,n){return xn(t.getHours()%12||12,n,2)},j:function(t,n){return xn(1+Lr.dayOfYear(t),n,3)},L:function(t,n){return xn(t.getMilliseconds(),n,3)},m:function(t,n){return xn(t.getMonth()+1,n,2)},M:function(t,n){return xn(t.getMinutes(),n,2)},p:function(t){return d[+(t.getHours()>=12)]},S:function(t,n){return xn(t.getSeconds(),n,2)},U:function(t,n){return xn(Lr.sundayOfYear(t),n,2)},w:function(t){return t.getDay()},W:function(t,n){return xn(Lr.mondayOfYear(t),n,2)},x:n(h),X:n(p),y:function(t,n){return xn(t.getFullYear()%100,n,2)},Y:function(t,n){return xn(t.getFullYear()%1e4,n,4)},Z:Rn,"%":function(){return"%"}},E={a:r,A:i,b:o,B:u,c:a,d:zn,e:zn,H:Ln,I:Ln,j:Dn,L:Un,m:Cn,M:Pn,p:l,S:qn,U:kn,w:Mn,W:Tn,x:c,X:s,y:An,Y:Sn,Z:Nn,"%":On};return n}function xn(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",o=i.length;return r+(o<e?new Array(e-o+1).join(n)+i:i)}function bn(t){return new RegExp("^(?:"+t.map(qe.requote).join("|")+")","i")}function wn(t){for(var n=new g,e=-1,r=t.length;++e<r;)n.set(t[e].toLowerCase(),e);return n}function Mn(t,n,e){Rr.lastIndex=0;var r=Rr.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function kn(t,n,e){Rr.lastIndex=0;var r=Rr.exec(n.slice(e));return r?(t.U=+r[0],e+r[0].length):-1}function Tn(t,n,e){Rr.lastIndex=0;var r=Rr.exec(n.slice(e));return r?(t.W=+r[0],e+r[0].length):-1}function Sn(t,n,e){Rr.lastIndex=0;var r=Rr.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function An(t,n,e){Rr.lastIndex=0;var r=Rr.exec(n.slice(e,e+2));return r?(t.y=En(+r[0]),e+r[0].length):-1}function Nn(t,n,e){return/^[+-]\d{4}$/.test(n=n.slice(e,e+5))?(t.Z=-n,e+5):-1}function En(t){return t+(t>68?1900:2e3)}function Cn(t,n,e){Rr.lastIndex=0;var r=Rr.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function zn(t,n,e){Rr.lastIndex=0;var r=Rr.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function Dn(t,n,e){Rr.lastIndex=0;var r=Rr.exec(n.slice(e,e+3));return r?(t.j=+r[0],e+r[0].length):-1}function Ln(t,n,e){Rr.lastIndex=0;var r=Rr.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function Pn(t,n,e){Rr.lastIndex=0;var r=Rr.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function qn(t,n,e){Rr.lastIndex=0;var r=Rr.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function Un(t,n,e){Rr.lastIndex=0;var r=Rr.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function Rn(t){var n=t.getTimezoneOffset(),e=n>0?"-":"+",r=fr(n)/60|0,i=fr(n)%60;return e+xn(r,"0",2)+xn(i,"0",2)}function On(t,n,e){Or.lastIndex=0;var r=Or.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function Fn(t){for(var n=t.length,e=-1;++e<n;)t[e][0]=this(t[e][0]);return function(n){for(var e=0,r=t[e];!r[1](n);)r=t[++e];return r[0](n)}}function Yn(t,n,e,r){var i=e(t[0],t[1]),o=r(n[0],n[1]);return function(t){return o(i(t))}}function In(t,n){var e,r=0,i=t.length-1,o=t[r],u=t[i];return u<o&&(e=r,r=i,i=e,e=o,o=u,u=e),t[r]=n.floor(o),t[i]=n.ceil(u),t}function jn(t){return t?{floor:function(n){return Math.floor(n/t)*t},ceil:function(n){return Math.ceil(n/t)*t}}:Yr}function Hn(t){return{left:function(n,e,r,i){for(arguments.length<3&&(r=0),arguments.length<4&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)<0?r=o+1:i=o}return r},right:function(n,e,r,i){for(arguments.length<3&&(r=0),arguments.length<4&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)>0?i=o:r=o+1}return r}}}function Bn(t,n,e,r){var i=[],o=[],u=0,a=Math.min(t.length,n.length)-1;for(t[a]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++u<=a;)i.push(e(t[u-1],t[u])),o.push(r(n[u-1],n[u]));return function(n){var e=qe.bisect(t,n,1,a)-1;return o[e](i[e](n))}}function Xn(t){var n=t[0],e=t[t.length-1];return n<e?[n,e]:[e,n]}function Vn(t){return t.rangeExtent?t.rangeExtent():Xn(t.range())}function Zn(t,n,e,r){function i(){var i=Math.min(t.length,n.length)>2?Bn:Yn,c=r?fn:ln;return u=i(t,n,c,e),a=i(n,t,c,cn),o}function o(t){return u(t)}var u,a;return o.invert=function(t){return a(t)},o.domain=function(n){return arguments.length?(t=n.map(Number),i()):t},o.range=function(t){return arguments.length?(n=t,i()):n},o.rangeRound=function(t){return o.range(t).interpolate(sn)},o.clamp=function(t){return arguments.length?(r=t,i()):r},o.interpolate=function(t){return arguments.length?(e=t,i()):e},o.ticks=function(n){return Jn(t,n)},o.tickFormat=function(n,e){return Qn(t,n,e)},o.nice=function(n){return Wn(t,n),i()},o.copy=function(){return Zn(t,n,e,r)},i()}function $n(t,n){return qe.rebind(t,n,"range","rangeRound","interpolate","clamp")}function Wn(t,n){return In(t,jn(Gn(t,n)[2]))}function Gn(t,n){null==n&&(n=10);var e=Xn(t),r=e[1]-e[0],i=Math.pow(10,Math.floor(Math.log(r/n)/Math.LN10)),o=n/r*i;return o<=.15?i*=10:o<=.35?i*=5:o<=.75&&(i*=2),e[0]=Math.ceil(e[0]/i)*i,e[1]=Math.floor(e[1]/i)*i+.5*i,e[2]=i,e}function Jn(t,n){return qe.range.apply(qe,Gn(t,n))}function Qn(t,n,e){var r=Gn(t,n);if(e){var i=zr.exec(e);if(i.shift(),"s"===i[8]){var o=qe.formatPrefix(Math.max(fr(r[0]),fr(r[1])));return i[7]||(i[7]="."+Kn(o.scale(r[2]))),i[8]="f",e=qe.format(i.join("")),function(t){return e(o.scale(t))+o.symbol}}i[7]||(i[7]="."+te(i[8],r)),e=i.join("")}else e=",."+Kn(r[2])+"f";return qe.format(e)}function Kn(t){return-Math.floor(Math.log(t)/Math.LN10+.01)}function te(t,n){var e=Kn(n[2]);return t in Zr?Math.abs(e-Kn(Math.max(fr(n[0]),fr(n[1]))))+ +("e"!==t):e-2*("%"===t)}function ne(){var t=ee(),n=re()-t;n>24?(isFinite(n)&&(clearTimeout(Xr),Xr=setTimeout(ne,n)),Br=0):(Br=1,$r(ne))}function ee(){var t=Date.now();for(Vr=jr;Vr;)t>=Vr.t&&(Vr.f=Vr.c(t-Vr.t)),Vr=Vr.n;return t}function re(){for(var t,n=jr,e=1/0;n;)n.f?n=t?t.n=n.n:jr=n.n:(n.t<e&&(e=n.t),n=(t=n).n);return Hr=t,e}function ie(t){return function(){var n,e;(n=this[t])&&(e=n[n.active])&&(--n.count?delete n[n.active]:delete this[t],n.active+=.5,e.event&&e.event.interrupt.call(this,this.__data__,e.index))}}function oe(t,n,e){return je(t,Qr),t.namespace=n,t.id=e,t}function ue(t){var n=[t.a,t.b],e=[t.c,t.d],r=ce(n),i=ae(n,e),o=ce(se(e,n,-i))||0;n[0]*e[1]<e[0]*n[1]&&(n[0]*=-1,n[1]*=-1,r*=-1,i*=-1),this.rotate=(r?Math.atan2(n[1],n[0]):Math.atan2(-e[0],e[1]))*cr,this.translate=[t.e,t.f],this.scale=[r,o],this.skew=o?Math.atan2(i,o)*cr:0}function ae(t,n){return t[0]*n[0]+t[1]*n[1]}function ce(t){var n=Math.sqrt(ae(t,t));return n&&(t[0]/=n,t[1]/=n),n}function se(t,n,e){return t[0]+=e*n[0],t[1]+=e*n[1],t}function le(t,n){var e,r=[],i=[],o=qe.transform(t),u=qe.transform(n),a=o.translate,c=u.translate,s=o.rotate,l=u.rotate,f=o.skew,h=u.skew,p=o.scale,d=u.scale;return a[0]!=c[0]||a[1]!=c[1]?(r.push("translate(",null,",",null,")"),i.push({i:1,x:un(a[0],c[0])},{i:3,x:un(a[1],c[1])})):c[0]||c[1]?r.push("translate("+c+")"):r.push(""),s!=l?(s-l>180?l+=360:l-s>180&&(s+=360),i.push({i:r.push(r.pop()+"rotate(",null,")")-2,x:un(s,l)})):l&&r.push(r.pop()+"rotate("+l+")"),f!=h?i.push({i:r.push(r.pop()+"skewX(",null,")")-2,x:un(f,h)}):h&&r.push(r.pop()+"skewX("+h+")"),p[0]!=d[0]||p[1]!=d[1]?(e=r.push(r.pop()+"scale(",null,",",null,")"),i.push({i:e-4,x:un(p[0],d[0])},{i:e-2,x:un(p[1],d[1])})):1==d[0]&&1==d[1]||r.push(r.pop()+"scale("+d+")"),e=i.length,function(t){for(var n,o=-1;++o<e;)r[(n=i[o]).i]=n.x(t);return r.join("")}}function fe(t,n,e,r){var i=t.id,o=t.namespace;return R(t,"function"==typeof e?function(t,u,a){t[o][i].tween.set(n,r(e.call(t,t.__data__,u,a)))}:(e=r(e),function(t){t[o][i].tween.set(n,e)}))}function he(t){return null==t&&(t=""),function(){this.textContent=t}}function pe(t){return function(n){return n<=0?0:n>=1?1:t(n)}}function de(t){return function(n){return 1-t(1-n)}}function ge(t){return function(n){return.5*(n<.5?t(2*n):2-t(2-2*n))}}function ve(t){return t*t}function ye(t){return t*t*t}function _e(t){if(t<=0)return 0;if(t>=1)return 1;var n=t*t,e=n*t;return 4*(t<.5?e:3*(t-n)+e-.75)}function me(t){return function(n){return Math.pow(n,t)}}function xe(t){return 1-Math.cos(t*ur)}function be(t){return Math.pow(2,10*(t-1))}function we(t){return 1-Math.sqrt(1-t*t)}function Me(t,n){var e;return arguments.length<2&&(n=.45),arguments.length?e=n/ir*Math.asin(1/t):(t=1,e=n/4),function(r){return 1+t*Math.pow(2,-10*r)*Math.sin((r-e)*ir/n)}}function ke(t){return t||(t=1.70158),function(n){return n*n*((t+1)*n-t)}}function Te(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375}function Se(t){return null==t?"__transition__":"__transition_"+t+"__"}function Ae(t,n,e,r,i){var o=t[e]||(t[e]={active:0,count:0}),u=o[r];if(!u){var a=i.time;u=o[r]={tween:new g,time:a,delay:i.delay,duration:i.duration,ease:i.ease,index:n},i=null,++o.count,qe.timer(function(i){function c(e){if(o.active>r)return l();var i=o[o.active];i&&(--o.count,delete o[o.active],i.event&&i.event.interrupt.call(t,t.__data__,i.index)),o.active=r,u.event&&u.event.start.call(t,t.__data__,n),u.tween.forEach(function(e,r){(r=r.call(t,t.__data__,n))&&g.push(r)}),h=u.ease,f=u.duration,qe.timer(function(){return d.c=s(e||1)?nt:s,1},0,a)}function s(e){if(o.active!==r)return 1;for(var i=e/f,a=h(i),c=g.length;c>0;)g[--c].call(t,a);return i>=1?(u.event&&u.event.end.call(t,t.__data__,n),l()):void 0}function l(){return--o.count?delete o[r]:delete t[e],1}var f,h,p=u.delay,d=Vr,g=[];return d.t=p+a,p<=i?c(i-p):void(d.c=c)},0,a)}}function Ne(t,n,e){t.attr("transform",function(t){var r=n(t);return"translate("+(isFinite(r)?r:e(t))+",0)"})}function Ee(t,n,e){t.attr("transform",function(t){var r=n(t);return"translate(0,"+(isFinite(r)?r:e(t))+")"})}function Ce(){var t=".dragsuppress-"+ ++ai,n="click"+t,e=qe.select(Ye).on("touchmove"+t,z).on("dragstart"+t,z).on("selectstart"+t,z);if(ui){var r=Fe.style,i=r[ui];r[ui]="none"}return function(o){if(e.on(t,null),ui&&(r[ui]=i),o){var u=function(){e.on(n,null)};e.on(n,function(){z(),u()},!0),setTimeout(u,0)}}}function ze(t,n){n.changedTouches&&(n=n.changedTouches[0]);var e=t.ownerSVGElement||t;if(e.createSVGPoint){var r=e.createSVGPoint();if(ci<0&&(Ye.scrollX||Ye.scrollY)){e=qe.select("body").append("svg").style({position:"absolute",top:0,left:0,margin:0,padding:0,border:"none"},"important");var i=e[0][0].getScreenCTM();ci=!(i.f||i.e),e.remove()}return ci?(r.x=n.pageX,r.y=n.pageY):(r.x=n.clientX,r.y=n.clientY),r=r.matrixTransform(t.getScreenCTM().inverse()),[r.x,r.y]}var o=t.getBoundingClientRect();return[n.clientX-o.left-t.clientLeft,n.clientY-o.top-t.clientTop]}function De(t){return t.toISOString()}function Le(t,n,e){function r(n){return t(n)}function i(t,e){var r=t[1]-t[0],i=r/e,o=qe.bisect(di,i);return o==di.length?[n.year,Gn(t.map(function(t){return t/31536e6}),e)[2]]:o?n[i/di[o-1]<di[o]/i?o-1:o]:[yi,Gn(t,e)[2]]}return r.invert=function(n){return Pe(t.invert(n))},r.domain=function(n){return arguments.length?(t.domain(n),r):t.domain().map(Pe)},r.nice=function(t,n){function e(e){return!isNaN(e)&&!t.range(e,Pe(+e+1),n).length}var o=r.domain(),u=Xn(o),a=null==t?i(u,10):"number"==typeof t&&i(u,t);return a&&(t=a[0],n=a[1]),r.domain(In(o,n>1?{floor:function(n){for(;e(n=t.floor(n));)n=Pe(n-1);return n},ceil:function(n){for(;e(n=t.ceil(n));)n=Pe(+n+1);return n}}:t))},r.ticks=function(t,n){var e=Xn(r.domain()),o=null==t?i(e,10):"number"==typeof t?i(e,t):!t.range&&[{range:t},n];return o&&(t=o[0],n=o[1]),t.range(e[0],Pe(+e[1]+1),n<1?1:n)},r.tickFormat=function(){return e},r.copy=function(){return Le(t.copy(),n,e);
},$n(r,t)}function Pe(t){return new Date(t)}var qe={version:"3.5.3"},Ue=[].slice,Re=function(t){return Ue.call(t)},Oe=document,Fe=Oe.documentElement,Ye=window;try{Re(Fe.childNodes)[0].nodeType}catch(Ie){Re=function(t){for(var n=t.length,e=new Array(n);n--;)e[n]=t[n];return e}}var je={}.__proto__?function(t,n){t.__proto__=n}:function(t,n){for(var e in n)t[e]=n[e]},He=["webkit","ms","moz","Moz","o","O"],Be=function(t,n){return n.querySelector(t)},Xe=function(t,n){return n.querySelectorAll(t)},Ve=Fe.matches||Fe[t(Fe,"matchesSelector")],Ze=function(t,n){return Ve.call(t,n)};"function"==typeof Sizzle&&(Be=function(t,n){return Sizzle(t,n)[0]||null},Xe=Sizzle,Ze=Sizzle.matchesSelector),qe.selection=function(){return nr};var $e=qe.selection.prototype=[];$e.selectAll=function(t){var n,i,o=[];t=r(t);for(var u=-1,a=this.length;++u<a;)for(var c=this[u],s=-1,l=c.length;++s<l;)(i=c[s])&&(o.push(n=Re(t.call(i,i.__data__,s,u))),n.parentNode=i);return e(o)};var We={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};qe.ns={prefix:We,qualify:function(t){var n=t.indexOf(":"),e=t;return n>=0&&(e=t.slice(0,n),t=t.slice(n+1)),We.hasOwnProperty(e)?{space:We[e],local:t}:t}},$e.attr=function(t,n){if(arguments.length<2){if("string"==typeof t){var e=this.node();return t=qe.ns.qualify(t),t.local?e.getAttributeNS(t.space,t.local):e.getAttribute(t)}for(n in t)this.each(i(n,t[n]));return this}return this.each(i(t,n))},qe.requote=function(t){return t.replace(Ge,"\\$&")};var Ge=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;$e.classed=function(t,n){if(arguments.length<2){if("string"==typeof t){var e=this.node(),r=(t=a(t)).length,i=-1;if(n=e.classList){for(;++i<r;)if(!n.contains(t[i]))return!1}else for(n=e.getAttribute("class");++i<r;)if(!u(t[i]).test(n))return!1;return!0}for(n in t)this.each(c(n,t[n]));return this}return this.each(c(t,n))},$e.style=function(t,n,e){var r=arguments.length;if(r<3){if("string"!=typeof t){r<2&&(n="");for(e in t)this.each(l(e,t[e],n));return this}if(r<2)return Ye.getComputedStyle(this.node(),null).getPropertyValue(t);e=""}return this.each(l(t,n,e))},$e.property=function(t,n){if(arguments.length<2){if("string"==typeof t)return this.node()[t];for(n in t)this.each(f(n,t[n]));return this}return this.each(f(t,n))},$e.text=function(t){return arguments.length?this.each("function"==typeof t?function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}:null==t?function(){this.textContent=""}:function(){this.textContent=t}):this.node().textContent},$e.html=function(t){return arguments.length?this.each("function"==typeof t?function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}:null==t?function(){this.innerHTML=""}:function(){this.innerHTML=t}):this.node().innerHTML},$e.append=function(t){return t=h(t),this.select(function(){return this.appendChild(t.apply(this,arguments))})},$e.insert=function(t,n){return t=h(t),n=Y(n),this.select(function(){return this.insertBefore(t.apply(this,arguments),n.apply(this,arguments)||null)})},$e.remove=function(){return this.each(p)},qe.map=function(t,n){var e=new g;if(t instanceof g)t.forEach(function(t,n){e.set(t,n)});else if(Array.isArray(t)){var r,i=-1,o=t.length;if(1===arguments.length)for(;++i<o;)e.set(i,t[i]);else for(;++i<o;)e.set(n.call(t,r=t[i],i),r)}else for(var u in t)e.set(u,t[u]);return e};var Je="__proto__",Qe="\0";d(g,{has:_,get:function(t){return this._[v(t)]},set:function(t,n){return this._[v(t)]=n},remove:m,keys:x,values:function(){var t=[];for(var n in this._)t.push(this._[n]);return t},entries:function(){var t=[];for(var n in this._)t.push({key:y(n),value:this._[n]});return t},size:b,empty:w,forEach:function(t){for(var n in this._)t.call(this,y(n),this._[n])}}),qe.set=function(t){var n=new M;if(t)for(var e=0,r=t.length;e<r;++e)n.add(t[e]);return n},d(M,{has:_,add:function(t){return this._[v(t+="")]=!0,t},remove:m,values:x,size:b,empty:w,forEach:function(t){for(var n in this._)t.call(this,y(n))}}),$e.data=function(t,n){function r(t,e){var r,i,o,u=t.length,a=e.length,f=Math.min(u,a),h=new Array(a),p=new Array(a),d=new Array(u);if(n){var v,y=new g,_=new Array(u);for(r=-1;++r<u;)y.has(v=n.call(i=t[r],i.__data__,r))?d[r]=i:y.set(v,i),_[r]=v;for(r=-1;++r<a;)(i=y.get(v=n.call(e,o=e[r],r)))?i!==!0&&(h[r]=i,i.__data__=o):p[r]=k(o),y.set(v,!0);for(r=-1;++r<u;)y.get(_[r])!==!0&&(d[r]=t[r])}else{for(r=-1;++r<f;)i=t[r],o=e[r],i?(i.__data__=o,h[r]=i):p[r]=k(o);for(;r<a;++r)p[r]=k(e[r]);for(;r<u;++r)d[r]=t[r]}p.update=h,p.parentNode=h.parentNode=d.parentNode=t.parentNode,c.push(p),s.push(h),l.push(d)}var i,o,u=-1,a=this.length;if(!arguments.length){for(t=new Array(a=(i=this[0]).length);++u<a;)(o=i[u])&&(t[u]=o.__data__);return t}var c=O([]),s=e([]),l=e([]);if("function"==typeof t)for(;++u<a;)r(i=this[u],t.call(i,i.parentNode.__data__,u));else for(;++u<a;)r(i=this[u],t);return s.enter=function(){return c},s.exit=function(){return l},s},$e.datum=function(t){return arguments.length?this.property("__data__",t):this.property("__data__")},$e.filter=function(t){var n,r,i,o=[];"function"!=typeof t&&(t=T(t));for(var u=0,a=this.length;u<a;u++){o.push(n=[]),n.parentNode=(r=this[u]).parentNode;for(var c=0,s=r.length;c<s;c++)(i=r[c])&&t.call(i,i.__data__,c,u)&&n.push(i)}return e(o)},$e.order=function(){for(var t=-1,n=this.length;++t<n;)for(var e,r=this[t],i=r.length-1,o=r[i];--i>=0;)(e=r[i])&&(o&&o!==e.nextSibling&&o.parentNode.insertBefore(e,o),o=e);return this},qe.ascending=S,$e.sort=function(t){t=A.apply(this,arguments);for(var n=-1,e=this.length;++n<e;)this[n].sort(t);return this.order()},qe.dispatch=function(){for(var t=new E,n=-1,e=arguments.length;++n<e;)t[arguments[n]]=C(t);return t},E.prototype.on=function(t,n){var e=t.indexOf("."),r="";if(e>=0&&(r=t.slice(e+1),t=t.slice(0,e)),t)return arguments.length<2?this[t].on(r):this[t].on(r,n);if(2===arguments.length){if(null==n)for(t in this)this.hasOwnProperty(t)&&this[t].on(r,null);return this}},qe.event=null,$e.on=function(t,n,e){var r=arguments.length;if(r<3){if("string"!=typeof t){r<2&&(n=!1);for(e in t)this.each(P(e,t[e],n));return this}if(r<2)return(r=this.node()["__on"+t])&&r._;e=!1}return this.each(P(t,n,e))};var Ke=qe.map({mouseenter:"mouseover",mouseleave:"mouseout"});Ke.forEach(function(t){"on"+t in Oe&&Ke.remove(t)}),$e.each=function(t){return R(this,function(n,e,r){t.call(n,n.__data__,e,r)})},$e.call=function(t){var n=Re(arguments);return t.apply(n[0]=this,n),this},$e.empty=function(){return!this.node()},$e.node=function(){for(var t=0,n=this.length;t<n;t++)for(var e=this[t],r=0,i=e.length;r<i;r++){var o=e[r];if(o)return o}return null},$e.size=function(){var t=0;return R(this,function(){++t}),t};var tr=[];qe.selection.enter=O,qe.selection.enter.prototype=tr,tr.append=$e.append,tr.empty=$e.empty,tr.node=$e.node,tr.call=$e.call,tr.size=$e.size,tr.select=function(t){for(var n,r,i,o,u,a=[],c=-1,s=this.length;++c<s;){i=(o=this[c]).update,a.push(n=[]),n.parentNode=o.parentNode;for(var l=-1,f=o.length;++l<f;)(u=o[l])?(n.push(i[l]=r=t.call(o.parentNode,u.__data__,l,c)),r.__data__=u.__data__):n.push(null)}return e(a)},tr.insert=function(t,n){return arguments.length<2&&(n=F(this)),$e.insert.call(this,t,n)},qe.select=function(t){var n=["string"==typeof t?Be(t,Oe):t];return n.parentNode=Fe,e([n])},qe.selectAll=function(t){var n=Re("string"==typeof t?Xe(t,Oe):t);return n.parentNode=Fe,e([n])};var nr=qe.select(Fe);$e.select=function(t){var n,r,i,o,u=[];t=Y(t);for(var a=-1,c=this.length;++a<c;){u.push(n=[]),n.parentNode=(i=this[a]).parentNode;for(var s=-1,l=i.length;++s<l;)(o=i[s])?(n.push(r=t.call(o,o.__data__,s,a)),r&&"__data__"in o&&(r.__data__=o.__data__)):n.push(null)}return e(u)},qe.svg={},qe.functor=I;var er=1e-6,rr=Math.PI,ir=2*rr,or=ir-er,ur=rr/2,ar=rr/180,cr=180/rr;qe.geom={},qe.geom.polygon=function(t){return je(t,sr),t};var sr=qe.geom.polygon.prototype=[];sr.area=function(){for(var t,n=-1,e=this.length,r=this[e-1],i=0;++n<e;)t=r,r=this[n],i+=t[1]*r[0]-t[0]*r[1];return.5*i},sr.centroid=function(t){var n,e,r=-1,i=this.length,o=0,u=0,a=this[i-1];for(arguments.length||(t=-1/(6*this.area()));++r<i;)n=a,a=this[r],e=n[0]*a[1]-a[0]*n[1],o+=(n[0]+a[0])*e,u+=(n[1]+a[1])*e;return[o*t,u*t]},sr.clip=function(t){for(var n,e,r,i,o,u,a=V(t),c=-1,s=this.length-V(this),l=this[s-1];++c<s;){for(n=t.slice(),t.length=0,i=this[c],o=n[(r=n.length-a)-1],e=-1;++e<r;)u=n[e],B(u,l,i)?(B(o,l,i)||t.push(X(o,u,l,i)),t.push(u)):B(o,l,i)&&t.push(X(o,u,l,i)),o=u;a&&t.push(t[0]),l=i}return t},qe.svg.arc=function(){function t(){var t=Math.max(0,+e.apply(this,arguments)),s=Math.max(0,+r.apply(this,arguments)),l=u.apply(this,arguments)-ur,f=a.apply(this,arguments)-ur,h=Math.abs(f-l),p=l>f?0:1;if(s<t&&(d=s,s=t,t=d),h>=or)return n(s,p)+(t?n(t,1-p):"")+"Z";var d,g,v,y,_,m,x,b,w,M,k,T,S=0,A=0,N=[];if((y=(+c.apply(this,arguments)||0)/2)&&(v=o===lr?Math.sqrt(t*t+s*s):+o.apply(this,arguments),p||(A*=-1),s&&(A=H(v/s*Math.sin(y))),t&&(S=H(v/t*Math.sin(y)))),s){_=s*Math.cos(l+A),m=s*Math.sin(l+A),x=s*Math.cos(f-A),b=s*Math.sin(f-A);var E=Math.abs(f-l-2*A)<=rr?0:1;if(A&&Q(_,m,x,b)===p^E){var C=(l+f)/2;_=s*Math.cos(C),m=s*Math.sin(C),x=b=null}}else _=m=0;if(t){w=t*Math.cos(f-S),M=t*Math.sin(f-S),k=t*Math.cos(l+S),T=t*Math.sin(l+S);var z=Math.abs(l-f+2*S)<=rr?0:1;if(S&&Q(w,M,k,T)===1-p^z){var D=(l+f)/2;w=t*Math.cos(D),M=t*Math.sin(D),k=T=null}}else w=M=0;if((d=Math.min(Math.abs(s-t)/2,+i.apply(this,arguments)))>.001){g=t<s^p?0:1;var L=null==k?[w,M]:null==x?[_,m]:X([_,m],[k,T],[x,b],[w,M]),P=_-L[0],q=m-L[1],U=x-L[0],R=b-L[1],O=1/Math.sin(Math.acos((P*U+q*R)/(Math.sqrt(P*P+q*q)*Math.sqrt(U*U+R*R)))/2),F=Math.sqrt(L[0]*L[0]+L[1]*L[1]);if(null!=x){var Y=Math.min(d,(s-F)/(O+1)),I=K(null==k?[w,M]:[k,T],[_,m],s,Y,p),j=K([x,b],[w,M],s,Y,p);d===Y?N.push("M",I[0],"A",Y,",",Y," 0 0,",g," ",I[1],"A",s,",",s," 0 ",1-p^Q(I[1][0],I[1][1],j[1][0],j[1][1]),",",p," ",j[1],"A",Y,",",Y," 0 0,",g," ",j[0]):N.push("M",I[0],"A",Y,",",Y," 0 1,",g," ",j[0])}else N.push("M",_,",",m);if(null!=k){var B=Math.min(d,(t-F)/(O-1)),V=K([_,m],[k,T],t,-B,p),Z=K([w,M],null==x?[_,m]:[x,b],t,-B,p);d===B?N.push("L",Z[0],"A",B,",",B," 0 0,",g," ",Z[1],"A",t,",",t," 0 ",p^Q(Z[1][0],Z[1][1],V[1][0],V[1][1]),",",1-p," ",V[1],"A",B,",",B," 0 0,",g," ",V[0]):N.push("L",Z[0],"A",B,",",B," 0 0,",g," ",V[0])}else N.push("L",w,",",M)}else N.push("M",_,",",m),null!=x&&N.push("A",s,",",s," 0 ",E,",",p," ",x,",",b),N.push("L",w,",",M),null!=k&&N.push("A",t,",",t," 0 ",z,",",1-p," ",k,",",T);return N.push("Z"),N.join("")}function n(t,n){return"M0,"+t+"A"+t+","+t+" 0 1,"+n+" 0,"+-t+"A"+t+","+t+" 0 1,"+n+" 0,"+t}var e=Z,r=$,i=j,o=lr,u=W,a=G,c=J;return t.innerRadius=function(n){return arguments.length?(e=I(n),t):e},t.outerRadius=function(n){return arguments.length?(r=I(n),t):r},t.cornerRadius=function(n){return arguments.length?(i=I(n),t):i},t.padRadius=function(n){return arguments.length?(o=n==lr?lr:I(n),t):o},t.startAngle=function(n){return arguments.length?(u=I(n),t):u},t.endAngle=function(n){return arguments.length?(a=I(n),t):a},t.padAngle=function(n){return arguments.length?(c=I(n),t):c},t.centroid=function(){var t=(+e.apply(this,arguments)+ +r.apply(this,arguments))/2,n=(+u.apply(this,arguments)+ +a.apply(this,arguments))/2-ur;return[Math.cos(n)*t,Math.sin(n)*t]},t};var lr="auto",fr=Math.abs;qe.svg.line=function(){return it(tt)};var hr=qe.map({linear:ot,"linear-closed":ut,step:at,"step-before":ct,"step-after":st,basis:gt,"basis-open":vt,"basis-closed":yt,bundle:_t,cardinal:ht,"cardinal-open":lt,"cardinal-closed":ft,monotone:kt});hr.forEach(function(t,n){n.key=t,n.closed=/-closed$/.test(t)});var pr=[0,2/3,1/3,0],dr=[0,1/3,2/3,0],gr=[0,1/6,2/3,1/6];qe.svg.line.radial=function(){var t=it(Tt);return t.radius=t.x,delete t.x,t.angle=t.y,delete t.y,t},ct.reverse=st,st.reverse=ct,qe.svg.area=function(){return St(tt)},qe.svg.area.radial=function(){var t=St(Tt);return t.radius=t.x,delete t.x,t.innerRadius=t.x0,delete t.x0,t.outerRadius=t.x1,delete t.x1,t.angle=t.y,delete t.y,t.startAngle=t.y0,delete t.y0,t.endAngle=t.y1,delete t.y1,t},qe.svg.chord=function(){function t(t,a){var c=n(this,o,t,a),s=n(this,u,t,a);return"M"+c.p0+r(c.r,c.p1,c.a1-c.a0)+(e(c,s)?i(c.r,c.p1,c.r,c.p0):i(c.r,c.p1,s.r,s.p0)+r(s.r,s.p1,s.a1-s.a0)+i(s.r,s.p1,c.r,c.p0))+"Z"}function n(t,n,e,r){var i=n.call(t,e,r),o=a.call(t,i,r),u=c.call(t,i,r)-ur,l=s.call(t,i,r)-ur;return{r:o,a0:u,a1:l,p0:[o*Math.cos(u),o*Math.sin(u)],p1:[o*Math.cos(l),o*Math.sin(l)]}}function e(t,n){return t.a0==n.a0&&t.a1==n.a1}function r(t,n,e){return"A"+t+","+t+" 0 "+ +(e>rr)+",1 "+n}function i(t,n,e,r){return"Q 0,0 "+r}var o=At,u=Nt,a=Et,c=W,s=G;return t.radius=function(n){return arguments.length?(a=I(n),t):a},t.source=function(n){return arguments.length?(o=I(n),t):o},t.target=function(n){return arguments.length?(u=I(n),t):u},t.startAngle=function(n){return arguments.length?(c=I(n),t):c},t.endAngle=function(n){return arguments.length?(s=I(n),t):s},t},qe.svg.diagonal=function(){function t(t,i){var o=n.call(this,t,i),u=e.call(this,t,i),a=(o.y+u.y)/2,c=[o,{x:o.x,y:a},{x:u.x,y:a},u];return c=c.map(r),"M"+c[0]+"C"+c[1]+" "+c[2]+" "+c[3]}var n=At,e=Nt,r=Ct;return t.source=function(e){return arguments.length?(n=I(e),t):n},t.target=function(n){return arguments.length?(e=I(n),t):e},t.projection=function(n){return arguments.length?(r=n,t):r},t},qe.svg.diagonal.radial=function(){var t=qe.svg.diagonal(),n=Ct,e=t.projection;return t.projection=function(t){return arguments.length?e(zt(n=t)):n},t},qe.svg.symbol=function(){function t(t,r){return(vr.get(n.call(this,t,r))||Pt)(e.call(this,t,r))}var n=Lt,e=Dt;return t.type=function(e){return arguments.length?(n=I(e),t):n},t.size=function(n){return arguments.length?(e=I(n),t):e},t};var vr=qe.map({circle:Pt,cross:function(t){var n=Math.sqrt(t/5)/2;return"M"+-3*n+","+-n+"H"+-n+"V"+-3*n+"H"+n+"V"+-n+"H"+3*n+"V"+n+"H"+n+"V"+3*n+"H"+-n+"V"+n+"H"+-3*n+"Z"},diamond:function(t){var n=Math.sqrt(t/(2*_r)),e=n*_r;return"M0,"+-n+"L"+e+",0 0,"+n+" "+-e+",0Z"},square:function(t){var n=Math.sqrt(t)/2;return"M"+-n+","+-n+"L"+n+","+-n+" "+n+","+n+" "+-n+","+n+"Z"},"triangle-down":function(t){var n=Math.sqrt(t/yr),e=n*yr/2;return"M0,"+e+"L"+n+","+-e+" "+-n+","+-e+"Z"},"triangle-up":function(t){var n=Math.sqrt(t/yr),e=n*yr/2;return"M0,"+-e+"L"+n+","+e+" "+-n+","+e+"Z"}});qe.svg.symbolTypes=vr.keys();var yr=Math.sqrt(3),_r=Math.tan(30*ar);qe.range=function(t,n,e){if(arguments.length<3&&(e=1,arguments.length<2&&(n=t,t=0)),(n-t)/e===1/0)throw new Error("infinite range");var r,i=[],o=qt(fr(e)),u=-1;if(t*=o,n*=o,e*=o,e<0)for(;(r=t+e*++u)>n;)i.push(r/o);else for(;(r=t+e*++u)<n;)i.push(r/o);return i},qe.rebind=function(t,n){for(var e,r=1,i=arguments.length;++r<i;)t[e=arguments[r]]=Ut(t,n,n[e]);return t},qe.color=Rt,Rt.prototype.toString=function(){return this.rgb()+""},qe.hsl=Ot;var mr=Ot.prototype=new Rt;mr.brighter=function(t){return t=Math.pow(.7,arguments.length?t:1),new Ot(this.h,this.s,this.l/t)},mr.darker=function(t){return t=Math.pow(.7,arguments.length?t:1),new Ot(this.h,this.s,t*this.l)},mr.rgb=function(){return Ft(this.h,this.s,this.l)},qe.hcl=Yt;var xr=Yt.prototype=new Rt;xr.brighter=function(t){return new Yt(this.h,this.c,Math.min(100,this.l+br*(arguments.length?t:1)))},xr.darker=function(t){return new Yt(this.h,this.c,Math.max(0,this.l-br*(arguments.length?t:1)))},xr.rgb=function(){return It(this.h,this.c,this.l).rgb()},qe.lab=jt;var br=18,wr=.95047,Mr=1,kr=1.08883,Tr=jt.prototype=new Rt;Tr.brighter=function(t){return new jt(Math.min(100,this.l+br*(arguments.length?t:1)),this.a,this.b)},Tr.darker=function(t){return new jt(Math.max(0,this.l-br*(arguments.length?t:1)),this.a,this.b)},Tr.rgb=function(){return Ht(this.l,this.a,this.b)},qe.rgb=$t;var Sr=$t.prototype=new Rt;Sr.brighter=function(t){t=Math.pow(.7,arguments.length?t:1);var n=this.r,e=this.g,r=this.b,i=30;return n||e||r?(n&&n<i&&(n=i),e&&e<i&&(e=i),r&&r<i&&(r=i),new $t(Math.min(255,n/t),Math.min(255,e/t),Math.min(255,r/t))):new $t(i,i,i)},Sr.darker=function(t){return t=Math.pow(.7,arguments.length?t:1),new $t(t*this.r,t*this.g,t*this.b)},Sr.hsl=function(){return Qt(this.r,this.g,this.b)},Sr.toString=function(){return"#"+Gt(this.r)+Gt(this.g)+Gt(this.b)};var Ar=qe.map({aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074});Ar.forEach(function(t,n){Ar.set(t,Wt(n))}),qe.interpolateRgb=en,qe.interpolateObject=rn,qe.interpolateArray=on,qe.interpolateNumber=un,qe.interpolateString=an;var Nr=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Er=new RegExp(Nr.source,"g");qe.interpolate=cn,qe.interpolators=[function(t,n){var e=typeof n;return("string"===e?Ar.has(n)||/^(#|rgb\(|hsl\()/.test(n)?en:an:n instanceof Rt?en:Array.isArray(n)?on:"object"===e&&isNaN(n)?rn:un)(t,n)}],qe.interpolateRound=sn,qe.round=function(t,n){return n?Math.round(t*(n=Math.pow(10,n)))/n:Math.round(t)};var Cr=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"].map(pn);qe.formatPrefix=function(t,n){var e=0;return t&&(t<0&&(t*=-1),n&&(t=qe.round(t,hn(t,n))),e=1+Math.floor(1e-12+Math.log(t)/Math.LN10),e=Math.max(-24,Math.min(24,3*Math.floor((e-1)/3)))),Cr[8+e/3]};var zr=/(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i,Dr=qe.map({b:function(t){return t.toString(2)},c:function(t){return String.fromCharCode(t)},o:function(t){return t.toString(8)},x:function(t){return t.toString(16)},X:function(t){return t.toString(16).toUpperCase()},g:function(t,n){return t.toPrecision(n)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},r:function(t,n){return(t=qe.round(t,hn(t,n))).toFixed(Math.max(0,Math.min(20,hn(t*(1+1e-15),n))))}}),Lr=qe.time={},Pr=Date;vn.prototype={getDate:function(){return this._.getUTCDate()},getDay:function(){return this._.getUTCDay()},getFullYear:function(){return this._.getUTCFullYear()},getHours:function(){return this._.getUTCHours()},getMilliseconds:function(){return this._.getUTCMilliseconds()},getMinutes:function(){return this._.getUTCMinutes()},getMonth:function(){return this._.getUTCMonth()},getSeconds:function(){return this._.getUTCSeconds()},getTime:function(){return this._.getTime()},getTimezoneOffset:function(){return 0},valueOf:function(){return this._.valueOf()},setDate:function(){qr.setUTCDate.apply(this._,arguments)},setDay:function(){qr.setUTCDay.apply(this._,arguments)},setFullYear:function(){qr.setUTCFullYear.apply(this._,arguments)},setHours:function(){qr.setUTCHours.apply(this._,arguments)},setMilliseconds:function(){qr.setUTCMilliseconds.apply(this._,arguments)},setMinutes:function(){qr.setUTCMinutes.apply(this._,arguments)},setMonth:function(){qr.setUTCMonth.apply(this._,arguments)},setSeconds:function(){qr.setUTCSeconds.apply(this._,arguments)},setTime:function(){qr.setTime.apply(this._,arguments)}};var qr=Date.prototype;Lr.year=yn(function(t){return t=Lr.day(t),t.setMonth(0,1),t},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t){return t.getFullYear()}),Lr.years=Lr.year.range,Lr.years.utc=Lr.year.utc.range,Lr.day=yn(function(t){var n=new Pr(2e3,0);return n.setFullYear(t.getFullYear(),t.getMonth(),t.getDate()),n},function(t,n){t.setDate(t.getDate()+n)},function(t){return t.getDate()-1}),Lr.days=Lr.day.range,Lr.days.utc=Lr.day.utc.range,Lr.dayOfYear=function(t){var n=Lr.year(t);return Math.floor((t-n-6e4*(t.getTimezoneOffset()-n.getTimezoneOffset()))/864e5)},["sunday","monday","tuesday","wednesday","thursday","friday","saturday"].forEach(function(t,n){n=7-n;var e=Lr[t]=yn(function(t){return(t=Lr.day(t)).setDate(t.getDate()-(t.getDay()+n)%7),t},function(t,n){t.setDate(t.getDate()+7*Math.floor(n))},function(t){var e=Lr.year(t).getDay();return Math.floor((Lr.dayOfYear(t)+(e+n)%7)/7)-(e!==n)});Lr[t+"s"]=e.range,Lr[t+"s"].utc=e.utc.range,Lr[t+"OfYear"]=function(t){var e=Lr.year(t).getDay();return Math.floor((Lr.dayOfYear(t)+(e+n)%7)/7)}}),Lr.week=Lr.sunday,Lr.weeks=Lr.sunday.range,Lr.weeks.utc=Lr.sunday.utc.range,Lr.weekOfYear=Lr.sundayOfYear;var Ur={"-":"",_:" ",0:"0"},Rr=/^\s*\d+/,Or=/^%/;qe.locale=function(t){return{numberFormat:dn(t),timeFormat:mn(t)}};var Fr=qe.locale({decimal:".",thousands:",",grouping:[3],currency:["$",""],dateTime:"%a %b %e %X %Y",date:"%m/%d/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});qe.format=Fr.numberFormat;var Yr={floor:tt,ceil:tt},Ir=Hn(S);qe.bisectLeft=Ir.left,qe.bisect=qe.bisectRight=Ir.right,qe.bisector=function(t){return Hn(1===t.length?function(n,e){return S(t(n),e)}:t)},qe.scale={},qe.scale.linear=function(){return Zn([0,1],[0,1],cn,!1)};var jr,Hr,Br,Xr,Vr,Zr={s:1,g:1,p:1,r:1,e:1},$r=Ye[t(Ye,"requestAnimationFrame")]||function(t){setTimeout(t,17)};qe.timer=function(t,n,e){var r=arguments.length;r<2&&(n=0),r<3&&(e=Date.now());var i=e+n,o={c:t,t:i,f:!1,n:null};Hr?Hr.n=o:jr=o,Hr=o,Br||(Xr=clearTimeout(Xr),Br=1,$r(ne))},qe.timer.flush=function(){ee(),re()},$e.transition=function(t){for(var n,e,r=Wr||++Kr,i=Se(t),o=[],u=Gr||{time:Date.now(),ease:_e,delay:0,duration:250},a=-1,c=this.length;++a<c;){o.push(n=[]);for(var s=this[a],l=-1,f=s.length;++l<f;)(e=s[l])&&Ae(e,l,i,r,u),n.push(e)}return oe(o,i,r)},$e.interrupt=function(t){return this.each(null==t?Jr:ie(Se(t)))};var Wr,Gr,Jr=ie(Se()),Qr=[],Kr=0;Qr.call=$e.call,Qr.empty=$e.empty,Qr.node=$e.node,Qr.size=$e.size,qe.transition=function(t,n){return t&&t.transition?Wr?t.transition(n):t:nr.transition(t)},qe.transition.prototype=Qr,Qr.select=function(t){var n,e,r,i=this.id,o=this.namespace,u=[];t=Y(t);for(var a=-1,c=this.length;++a<c;){u.push(n=[]);for(var s=this[a],l=-1,f=s.length;++l<f;)(r=s[l])&&(e=t.call(r,r.__data__,l,a))?("__data__"in r&&(e.__data__=r.__data__),Ae(e,l,o,i,r[o][i]),n.push(e)):n.push(null)}return oe(u,o,i)},Qr.selectAll=function(t){var n,e,i,o,u,a=this.id,c=this.namespace,s=[];t=r(t);for(var l=-1,f=this.length;++l<f;)for(var h=this[l],p=-1,d=h.length;++p<d;)if(i=h[p]){u=i[c][a],e=t.call(i,i.__data__,p,l),s.push(n=[]);for(var g=-1,v=e.length;++g<v;)(o=e[g])&&Ae(o,g,c,a,u),n.push(o)}return oe(s,c,a)},Qr.filter=function(t){var n,e,r,i=[];"function"!=typeof t&&(t=T(t));for(var o=0,u=this.length;o<u;o++){i.push(n=[]);for(var e=this[o],a=0,c=e.length;a<c;a++)(r=e[a])&&t.call(r,r.__data__,a,o)&&n.push(r)}return oe(i,this.namespace,this.id)},qe.transform=function(t){var n=Oe.createElementNS(qe.ns.prefix.svg,"g");return(qe.transform=function(t){if(null!=t){n.setAttribute("transform",t);var e=n.transform.baseVal.consolidate()}return new ue(e?e.matrix:ti)})(t)},ue.prototype.toString=function(){return"translate("+this.translate+")rotate("+this.rotate+")skewX("+this.skew+")scale("+this.scale+")"};var ti={a:1,b:0,c:0,d:1,e:0,f:0};qe.interpolateTransform=le,Qr.tween=function(t,n){var e=this.id,r=this.namespace;return arguments.length<2?this.node()[r][e].tween.get(t):R(this,null==n?function(n){n[r][e].tween.remove(t)}:function(i){i[r][e].tween.set(t,n)})},Qr.attr=function(t,n){function e(){this.removeAttribute(a)}function r(){this.removeAttributeNS(a.space,a.local)}function i(t){return null==t?e:(t+="",function(){var n,e=this.getAttribute(a);return e!==t&&(n=u(e,t),function(t){this.setAttribute(a,n(t))})})}function o(t){return null==t?r:(t+="",function(){var n,e=this.getAttributeNS(a.space,a.local);return e!==t&&(n=u(e,t),function(t){this.setAttributeNS(a.space,a.local,n(t))})})}if(arguments.length<2){for(n in t)this.attr(n,t[n]);return this}var u="transform"==t?le:cn,a=qe.ns.qualify(t);return fe(this,"attr."+t,n,a.local?o:i)},Qr.attrTween=function(t,n){function e(t,e){var r=n.call(this,t,e,this.getAttribute(i));return r&&function(t){this.setAttribute(i,r(t))}}function r(t,e){var r=n.call(this,t,e,this.getAttributeNS(i.space,i.local));return r&&function(t){this.setAttributeNS(i.space,i.local,r(t))}}var i=qe.ns.qualify(t);return this.tween("attr."+t,i.local?r:e)},Qr.style=function(t,n,e){function r(){this.style.removeProperty(t)}function i(n){return null==n?r:(n+="",function(){var r,i=Ye.getComputedStyle(this,null).getPropertyValue(t);return i!==n&&(r=cn(i,n),function(n){this.style.setProperty(t,r(n),e)})})}var o=arguments.length;if(o<3){if("string"!=typeof t){o<2&&(n="");for(e in t)this.style(e,t[e],n);return this}e=""}return fe(this,"style."+t,n,i)},Qr.styleTween=function(t,n,e){function r(r,i){var o=n.call(this,r,i,Ye.getComputedStyle(this,null).getPropertyValue(t));return o&&function(n){this.style.setProperty(t,o(n),e)}}return arguments.length<3&&(e=""),this.tween("style."+t,r)},Qr.text=function(t){return fe(this,"text",t,he)},Qr.remove=function(){var t=this.namespace;return this.each("end.transition",function(){var n;this[t].count<2&&(n=this.parentNode)&&n.removeChild(this)})};var ni=function(){return tt},ei=qe.map({linear:ni,poly:me,quad:function(){return ve},cubic:function(){return ye},sin:function(){return xe},exp:function(){return be},circle:function(){return we},elastic:Me,back:ke,bounce:function(){return Te}}),ri=qe.map({"in":tt,out:de,"in-out":ge,"out-in":function(t){return ge(de(t))}});qe.ease=function(t){var n=t.indexOf("-"),e=n>=0?t.slice(0,n):t,r=n>=0?t.slice(n+1):"in";return e=ei.get(e)||ni,r=ri.get(r)||tt,pe(r(e.apply(null,Ue.call(arguments,1))))},Qr.ease=function(t){var n=this.id,e=this.namespace;return arguments.length<1?this.node()[e][n].ease:("function"!=typeof t&&(t=qe.ease.apply(qe,arguments)),R(this,function(r){r[e][n].ease=t}))},Qr.delay=function(t){var n=this.id,e=this.namespace;return arguments.length<1?this.node()[e][n].delay:R(this,"function"==typeof t?function(r,i,o){r[e][n].delay=+t.call(r,r.__data__,i,o)}:(t=+t,function(r){r[e][n].delay=t}))},Qr.duration=function(t){var n=this.id,e=this.namespace;return arguments.length<1?this.node()[e][n].duration:R(this,"function"==typeof t?function(r,i,o){r[e][n].duration=Math.max(1,t.call(r,r.__data__,i,o))}:(t=Math.max(1,t),function(r){r[e][n].duration=t}))},Qr.each=function(t,n){var e=this.id,r=this.namespace;if(arguments.length<2){var i=Gr,o=Wr;try{Wr=e,R(this,function(n,i,o){Gr=n[r][e],t.call(n,n.__data__,i,o)})}finally{Gr=i,Wr=o}}else R(this,function(i){var o=i[r][e];(o.event||(o.event=qe.dispatch("start","end","interrupt"))).on(t,n)});return this},Qr.transition=function(){for(var t,n,e,r,i=this.id,o=++Kr,u=this.namespace,a=[],c=0,s=this.length;c<s;c++){a.push(t=[]);for(var n=this[c],l=0,f=n.length;l<f;l++)(e=n[l])&&(r=e[u][i],Ae(e,l,u,o,{time:r.time,ease:r.ease,delay:r.delay+r.duration,duration:r.duration})),t.push(e)}return oe(a,u,o)},qe.svg.axis=function(){function t(t){t.each(function(){var t,s=qe.select(this),l=this.__chart__||e,f=this.__chart__=e.copy(),h=null==c?f.ticks?f.ticks.apply(f,a):f.domain():c,p=null==n?f.tickFormat?f.tickFormat.apply(f,a):tt:n,d=s.selectAll(".tick").data(h,f),g=d.enter().insert("g",".domain").attr("class","tick").style("opacity",er),v=qe.transition(d.exit()).style("opacity",er).remove(),y=qe.transition(d.order()).style("opacity",1),_=Math.max(i,0)+u,m=Vn(f),x=s.selectAll(".domain").data([0]),b=(x.enter().append("path").attr("class","domain"),qe.transition(x));g.append("line"),g.append("text");var w,M,k,T,S=g.select("line"),A=y.select("line"),N=d.select("text").text(p),E=g.select("text"),C=y.select("text"),z="top"===r||"left"===r?-1:1;if("bottom"===r||"top"===r?(t=Ne,w="x",k="y",M="x2",T="y2",N.attr("dy",z<0?"0em":".71em").style("text-anchor","middle"),b.attr("d","M"+m[0]+","+z*o+"V0H"+m[1]+"V"+z*o)):(t=Ee,w="y",k="x",M="y2",T="x2",N.attr("dy",".32em").style("text-anchor",z<0?"end":"start"),b.attr("d","M"+z*o+","+m[0]+"H0V"+m[1]+"H"+z*o)),S.attr(T,z*i),E.attr(k,z*_),A.attr(M,0).attr(T,z*i),C.attr(w,0).attr(k,z*_),f.rangeBand){var D=f,L=D.rangeBand()/2;l=f=function(t){return D(t)+L}}else l.rangeBand?l=f:v.call(t,f,l);g.call(t,l,f),y.call(t,f,f)})}var n,e=qe.scale.linear(),r=ii,i=6,o=6,u=3,a=[10],c=null;return t.scale=function(n){return arguments.length?(e=n,t):e},t.orient=function(n){return arguments.length?(r=n in oi?n+"":ii,t):r},t.ticks=function(){return arguments.length?(a=arguments,t):a},t.tickValues=function(n){return arguments.length?(c=n,t):c},t.tickFormat=function(e){return arguments.length?(n=e,t):n},t.tickSize=function(n){var e=arguments.length;return e?(i=+n,o=+arguments[e-1],t):i},t.innerTickSize=function(n){return arguments.length?(i=+n,t):i},t.outerTickSize=function(n){return arguments.length?(o=+n,t):o},t.tickPadding=function(n){return arguments.length?(u=+n,t):u},t.tickSubdivide=function(){return arguments.length&&t},t};var ii="bottom",oi={top:1,right:1,bottom:1,left:1},ui="onselectstart"in Oe?null:t(Fe.style,"userSelect"),ai=0;qe.mouse=function(t){return ze(t,D())};var ci=/WebKit/.test(Ye.navigator.userAgent)?-1:0;qe.svg.brush=function(){function t(o){o.each(function(){var o=qe.select(this).style("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush",i).on("touchstart.brush",i),u=o.selectAll(".background").data([0]);u.enter().append("rect").attr("class","background").style("visibility","hidden").style("cursor","crosshair"),o.selectAll(".extent").data([0]).enter().append("rect").attr("class","extent").style("cursor","move");var a=o.selectAll(".resize").data(d,tt);a.exit().remove(),a.enter().append("g").attr("class",function(t){return"resize "+t}).style("cursor",function(t){
return si[t]}).append("rect").attr("x",function(t){return/[ew]$/.test(t)?-3:null}).attr("y",function(t){return/^[ns]/.test(t)?-3:null}).attr("width",6).attr("height",6).style("visibility","hidden"),a.style("display",t.empty()?"none":null);var l,f=qe.transition(o),h=qe.transition(u);c&&(l=Vn(c),h.attr("x",l[0]).attr("width",l[1]-l[0]),e(f)),s&&(l=Vn(s),h.attr("y",l[0]).attr("height",l[1]-l[0]),r(f)),n(f)})}function n(t){t.selectAll(".resize").attr("transform",function(t){return"translate("+l[+/e$/.test(t)]+","+f[+/^s/.test(t)]+")"})}function e(t){t.select(".extent").attr("x",l[0]),t.selectAll(".extent,.n>rect,.s>rect").attr("width",l[1]-l[0])}function r(t){t.select(".extent").attr("y",f[0]),t.selectAll(".extent,.e>rect,.w>rect").attr("height",f[1]-f[0])}function i(){function i(){32==qe.event.keyCode&&(A||(_=null,E[0]-=l[1],E[1]-=f[1],A=2),z())}function d(){32==qe.event.keyCode&&2==A&&(E[0]+=l[1],E[1]+=f[1],A=0,z())}function g(){var t=qe.mouse(x),i=!1;m&&(t[0]+=m[0],t[1]+=m[1]),A||(qe.event.altKey?(_||(_=[(l[0]+l[1])/2,(f[0]+f[1])/2]),E[0]=l[+(t[0]<_[0])],E[1]=f[+(t[1]<_[1])]):_=null),T&&v(t,c,0)&&(e(M),i=!0),S&&v(t,s,1)&&(r(M),i=!0),i&&(n(M),w({type:"brush",mode:A?"move":"resize"}))}function v(t,n,e){var r,i,a=Vn(n),c=a[0],s=a[1],d=E[e],g=e?f:l,v=g[1]-g[0];if(A&&(c-=d,s-=v+d),r=(e?p:h)?Math.max(c,Math.min(s,t[e])):t[e],A?i=(r+=d)+v:(_&&(d=Math.max(c,Math.min(s,2*_[e]-r))),d<r?(i=r,r=d):i=d),g[0]!=r||g[1]!=i)return e?u=null:o=null,g[0]=r,g[1]=i,!0}function y(){g(),M.style("pointer-events","all").selectAll(".resize").style("display",t.empty()?"none":null),qe.select("body").style("cursor",null),C.on("mousemove.brush",null).on("mouseup.brush",null).on("touchmove.brush",null).on("touchend.brush",null).on("keydown.brush",null).on("keyup.brush",null),N(),w({type:"brushend"})}var _,m,x=this,b=qe.select(qe.event.target),w=a.of(x,arguments),M=qe.select(x),k=b.datum(),T=!/^(n|s)$/.test(k)&&c,S=!/^(e|w)$/.test(k)&&s,A=b.classed("extent"),N=Ce(),E=qe.mouse(x),C=qe.select(Ye).on("keydown.brush",i).on("keyup.brush",d);if(qe.event.changedTouches?C.on("touchmove.brush",g).on("touchend.brush",y):C.on("mousemove.brush",g).on("mouseup.brush",y),M.interrupt().selectAll("*").interrupt(),A)E[0]=l[0]-E[0],E[1]=f[0]-E[1];else if(k){var D=+/w$/.test(k),L=+/^n/.test(k);m=[l[1-D]-E[0],f[1-L]-E[1]],E[0]=l[D],E[1]=f[L]}else qe.event.altKey&&(_=E.slice());M.style("pointer-events","none").selectAll(".resize").style("display",null),qe.select("body").style("cursor",b.style("cursor")),w({type:"brushstart"}),g()}var o,u,a=L(t,"brushstart","brush","brushend"),c=null,s=null,l=[0,0],f=[0,0],h=!0,p=!0,d=li[0];return t.event=function(t){t.each(function(){var t=a.of(this,arguments),n={x:l,y:f,i:o,j:u},e=this.__chart__||n;this.__chart__=n,Wr?qe.select(this).transition().each("start.brush",function(){o=e.i,u=e.j,l=e.x,f=e.y,t({type:"brushstart"})}).tween("brush:brush",function(){var e=on(l,n.x),r=on(f,n.y);return o=u=null,function(i){l=n.x=e(i),f=n.y=r(i),t({type:"brush",mode:"resize"})}}).each("end.brush",function(){o=n.i,u=n.j,t({type:"brush",mode:"resize"}),t({type:"brushend"})}):(t({type:"brushstart"}),t({type:"brush",mode:"resize"}),t({type:"brushend"}))})},t.x=function(n){return arguments.length?(c=n,d=li[!c<<1|!s],t):c},t.y=function(n){return arguments.length?(s=n,d=li[!c<<1|!s],t):s},t.clamp=function(n){return arguments.length?(c&&s?(h=!!n[0],p=!!n[1]):c?h=!!n:s&&(p=!!n),t):c&&s?[h,p]:c?h:s?p:null},t.extent=function(n){var e,r,i,a,h;return arguments.length?(c&&(e=n[0],r=n[1],s&&(e=e[0],r=r[0]),o=[e,r],c.invert&&(e=c(e),r=c(r)),r<e&&(h=e,e=r,r=h),e==l[0]&&r==l[1]||(l=[e,r])),s&&(i=n[0],a=n[1],c&&(i=i[1],a=a[1]),u=[i,a],s.invert&&(i=s(i),a=s(a)),a<i&&(h=i,i=a,a=h),i==f[0]&&a==f[1]||(f=[i,a])),t):(c&&(o?(e=o[0],r=o[1]):(e=l[0],r=l[1],c.invert&&(e=c.invert(e),r=c.invert(r)),r<e&&(h=e,e=r,r=h))),s&&(u?(i=u[0],a=u[1]):(i=f[0],a=f[1],s.invert&&(i=s.invert(i),a=s.invert(a)),a<i&&(h=i,i=a,a=h))),c&&s?[[e,i],[r,a]]:c?[e,r]:s&&[i,a])},t.clear=function(){return t.empty()||(l=[0,0],f=[0,0],o=u=null),t},t.empty=function(){return!!c&&l[0]==l[1]||!!s&&f[0]==f[1]},qe.rebind(t,a,"on")};var si={n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},li=[["n","e","s","w","nw","ne","se","sw"],["e","w"],["n","s"],[]];qe.touch=function(t,n,e){if(arguments.length<3&&(e=n,n=D().changedTouches),n)for(var r,i=0,o=n.length;i<o;++i)if((r=n[i]).identifier===e)return ze(t,r)},qe.touches=function(t,n){return arguments.length<2&&(n=D().touches),n?Re(n).map(function(n){var e=ze(t,n);return e.identifier=n.identifier,e}):[]};var fi=Lr.format=Fr.timeFormat,hi=fi.utc,pi=hi("%Y-%m-%dT%H:%M:%S.%LZ");fi.iso=Date.prototype.toISOString&&+new Date("2000-01-01T00:00:00.000Z")?De:pi,De.parse=function(t){var n=new Date(t);return isNaN(n)?null:n},De.toString=pi.toString,Lr.second=yn(function(t){return new Pr(1e3*Math.floor(t/1e3))},function(t,n){t.setTime(t.getTime()+1e3*Math.floor(n))},function(t){return t.getSeconds()}),Lr.seconds=Lr.second.range,Lr.seconds.utc=Lr.second.utc.range,Lr.minute=yn(function(t){return new Pr(6e4*Math.floor(t/6e4))},function(t,n){t.setTime(t.getTime()+6e4*Math.floor(n))},function(t){return t.getMinutes()}),Lr.minutes=Lr.minute.range,Lr.minutes.utc=Lr.minute.utc.range,Lr.hour=yn(function(t){var n=t.getTimezoneOffset()/60;return new Pr(36e5*(Math.floor(t/36e5-n)+n))},function(t,n){t.setTime(t.getTime()+36e5*Math.floor(n))},function(t){return t.getHours()}),Lr.hours=Lr.hour.range,Lr.hours.utc=Lr.hour.utc.range,Lr.month=yn(function(t){return t=Lr.day(t),t.setDate(1),t},function(t,n){t.setMonth(t.getMonth()+n)},function(t){return t.getMonth()}),Lr.months=Lr.month.range,Lr.months.utc=Lr.month.utc.range;var di=[1e3,5e3,15e3,3e4,6e4,3e5,9e5,18e5,36e5,108e5,216e5,432e5,864e5,1728e5,6048e5,2592e6,7776e6,31536e6],gi=[[Lr.second,1],[Lr.second,5],[Lr.second,15],[Lr.second,30],[Lr.minute,1],[Lr.minute,5],[Lr.minute,15],[Lr.minute,30],[Lr.hour,1],[Lr.hour,3],[Lr.hour,6],[Lr.hour,12],[Lr.day,1],[Lr.day,2],[Lr.week,1],[Lr.month,1],[Lr.month,3],[Lr.year,1]],vi=fi.multi([[".%L",function(t){return t.getMilliseconds()}],[":%S",function(t){return t.getSeconds()}],["%I:%M",function(t){return t.getMinutes()}],["%I %p",function(t){return t.getHours()}],["%a %d",function(t){return t.getDay()&&1!=t.getDate()}],["%b %d",function(t){return 1!=t.getDate()}],["%B",function(t){return t.getMonth()}],["%Y",nt]]),yi={range:function(t,n,e){return qe.range(Math.ceil(t/e)*e,+n,e).map(Pe)},floor:tt,ceil:tt};gi.year=Lr.year,Lr.scale=function(){return Le(qe.scale.linear(),gi,vi)};var _i=gi.map(function(t){return[t[0].utc,t[1]]}),mi=hi.multi([[".%L",function(t){return t.getUTCMilliseconds()}],[":%S",function(t){return t.getUTCSeconds()}],["%I:%M",function(t){return t.getUTCMinutes()}],["%I %p",function(t){return t.getUTCHours()}],["%a %d",function(t){return t.getUTCDay()&&1!=t.getUTCDate()}],["%b %d",function(t){return 1!=t.getUTCDate()}],["%B",function(t){return t.getUTCMonth()}],["%Y",nt]]);_i.year=Lr.year.utc,Lr.scale.utc=function(){return Le(qe.scale.linear(),_i,mi)},"function"==typeof define&&define.amd?define(qe):"object"==typeof n&&n.exports&&(n.exports=qe),this.d3=qe}()},{}],2:[function(t,n,e){function r(){function t(n){n instanceof HTMLElement&&(n=i.select(n)),n.each(function(){function n(t,n){var e=new Date(Math.min(Math.max(+r[0],+t),+r[1])),i=A;n&&(i=A.transition(),n.ease&&i.ease(n.ease),n.duration&&i.duration(n.duration)),i.call(M.extent([e,e])).call(M.event)}function c(){u&&(39===i.event.which&&(n(new Date(+M.extent()[0]+f)),i.event.preventDefault()),37===i.event.which&&(n(new Date(+M.extent()[0]-f)),i.event.preventDefault()))}function l(){var t=M.extent()[0];i.event&&i.event.sourceEvent&&"keydown"!==i.event.sourceEvent.type&&(t=d.invert(i.mouse(this)[0]),M.extent([t,t])),N.attr("transform",function(n){return"translate("+[d(t),0]+")"}),C.text(p(t)).attr("text-anchor","left");var n=C.node().getComputedTextLength()/2,r=d(t)-n,u=d(t)+n;C.attr("transform",function(i){return r<-e.left?"translate("+[-e.left,20]+")":u>o-e.left?"translate("+[o-e.left-2*n,20]+")":"translate("+[d(t)-n,20]+")"}),k.change(t)}s&&(e.left=30),d.domain(r).range([0,o-e.left-e.right]);var f=+d.invert(10)-r[0];M.x(d).extent([r[0],r[0]]).on("brush",l);var h=i.select(this).selectAll("svg").data([0]),v=h.enter().append("svg").attr("class","chroniton").attr("tabindex",1).on("keydown",c).append("g");v.append("g").attr("class","x axis"),h.attr("width",o).attr("height",a);var y=h.select("g").attr("transform","translate("+e.left+","+e.top+")");y.select(".x.axis").attr("transform","translate(0,"+(a-e.bottom-e.top)+")").call(g);var _=y.select(".x.axis .domain").remove().node(),x=y.select(".x.axis").node();if(x.insertBefore(_,x.childNodes[0]),y.select(".domain").select(function(){return this.parentNode.insertBefore(this.cloneNode(!0),this.parentNode.childNodes[0])}).attr("class","halo"),y.select(".x.axis .domain").on("click",function(){n(d.invert(i.mouse(this)[0]))}),s){var T=h.append("g").attr("transform","translate("+[8,e.top+13]+")"),S=T.append("path").attr("transform","translate(2, 2)").attr("d",b).attr("class","play-button");T.append("rect").attr("fill","none").attr("pointer-events","visible").attr("width",15).attr("height",15).on("click",function(){t.playPause(),S.attr("d",t.playing()?w:b)})}var A=y.append("g").attr("class","slider").attr("transform","translate("+[0,a-e.bottom-e.top+2]+")").call(M),N=A.append("path").attr("d",m).attr("class","handle"),E=A.append("g").attr("transform","translate(0, -35)"),C=E.append("text").attr("class","label");A.call(M.event),M.on("brushstart",function(){A.classed("brushing",!0)}),M.on("brushend",function(){A.classed("brushing",!1)}),k.on("setValue",n)})}function n(){if(c){var n=(new Date).getTime();null===f&&(f=n);var e=n-f,i=(+d.invert(.1)-+r[0])*h,o=e*i;t.setValue(new Date(+M.extent()[0]+o)),f=n,l&&t.isAtEnd()&&t.setValue(r[0])}}var e={top:10,right:20,bottom:20,left:20},r=[new Date("1/1/2000"),new Date],o=660,u=!0,a=50,c=!1,s=!1,l=!1,f=null,h=1,p=i.time.format("%Y-%m-%d"),d=i.time.scale().clamp(!0),g=i.svg.axis().scale(d).orient("bottom").tickSize(10,0),v=6,y=8,_=5,m="M"+[-v,-y,v,-y,v,y-_,0,y,-v,y-_,-v,-y].join(","),x=10,b="M"+[0,0,x/1.2,x/2,0,x,0,0].join(","),w="M"+[0,0,x/3,0,x/3,x,0,x].join(",")+"Z M"+[x/2+0,0,x/2+x/3,0,x/2+x/3,x,x/2+0,x].join(","),M=i.svg.brush(),k=i.dispatch("change","setValue");t.playbackRate=function(n){if(!arguments.length)return h;if("number"!=typeof n)throw new Error("argument must be a number of pixels per second");return h=n,t},t.play=function(){return c=!0,t},t.playing=function(){return c},t.playPause=function(){return c?t.pause():t.play(),t},t.pause=function(){return f=null,c=!1,t},t.stop=function(){return t.pause(),t.setValue(r[0]),t},t.loop=function(n){if(!arguments.length)return l;if("boolean"!=typeof n)throw new Error("argument must be a boolean for whether to loop");return l=n,t},t.width=function(n){return arguments.length?(o=n,t):o},t.tapAxis=function(n){if(n(g),"function"!=typeof n)throw new Error("argument must be a function");return t},t.height=function(n){if(!arguments.length)return a;if("number"!=typeof n)throw new Error("argument must be a numeric width");return a=n,t},t.domain=function(n){return arguments.length?(r=n,t):r},t.labelFormat=function(n){if(!n)return p;if("function"!=typeof n)throw new Error("argument must be a label formatter function");return p=n,t},t.hideLabel=function(){return p=i.functor(""),t},t.getValue=function(){return M.extent()[0]},t.isAtStart=function(){return+M.extent()[0]===+r[0]},t.isAtEnd=function(){return+M.extent()[0]===+r[1]},t.setValue=function(n,e){return k.setValue(n,e),t},t.playButton=function(n){if(void 0===n)return s;if("boolean"!=typeof n)throw new Error("argument must be a boolean setting");return s=n,t},t.keybindings=function(n){if(void 0===n)return u;if("boolean"!=typeof n)throw new Error("argument must be a boolean setting");return u=n,t};var T=(i.timer(n),i.rebind(t,k,"on"));return T}var i=t("./d3/d3-custom.js");n.exports=r},{"./d3/d3-custom.js":1}],3:[function(t,n,e){!function(t,r){"object"==typeof e&&"undefined"!=typeof n?r(e):"function"==typeof define&&define.amd?define(["exports"],r):r(t.d3=t.d3||{})}(this,function(t){"use strict";function n(t){return function(n,e){return Xs(t(n),e)}}function e(t,n){return[t,n]}function r(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),o=r/Math.pow(10,i);return i>=0?(o>=sl?10:o>=ll?5:o>=fl?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(o>=sl?10:o>=ll?5:o>=fl?2:1)}function i(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),o=r/i;return o>=sl?i*=10:o>=ll?i*=5:o>=fl&&(i*=2),n<t?-i:i}function o(t){return t.length}function u(t){return"translate("+(t+.5)+",0)"}function a(t){return"translate(0,"+(t+.5)+")"}function c(t){var n=Math.max(0,t.bandwidth()-1)/2;return t.round()&&(n=Math.round(n)),function(e){return t(e)+n}}function s(){return!this.__axis}function l(t,n){function e(e){var u=null==i?n.ticks?n.ticks.apply(n,r):n.domain():i,a=null==o?n.tickFormat?n.tickFormat.apply(n,r):Cl:o,v=Math.max(l,0)+h,y=n.range(),_=y[0]+.5,m=y[y.length-1]+.5,x=(n.bandwidth?c:Cl)(n.copy()),b=e.selection?e.selection():e,w=b.selectAll(".domain").data([null]),M=b.selectAll(".tick").data(u,n).order(),k=M.exit(),T=M.enter().append("g").attr("class","tick"),S=M.select("line"),A=M.select("text");w=w.merge(w.enter().insert("path",".tick").attr("class","domain").attr("stroke","#000")),M=M.merge(T),S=S.merge(T.append("line").attr("stroke","#000").attr(d+"2",p*l)),A=A.merge(T.append("text").attr("fill","#000").attr(d,p*v).attr("dy",t===zl?"0em":t===Ll?"0.71em":"0.32em")),e!==b&&(w=w.transition(e),M=M.transition(e),S=S.transition(e),A=A.transition(e),k=k.transition(e).attr("opacity",ql).attr("transform",function(t){return isFinite(t=x(t))?g(t):this.getAttribute("transform")}),T.attr("opacity",ql).attr("transform",function(t){var n=this.parentNode.__axis;return g(n&&isFinite(n=n(t))?n:x(t))})),k.remove(),w.attr("d",t===Pl||t==Dl?"M"+p*f+","+_+"H0.5V"+m+"H"+p*f:"M"+_+","+p*f+"V0.5H"+m+"V"+p*f),M.attr("opacity",1).attr("transform",function(t){return g(x(t))}),S.attr(d+"2",p*l),A.attr(d,p*v).text(a),b.filter(s).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",t===Dl?"start":t===Pl?"end":"middle"),b.each(function(){this.__axis=x})}var r=[],i=null,o=null,l=6,f=6,h=3,p=t===zl||t===Pl?-1:1,d=t===Pl||t===Dl?"x":"y",g=t===zl||t===Ll?u:a;return e.scale=function(t){return arguments.length?(n=t,e):n},e.ticks=function(){return r=El.call(arguments),e},e.tickArguments=function(t){return arguments.length?(r=null==t?[]:El.call(t),e):r.slice()},e.tickValues=function(t){return arguments.length?(i=null==t?null:El.call(t),e):i&&i.slice()},e.tickFormat=function(t){return arguments.length?(o=t,e):o},e.tickSize=function(t){return arguments.length?(l=f=+t,e):l},e.tickSizeInner=function(t){return arguments.length?(l=+t,e):l},e.tickSizeOuter=function(t){return arguments.length?(f=+t,e):f},e.tickPadding=function(t){return arguments.length?(h=+t,e):h},e}function f(t){return l(zl,t)}function h(t){return l(Dl,t)}function p(t){return l(Ll,t)}function d(t){return l(Pl,t)}function g(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r)throw new Error("illegal type: "+t);r[t]=[]}return new v(r)}function v(t){this._=t}function y(t,n){return t.trim().split(/^|\s+/).map(function(t){var e="",r=t.indexOf(".");if(r>=0&&(e=t.slice(r+1),t=t.slice(0,r)),t&&!n.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:e}})}function _(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function m(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=Ul,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}function x(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===Rl&&n.documentElement.namespaceURI===Rl?n.createElement(t):n.createElementNS(e,t)}}function b(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}function w(){return new M}function M(){this._="@"+(++Il).toString(36)}function k(t,n,e){return t=T(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function T(n,e,r){return function(i){var o=t.event;t.event=i;try{n.call(this,this.__data__,e,r)}finally{t.event=o}}}function S(t){return t.trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}function A(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,o=n.length;r<o;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function N(t,n,e){var r=Vl.hasOwnProperty(t.type)?k:T;return function(i,o,u){var a,c=this.__on,s=r(n,o,u);if(c)for(var l=0,f=c.length;l<f;++l)if((a=c[l]).type===t.type&&a.name===t.name)return this.removeEventListener(a.type,a.listener,a.capture),this.addEventListener(a.type,a.listener=s,a.capture=e),void(a.value=n);this.addEventListener(t.type,s,e),a={type:t.type,name:t.name,value:n,listener:s,capture:e},c?c.push(a):this.__on=[a]}}function E(n,e,r,i){var o=t.event;n.sourceEvent=t.event,t.event=n;try{return e.apply(r,i)}finally{t.event=o}}function C(){}function z(){return[]}function D(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}function L(t,n,e,r,i,o){for(var u,a=0,c=n.length,s=o.length;a<s;++a)(u=n[a])?(u.__data__=o[a],r[a]=u):e[a]=new D(t,o[a]);for(;a<c;++a)(u=n[a])&&(i[a]=u)}function P(t,n,e,r,i,o,u){var a,c,s,l={},f=n.length,h=o.length,p=new Array(f);for(a=0;a<f;++a)(c=n[a])&&(p[a]=s=af+u.call(c,c.__data__,a,n),s in l?i[a]=c:l[s]=c);for(a=0;a<h;++a)s=af+u.call(t,o[a],a,o),(c=l[s])?(r[a]=c,c.__data__=o[a],l[s]=null):e[a]=new D(t,o[a]);for(a=0;a<f;++a)(c=n[a])&&l[p[a]]===c&&(i[a]=c)}function q(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}function U(t){return function(){this.removeAttribute(t)}}function R(t){return function(){this.removeAttributeNS(t.space,t.local)}}function O(t,n){return function(){this.setAttribute(t,n)}}function F(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}function Y(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}function I(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}function j(t){return function(){this.style.removeProperty(t)}}function H(t,n,e){return function(){this.style.setProperty(t,n,e)}}function B(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}function X(t,n){return t.style.getPropertyValue(n)||xf(t).getComputedStyle(t,null).getPropertyValue(n)}function V(t){return function(){delete this[t]}}function Z(t,n){return function(){this[t]=n}}function $(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}function W(t){return t.trim().split(/^|\s+/)}function G(t){return t.classList||new J(t)}function J(t){this._node=t,this._names=W(t.getAttribute("class")||"")}function Q(t,n){for(var e=G(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function K(t,n){for(var e=G(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}function tt(t){return function(){Q(this,t)}}function nt(t){return function(){K(this,t)}}function et(t,n){return function(){(n.apply(this,arguments)?Q:K)(this,t)}}function rt(){this.textContent=""}function it(t){return function(){this.textContent=t}}function ot(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}function ut(){this.innerHTML=""}function at(t){return function(){this.innerHTML=t}}function ct(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}function st(){this.nextSibling&&this.parentNode.appendChild(this)}function lt(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function ft(){return null}function ht(){var t=this.parentNode;t&&t.removeChild(this)}function pt(t,n,e){var r=xf(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}function dt(t,n){return function(){return pt(this,t,n)}}function gt(t,n){return function(){return pt(this,t,n.apply(this,arguments))}}function vt(t,n){this._groups=t,this._parents=n}function yt(){return new vt([[document.documentElement]],Lf)}function _t(){t.event.stopImmediatePropagation()}function mt(t,n){var e=t.document.documentElement,r=Pf(t).on("dragstart.drag",null);n&&(r.on("click.drag",Of,!0),setTimeout(function(){r.on("click.drag",null)},0)),"onselectstart"in e?r.on("selectstart.drag",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)}function xt(t,n,e,r,i,o,u,a,c,s){this.target=t,this.type=n,this.subject=e,this.identifier=r,this.active=i,this.x=o,this.y=u,this.dx=a,this.dy=c,this._=s}function bt(){return!t.event.button}function wt(){return this.parentNode}function Mt(n){return null==n?{x:t.event.x,y:t.event.y}:n}function kt(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function Tt(){}function St(t){var n;return t=(t+"").trim().toLowerCase(),(n=$f.exec(t))?(n=parseInt(n[1],16),new zt(n>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1)):(n=Wf.exec(t))?At(parseInt(n[1],16)):(n=Gf.exec(t))?new zt(n[1],n[2],n[3],1):(n=Jf.exec(t))?new zt(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=Qf.exec(t))?Nt(n[1],n[2],n[3],n[4]):(n=Kf.exec(t))?Nt(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=th.exec(t))?Dt(n[1],n[2]/100,n[3]/100,1):(n=nh.exec(t))?Dt(n[1],n[2]/100,n[3]/100,n[4]):eh.hasOwnProperty(t)?At(eh[t]):"transparent"===t?new zt(NaN,NaN,NaN,0):null}function At(t){return new zt(t>>16&255,t>>8&255,255&t,1)}function Nt(t,n,e,r){return r<=0&&(t=n=e=NaN),new zt(t,n,e,r)}function Et(t){return t instanceof Tt||(t=St(t)),t?(t=t.rgb(),new zt(t.r,t.g,t.b,t.opacity)):new zt}function Ct(t,n,e,r){return 1===arguments.length?Et(t):new zt(t,n,e,null==r?1:r)}function zt(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function Dt(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new qt(t,n,e,r)}function Lt(t){if(t instanceof qt)return new qt(t.h,t.s,t.l,t.opacity);if(t instanceof Tt||(t=St(t)),!t)return new qt;if(t instanceof qt)return t;t=t.rgb();var n=t.r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),o=Math.max(n,e,r),u=NaN,a=o-i,c=(o+i)/2;return a?(u=n===o?(e-r)/a+6*(e<r):e===o?(r-n)/a+2:(n-e)/a+4,a/=c<.5?o+i:2-o-i,u*=60):a=c>0&&c<1?0:u,new qt(u,a,c,t.opacity)}function Pt(t,n,e,r){return 1===arguments.length?Lt(t):new qt(t,n,e,null==r?1:r)}function qt(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Ut(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}function Rt(t){if(t instanceof Ft)return new Ft(t.l,t.a,t.b,t.opacity);if(t instanceof Vt){var n=t.h*rh;return new Ft(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}t instanceof zt||(t=Et(t));var e=Ht(t.r),r=Ht(t.g),i=Ht(t.b),o=Yt((.4124564*e+.3575761*r+.1804375*i)/uh),u=Yt((.2126729*e+.7151522*r+.072175*i)/ah),a=Yt((.0193339*e+.119192*r+.9503041*i)/ch);return new Ft(116*u-16,500*(o-u),200*(u-a),t.opacity)}function Ot(t,n,e,r){return 1===arguments.length?Rt(t):new Ft(t,n,e,null==r?1:r)}function Ft(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function Yt(t){return t>hh?Math.pow(t,1/3):t/fh+sh}function It(t){return t>lh?t*t*t:fh*(t-sh)}function jt(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function Ht(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function Bt(t){if(t instanceof Vt)return new Vt(t.h,t.c,t.l,t.opacity);t instanceof Ft||(t=Rt(t));var n=Math.atan2(t.b,t.a)*ih;return new Vt(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function Xt(t,n,e,r){return 1===arguments.length?Bt(t):new Vt(t,n,e,null==r?1:r)}function Vt(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}function Zt(t){if(t instanceof Wt)return new Wt(t.h,t.s,t.l,t.opacity);t instanceof zt||(t=Et(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(xh*r+_h*n-mh*e)/(xh+_h-mh),o=r-i,u=(yh*(e-i)-gh*o)/vh,a=Math.sqrt(u*u+o*o)/(yh*i*(1-i)),c=a?Math.atan2(u,o)*ih-120:NaN;return new Wt(c<0?c+360:c,a,i,t.opacity)}function $t(t,n,e,r){return 1===arguments.length?Zt(t):new Wt(t,n,e,null==r?1:r)}function Wt(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Gt(t,n,e,r,i){var o=t*t,u=o*t;return((1-3*t+3*o-u)*n+(4-6*o+3*u)*e+(1+3*t+3*o-3*u)*r+u*i)/6}function Jt(t,n){return function(e){return t+e*n}}function Qt(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}function Kt(t,n){var e=n-t;return e?Jt(t,e>180||e<-180?e-360*Math.round(e/360):e):Eh(isNaN(t)?n:t)}function tn(t){return 1===(t=+t)?nn:function(n,e){return e-n?Qt(n,e,t):Eh(isNaN(n)?e:n)}}function nn(t,n){var e=n-t;return e?Jt(t,e):Eh(isNaN(t)?n:t)}function en(t){return function(n){var e,r,i=n.length,o=new Array(i),u=new Array(i),a=new Array(i);for(e=0;e<i;++e)r=Ct(n[e]),o[e]=r.r||0,u[e]=r.g||0,a[e]=r.b||0;return o=t(o),u=t(u),a=t(a),r.opacity=1,function(t){return r.r=o(t),r.g=u(t),r.b=a(t),r+""}}}function rn(t){return function(){return t}}function on(t){return function(n){return t(n)+""}}function un(t){return"none"===t?Hh:(bh||(bh=document.createElement("DIV"),wh=document.documentElement,Mh=document.defaultView),bh.style.transform=t,t=Mh.getComputedStyle(wh.appendChild(bh),null).getPropertyValue("transform"),wh.removeChild(bh),t=t.slice(7,-1).split(","),Bh(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))}function an(t){return null==t?Hh:(kh||(kh=document.createElementNS("http://www.w3.org/2000/svg","g")),kh.setAttribute("transform",t),(t=kh.transform.baseVal.consolidate())?(t=t.matrix,Bh(t.a,t.b,t.c,t.d,t.e,t.f)):Hh)}function cn(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}function o(t,r,i,o,u,a){if(t!==i||r!==o){var c=u.push("translate(",null,n,null,e);a.push({i:c-4,x:qh(t,i)},{i:c-2,x:qh(r,o)})}else(i||o)&&u.push("translate("+i+n+o+e)}function u(t,n,e,o){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),o.push({i:e.push(i(e)+"rotate(",null,r)-2,x:qh(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}function a(t,n,e,o){t!==n?o.push({i:e.push(i(e)+"skewX(",null,r)-2,x:qh(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}function c(t,n,e,r,o,u){if(t!==e||n!==r){var a=o.push(i(o)+"scale(",null,",",null,")");u.push({i:a-4,x:qh(t,e)},{i:a-2,x:qh(n,r)})}else 1===e&&1===r||o.push(i(o)+"scale("+e+","+r+")")}return function(n,e){var r=[],i=[];return n=t(n),e=t(e),o(n.translateX,n.translateY,e.translateX,e.translateY,r,i),u(n.rotate,e.rotate,r,i),a(n.skewX,e.skewX,r,i),c(n.scaleX,n.scaleY,e.scaleX,e.scaleY,r,i),n=e=null,function(t){for(var n,e=-1,o=i.length;++e<o;)r[(n=i[e]).i]=n.x(t);return r.join("")}}}function sn(t){return((t=Math.exp(t))+1/t)/2}function ln(t){return((t=Math.exp(t))-1/t)/2}function fn(t){return((t=Math.exp(2*t))-1)/(t+1)}function hn(t){return function(n,e){var r=t((n=Pt(n)).h,(e=Pt(e)).h),i=nn(n.s,e.s),o=nn(n.l,e.l),u=nn(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=i(t),n.l=o(t),n.opacity=u(t),n+""}}}function pn(t,n){var e=nn((t=Ot(t)).l,(n=Ot(n)).l),r=nn(t.a,n.a),i=nn(t.b,n.b),o=nn(t.opacity,n.opacity);return function(n){return t.l=e(n),t.a=r(n),t.b=i(n),t.opacity=o(n),t+""}}function dn(t){return function(n,e){var r=t((n=Xt(n)).h,(e=Xt(e)).h),i=nn(n.c,e.c),o=nn(n.l,e.l),u=nn(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=i(t),n.l=o(t),n.opacity=u(t),n+""}}}function gn(t){return function n(e){function r(n,r){var i=t((n=$t(n)).h,(r=$t(r)).h),o=nn(n.s,r.s),u=nn(n.l,r.l),a=nn(n.opacity,r.opacity);return function(t){return n.h=i(t),n.s=o(t),n.l=u(Math.pow(t,e)),n.opacity=a(t),n+""}}return e=+e,r.gamma=n,r}(1)}function vn(){return lp||(pp(yn),lp=hp.now()+fp)}function yn(){lp=0}function _n(){this._call=this._time=this._next=null}function mn(t,n,e){var r=new _n;return r.restart(t,n,e),r}function xn(){vn(),++op;for(var t,n=Th;n;)(t=lp-n._time)>=0&&n._call.call(null,t),n=n._next;--op}function bn(){lp=(sp=hp.now())+fp,op=up=0;try{xn()}finally{op=0,Mn(),lp=0}}function wn(){var t=hp.now(),n=t-sp;n>cp&&(fp-=n,sp=t)}function Mn(){for(var t,n,e=Th,r=1/0;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:Th=n);Sh=t,kn(r)}function kn(t){if(!op){up&&(up=clearTimeout(up));var n=t-lp;n>24?(t<1/0&&(up=setTimeout(bn,n)),ap&&(ap=clearInterval(ap))):(ap||(sp=lp,ap=setInterval(wn,cp)),op=1,pp(bn))}}function Tn(t,n){var e=t.__transition;if(!e||!(e=e[n])||e.state>_p)throw new Error("too late");return e}function Sn(t,n){var e=t.__transition;if(!e||!(e=e[n])||e.state>xp)throw new Error("too late");return e}function An(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("too late");return e}function Nn(t,n,e){function r(t){e.state=mp,e.timer.restart(i,e.delay,e.time),e.delay<=t&&i(t-e.delay)}function i(r){var s,l,f,h;if(e.state!==mp)return u();for(s in c)if(h=c[s],h.name===e.name){if(h.state===bp)return dp(i);h.state===wp?(h.state=kp,h.timer.stop(),h.on.call("interrupt",t,t.__data__,h.index,h.group),delete c[s]):+s<n&&(h.state=kp,h.timer.stop(),delete c[s])}if(dp(function(){e.state===bp&&(e.state=wp,e.timer.restart(o,e.delay,e.time),o(r))}),e.state=xp,e.on.call("start",t,t.__data__,e.index,e.group),e.state===xp){for(e.state=bp,a=new Array(f=e.tween.length),s=0,l=-1;s<f;++s)(h=e.tween[s].value.call(t,t.__data__,e.index,e.group))&&(a[++l]=h);a.length=l+1}}function o(n){for(var r=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(u),e.state=Mp,1),i=-1,o=a.length;++i<o;)a[i].call(null,r);e.state===Mp&&(e.on.call("end",t,t.__data__,e.index,e.group),u())}function u(){e.state=kp,e.timer.stop(),delete c[n];for(var r in c)return;delete t.__transition}var a,c=t.__transition;c[n]=e,e.timer=mn(r,0,e.time)}function En(t,n){var e,r;return function(){var i=Sn(this,t),o=i.tween;if(o!==e){r=e=o;for(var u=0,a=r.length;u<a;++u)if(r[u].name===n){r=r.slice(),r.splice(u,1);break}}i.tween=r}}function Cn(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var o=Sn(this,t),u=o.tween;if(u!==r){i=(r=u).slice();for(var a={name:n,value:e},c=0,s=i.length;c<s;++c)if(i[c].name===n){i[c]=a;break}c===s&&i.push(a)}o.tween=i}}function zn(t,n,e){var r=t._id;return t.each(function(){var t=Sn(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)}),function(t){return An(t,r).value[n]}}function Dn(t){return function(){this.removeAttribute(t)}}function Ln(t){return function(){this.removeAttributeNS(t.space,t.local)}}function Pn(t,n,e){var r,i;return function(){var o=this.getAttribute(t);return o===e?null:o===r?i:i=n(r=o,e)}}function qn(t,n,e){var r,i;return function(){var o=this.getAttributeNS(t.space,t.local);return o===e?null:o===r?i:i=n(r=o,e)}}function Un(t,n,e){var r,i,o;return function(){var u,a=e(this);return null==a?void this.removeAttribute(t):(u=this.getAttribute(t),u===a?null:u===r&&a===i?o:o=n(r=u,i=a))}}function Rn(t,n,e){var r,i,o;return function(){var u,a=e(this);return null==a?void this.removeAttributeNS(t.space,t.local):(u=this.getAttributeNS(t.space,t.local),u===a?null:u===r&&a===i?o:o=n(r=u,i=a))}}function On(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttributeNS(t.space,t.local,r(n))}}return e._value=n,e}function Fn(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttribute(t,r(n))}}return e._value=n,e}function Yn(t,n){return function(){Tn(this,t).delay=+n.apply(this,arguments)}}function In(t,n){return n=+n,function(){Tn(this,t).delay=n}}function jn(t,n){return function(){Sn(this,t).duration=+n.apply(this,arguments)}}function Hn(t,n){return n=+n,function(){Sn(this,t).duration=n}}function Bn(t,n){if("function"!=typeof n)throw new Error;return function(){Sn(this,t).ease=n}}function Xn(t){return(t+"").trim().split(/^|\s+/).every(function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),
!t||"start"===t})}function Vn(t,n,e){var r,i,o=Xn(n)?Tn:Sn;return function(){var u=o(this,t),a=u.on;a!==r&&(i=(r=a).copy()).on(n,e),u.on=i}}function Zn(t){return function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}}function $n(t,n){var e,r,i;return function(){var o=X(this,t),u=(this.style.removeProperty(t),X(this,t));return o===u?null:o===e&&u===r?i:i=n(e=o,r=u)}}function Wn(t){return function(){this.style.removeProperty(t)}}function Gn(t,n,e){var r,i;return function(){var o=X(this,t);return o===e?null:o===r?i:i=n(r=o,e)}}function Jn(t,n,e){var r,i,o;return function(){var u=X(this,t),a=e(this);return null==a&&(this.style.removeProperty(t),a=X(this,t)),u===a?null:u===r&&a===i?o:o=n(r=u,i=a)}}function Qn(t,n,e){function r(){var r=this,i=n.apply(r,arguments);return i&&function(n){r.style.setProperty(t,i(n),e)}}return r._value=n,r}function Kn(t){return function(){this.textContent=t}}function te(t){return function(){var n=t(this);this.textContent=null==n?"":n}}function ne(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function ee(t){return yt().transition(t)}function re(){return++Zp}function ie(t){return+t}function oe(t){return t*t}function ue(t){return t*(2-t)}function ae(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}function ce(t){return t*t*t}function se(t){return--t*t*t+1}function le(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}function fe(t){return 1-Math.cos(t*td)}function he(t){return Math.sin(t*td)}function pe(t){return(1-Math.cos(Kp*t))/2}function de(t){return Math.pow(2,10*t-10)}function ge(t){return 1-Math.pow(2,-10*t)}function ve(t){return((t*=2)<=1?Math.pow(2,10*t-10):2-Math.pow(2,10-10*t))/2}function ye(t){return 1-Math.sqrt(1-t*t)}function _e(t){return Math.sqrt(1- --t*t)}function me(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}function xe(t){return 1-be(1-t)}function be(t){return(t=+t)<nd?ld*t*t:t<rd?ld*(t-=ed)*t+id:t<ud?ld*(t-=od)*t+ad:ld*(t-=cd)*t+sd}function we(t){return((t*=2)<=1?1-be(1-t):be(t-1)+1)/2}function Me(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return bd.time=vn(),bd;return e}function ke(){t.event.stopImmediatePropagation()}function Te(t){return{type:t}}function Se(){return!t.event.button}function Ae(){var t=this.ownerSVGElement||this;return[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function Ne(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function Ee(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}function Ce(t){var n=t.__brush;return n?n.dim.output(n.selection):null}function ze(){return Le(Dd)}function De(){return Le(Ld)}function Le(n){function e(t){var e=t.property("__brush",a).selectAll(".overlay").data([Te("overlay")]);e.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",qd.overlay).merge(e).each(function(){var t=Ne(this).extent;Pf(this).attr("x",t[0][0]).attr("y",t[0][1]).attr("width",t[1][0]-t[0][0]).attr("height",t[1][1]-t[0][1])}),t.selectAll(".selection").data([Te("selection")]).enter().append("rect").attr("class","selection").attr("cursor",qd.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var i=t.selectAll(".handle").data(n.handles,function(t){return t.type});i.exit().remove(),i.enter().append("rect").attr("class",function(t){return"handle handle--"+t.type}).attr("cursor",function(t){return qd[t.type]}),t.each(r).attr("fill","none").attr("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush touchstart.brush",u)}function r(){var t=Pf(this),n=Ne(this).selection;n?(t.selectAll(".selection").style("display",null).attr("x",n[0][0]).attr("y",n[0][1]).attr("width",n[1][0]-n[0][0]).attr("height",n[1][1]-n[0][1]),t.selectAll(".handle").style("display",null).attr("x",function(t){return"e"===t.type[t.type.length-1]?n[1][0]-h/2:n[0][0]-h/2}).attr("y",function(t){return"s"===t.type[0]?n[1][1]-h/2:n[0][1]-h/2}).attr("width",function(t){return"n"===t.type||"s"===t.type?n[1][0]-n[0][0]+h:h}).attr("height",function(t){return"e"===t.type||"w"===t.type?n[1][1]-n[0][1]+h:h})):t.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function i(t,n){return t.__brush.emitter||new o(t,n)}function o(t,n){this.that=t,this.args=n,this.state=t.__brush,this.active=0}function u(){function e(){var t=Jl(k);!U||w||M||(Math.abs(t[0]-O[0])>Math.abs(t[1]-O[1])?M=!0:w=!0),O=t,b=!0,Ad(),o()}function o(){var t;switch(m=O[0]-R[0],x=O[1]-R[1],S){case Ed:case Nd:A&&(m=Math.max(D-f,Math.min(P-g,m)),h=f+m,v=g+m),N&&(x=Math.max(L-p,Math.min(q-y,x)),d=p+x,_=y+x);break;case Cd:A<0?(m=Math.max(D-f,Math.min(P-f,m)),h=f+m,v=g):A>0&&(m=Math.max(D-g,Math.min(P-g,m)),h=f,v=g+m),N<0?(x=Math.max(L-p,Math.min(q-p,x)),d=p+x,_=y):N>0&&(x=Math.max(L-y,Math.min(q-y,x)),d=p,_=y+x);break;case zd:A&&(h=Math.max(D,Math.min(P,f-m*A)),v=Math.max(D,Math.min(P,g+m*A))),N&&(d=Math.max(L,Math.min(q,p-x*N)),_=Math.max(L,Math.min(q,y+x*N)))}v<h&&(A*=-1,t=f,f=g,g=t,t=h,h=v,v=t,T in Ud&&I.attr("cursor",qd[T=Ud[T]])),_<d&&(N*=-1,t=p,p=y,y=t,t=d,d=_,_=t,T in Rd&&I.attr("cursor",qd[T=Rd[T]])),E.selection&&(z=E.selection),w&&(h=z[0][0],v=z[1][0]),M&&(d=z[0][1],_=z[1][1]),z[0][0]===h&&z[0][1]===d&&z[1][0]===v&&z[1][1]===_||(E.selection=[[h,d],[v,_]],r.call(k),F.brush())}function u(){if(ke(),t.event.touches){if(t.event.touches.length)return;c&&clearTimeout(c),c=setTimeout(function(){c=null},500),Y.on("touchmove.brush touchend.brush touchcancel.brush",null)}else mt(t.event.view,b),j.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);Y.attr("pointer-events","all"),I.attr("cursor",qd.overlay),E.selection&&(z=E.selection),Ee(z)&&(E.selection=null,r.call(k)),F.end()}function a(){switch(t.event.keyCode){case 16:U=A&&N;break;case 18:S===Cd&&(A&&(g=v-m*A,f=h+m*A),N&&(y=_-x*N,p=d+x*N),S=zd,o());break;case 32:S!==Cd&&S!==zd||(A<0?g=v-m:A>0&&(f=h-m),N<0?y=_-x:N>0&&(p=d-x),S=Ed,I.attr("cursor",qd.selection),o());break;default:return}Ad()}function s(){switch(t.event.keyCode){case 16:U&&(w=M=U=!1,o());break;case 18:S===zd&&(A<0?g=v:A>0&&(f=h),N<0?y=_:N>0&&(p=d),S=Cd,o());break;case 32:S===Ed&&(t.event.altKey?(A&&(g=v-m*A,f=h+m*A),N&&(y=_-x*N,p=d+x*N),S=zd):(A<0?g=v:A>0&&(f=h),N<0?y=_:N>0&&(p=d),S=Cd),I.attr("cursor",qd[T]),o());break;default:return}Ad()}if(t.event.touches){if(t.event.changedTouches.length<t.event.touches.length)return Ad()}else if(c)return;if(l.apply(this,arguments)){var f,h,p,d,g,v,y,_,m,x,b,w,M,k=this,T=t.event.target.__data__.type,S="selection"===(t.event.metaKey?T="overlay":T)?Nd:t.event.altKey?zd:Cd,A=n===Ld?null:Od[T],N=n===Dd?null:Fd[T],E=Ne(k),C=E.extent,z=E.selection,D=C[0][0],L=C[0][1],P=C[1][0],q=C[1][1],U=A&&N&&t.event.shiftKey,R=Jl(k),O=R,F=i(k,arguments).beforestart();"overlay"===T?E.selection=z=[[f=n===Ld?D:R[0],p=n===Dd?L:R[1]],[g=n===Ld?P:f,y=n===Dd?q:p]]:(f=z[0][0],p=z[0][1],g=z[1][0],y=z[1][1]),h=f,d=p,v=g,_=y;var Y=Pf(k).attr("pointer-events","none"),I=Y.selectAll(".overlay").attr("cursor",qd[T]);if(t.event.touches)Y.on("touchmove.brush",e,!0).on("touchend.brush touchcancel.brush",u,!0);else{var j=Pf(t.event.view).on("keydown.brush",a,!0).on("keyup.brush",s,!0).on("mousemove.brush",e,!0).on("mouseup.brush",u,!0);Ff(t.event.view)}ke(),Sp(k),r.call(k),F.start()}}function a(){var t=this.__brush||{selection:null};return t.extent=s.apply(this,arguments),t.dim=n,t}var c,s=Ae,l=Se,f=g(e,"start","brush","end"),h=6;return e.move=function(t,e){t.selection?t.on("start.brush",function(){i(this,arguments).beforestart().start()}).on("interrupt.brush end.brush",function(){i(this,arguments).end()}).tween("brush",function(){function t(t){u.selection=1===t&&Ee(s)?null:l(t),r.call(o),a.brush()}var o=this,u=o.__brush,a=i(o,arguments),c=u.selection,s=n.input("function"==typeof e?e.apply(this,arguments):e,u.extent),l=Yh(c,s);return c&&s?t:t(1)}):t.each(function(){var t=this,o=arguments,u=t.__brush,a=n.input("function"==typeof e?e.apply(t,o):e,u.extent),c=i(t,o).beforestart();Sp(t),u.selection=null==a||Ee(a)?null:a,r.call(t),c.start().brush().end()})},o.prototype={beforestart:function(){return 1===++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting&&(this.starting=!1,this.emit("start")),this},brush:function(){return this.emit("brush"),this},end:function(){return 0===--this.active&&(delete this.state.emitter,this.emit("end")),this},emit:function(t){E(new Sd(e,t,n.output(this.state.selection)),f.apply,f,[t,this.that,this.args])}},e.extent=function(t){return arguments.length?(s="function"==typeof t?t:Td([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),e):s},e.filter=function(t){return arguments.length?(l="function"==typeof t?t:Td(!!t),e):l},e.handleSize=function(t){return arguments.length?(h=+t,e):h},e.on=function(){var t=f.on.apply(f,arguments);return t===f?e:t},e}function Pe(t){return function(n,e){return t(n.source.value+n.target.value,e.source.value+e.target.value)}}function qe(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function Ue(){return new qe}function Re(t){return t.source}function Oe(t){return t.target}function Fe(t){return t.radius}function Ye(t){return t.startAngle}function Ie(t){return t.endAngle}function je(){}function He(t,n){var e=new je;if(t instanceof je)t.each(function(t,n){e.set(n,t)});else if(Array.isArray(t)){var r,i=-1,o=t.length;if(null==n)for(;++i<o;)e.set(i,t[i]);else for(;++i<o;)e.set(n(r=t[i],i,t),r)}else if(t)for(var u in t)e.set(u,t[u]);return e}function Be(){return{}}function Xe(t,n,e){t[n]=e}function Ve(){return He()}function Ze(t,n,e){t.set(n,e)}function $e(){}function We(t,n){var e=new $e;if(t instanceof $e)t.each(function(t){e.add(t)});else if(t){var r=-1,i=t.length;if(null==n)for(;++r<i;)e.add(t[r]);else for(;++r<i;)e.add(n(t[r],r,t))}return e}function Ge(t){return new Function("d","return {"+t.map(function(t,n){return JSON.stringify(t)+": d["+n+"]"}).join(",")+"}")}function Je(t,n){var e=Ge(t);return function(r,i){return n(e(r),i,t)}}function Qe(t){var n=Object.create(null),e=[];return t.forEach(function(t){for(var r in t)r in n||e.push(n[r]=r)}),e}function Ke(t,n,e,r){if(isNaN(n)||isNaN(e))return t;var i,o,u,a,c,s,l,f,h,p=t._root,d={data:r},g=t._x0,v=t._y0,y=t._x1,_=t._y1;if(!p)return t._root=d,t;for(;p.length;)if((s=n>=(o=(g+y)/2))?g=o:y=o,(l=e>=(u=(v+_)/2))?v=u:_=u,i=p,!(p=p[f=l<<1|s]))return i[f]=d,t;if(a=+t._x.call(null,p.data),c=+t._y.call(null,p.data),n===a&&e===c)return d.next=p,i?i[f]=d:t._root=d,t;do i=i?i[f]=new Array(4):t._root=new Array(4),(s=n>=(o=(g+y)/2))?g=o:y=o,(l=e>=(u=(v+_)/2))?v=u:_=u;while((f=l<<1|s)===(h=(c>=u)<<1|a>=o));return i[h]=p,i[f]=d,t}function tr(t){var n,e,r,i,o=t.length,u=new Array(o),a=new Array(o),c=1/0,s=1/0,l=-(1/0),f=-(1/0);for(e=0;e<o;++e)isNaN(r=+this._x.call(null,n=t[e]))||isNaN(i=+this._y.call(null,n))||(u[e]=r,a[e]=i,r<c&&(c=r),r>l&&(l=r),i<s&&(s=i),i>f&&(f=i));for(l<c&&(c=this._x0,l=this._x1),f<s&&(s=this._y0,f=this._y1),this.cover(c,s).cover(l,f),e=0;e<o;++e)Ke(this,u[e],a[e],t[e]);return this}function nr(t){for(var n=0,e=t.length;n<e;++n)this.remove(t[n]);return this}function er(t){return t[0]}function rr(t){return t[1]}function ir(t,n,e){var r=new or(null==n?er:n,null==e?rr:e,NaN,NaN,NaN,NaN);return null==t?r:r.addAll(t)}function or(t,n,e,r,i,o){this._x=t,this._y=n,this._x0=e,this._y0=r,this._x1=i,this._y1=o,this._root=void 0}function ur(t){for(var n={data:t.data},e=n;t=t.next;)e=e.next={data:t.data};return n}function ar(t){return t.x+t.vx}function cr(t){return t.y+t.vy}function sr(t){return t.index}function lr(t,n){var e=t.get(n);if(!e)throw new Error("missing: "+n);return e}function fr(t){return t.x}function hr(t){return t.y}function pr(t){return new dr(t)}function dr(t){if(!(n=Qg.exec(t)))throw new Error("invalid format: "+t);var n,e=n[1]||" ",r=n[2]||">",i=n[3]||"-",o=n[4]||"",u=!!n[5],a=n[6]&&+n[6],c=!!n[7],s=n[8]&&+n[8].slice(1),l=n[9]||"";"n"===l?(c=!0,l="g"):Jg[l]||(l=""),(u||"0"===e&&"="===r)&&(u=!0,e="0",r="="),this.fill=e,this.align=r,this.sign=i,this.symbol=o,this.zero=u,this.width=a,this.comma=c,this.precision=s,this.type=l}function gr(n){return Kg=ev(n),t.format=Kg.format,t.formatPrefix=Kg.formatPrefix,Kg}function vr(){this.reset()}function yr(t,n,e){var r=t.s=n+e,i=r-n,o=r-i;t.t=n-o+(e-i)}function _r(t){return t>1?0:t<-1?Iv:Math.acos(t)}function mr(t){return t>1?jv:t<-1?-jv:Math.asin(t)}function xr(t){return(t=ny(t/2))*t}function br(){}function wr(t,n){t&&uy.hasOwnProperty(t.type)&&uy[t.type](t,n)}function Mr(t,n,e){var r,i=-1,o=t.length-e;for(n.lineStart();++i<o;)r=t[i],n.point(r[0],r[1],r[2]);n.lineEnd()}function kr(t,n){var e=-1,r=t.length;for(n.polygonStart();++e<r;)Mr(t[e],n,1);n.polygonEnd()}function Tr(){ly.point=Ar}function Sr(){Nr(av,cv)}function Ar(t,n){ly.point=Nr,av=t,cv=n,t*=Vv,n*=Vv,sv=t,lv=Gv(n=n/2+Hv),fv=ny(n)}function Nr(t,n){t*=Vv,n*=Vv,n=n/2+Hv;var e=t-sv,r=e>=0?1:-1,i=r*e,o=Gv(n),u=ny(n),a=fv*u,c=lv*o+a*Gv(i),s=a*r*ny(i);cy.add(Wv(s,c)),sv=t,lv=o,fv=u}function Er(t){return[Wv(t[1],t[0]),mr(t[2])]}function Cr(t){var n=t[0],e=t[1],r=Gv(e);return[r*Gv(n),r*ny(n),ny(e)]}function zr(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function Dr(t,n){return[t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]]}function Lr(t,n){t[0]+=n[0],t[1]+=n[1],t[2]+=n[2]}function Pr(t,n){return[t[0]*n,t[1]*n,t[2]*n]}function qr(t){var n=ry(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=n,t[1]/=n,t[2]/=n}function Ur(t,n){xv.push(bv=[hv=t,dv=t]),n<pv&&(pv=n),n>gv&&(gv=n)}function Rr(t,n){var e=Cr([t*Vv,n*Vv]);if(mv){var r=Dr(mv,e),i=[r[1],-r[0],0],o=Dr(i,r);qr(o),o=Er(o);var u,a=t-vv,c=a>0?1:-1,s=o[0]*Xv*c,l=Zv(a)>180;l^(c*vv<s&&s<c*t)?(u=o[1]*Xv,u>gv&&(gv=u)):(s=(s+360)%360-180,l^(c*vv<s&&s<c*t)?(u=-o[1]*Xv,u<pv&&(pv=u)):(n<pv&&(pv=n),n>gv&&(gv=n))),l?t<vv?Hr(hv,t)>Hr(hv,dv)&&(dv=t):Hr(t,dv)>Hr(hv,dv)&&(hv=t):dv>=hv?(t<hv&&(hv=t),t>dv&&(dv=t)):t>vv?Hr(hv,t)>Hr(hv,dv)&&(dv=t):Hr(t,dv)>Hr(hv,dv)&&(hv=t)}else xv.push(bv=[hv=t,dv=t]);n<pv&&(pv=n),n>gv&&(gv=n),mv=e,vv=t}function Or(){py.point=Rr}function Fr(){bv[0]=hv,bv[1]=dv,py.point=Ur,mv=null}function Yr(t,n){if(mv){var e=t-vv;hy.add(Zv(e)>180?e+(e>0?360:-360):e)}else yv=t,_v=n;ly.point(t,n),Rr(t,n)}function Ir(){ly.lineStart()}function jr(){Yr(yv,_v),ly.lineEnd(),Zv(hy)>Fv&&(hv=-(dv=180)),bv[0]=hv,bv[1]=dv,mv=null}function Hr(t,n){return(n-=t)<0?n+360:n}function Br(t,n){return t[0]-n[0]}function Xr(t,n){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}function Vr(t,n){t*=Vv,n*=Vv;var e=Gv(n);Zr(e*Gv(t),e*ny(t),ny(n))}function Zr(t,n,e){++wv,kv+=(t-kv)/wv,Tv+=(n-Tv)/wv,Sv+=(e-Sv)/wv}function $r(){gy.point=Wr}function Wr(t,n){t*=Vv,n*=Vv;var e=Gv(n);qv=e*Gv(t),Uv=e*ny(t),Rv=ny(n),gy.point=Gr,Zr(qv,Uv,Rv)}function Gr(t,n){t*=Vv,n*=Vv;var e=Gv(n),r=e*Gv(t),i=e*ny(t),o=ny(n),u=Wv(ry((u=Uv*o-Rv*i)*u+(u=Rv*r-qv*o)*u+(u=qv*i-Uv*r)*u),qv*r+Uv*i+Rv*o);Mv+=u,Av+=u*(qv+(qv=r)),Nv+=u*(Uv+(Uv=i)),Ev+=u*(Rv+(Rv=o)),Zr(qv,Uv,Rv)}function Jr(){gy.point=Vr}function Qr(){gy.point=ti}function Kr(){ni(Lv,Pv),gy.point=Vr}function ti(t,n){Lv=t,Pv=n,t*=Vv,n*=Vv,gy.point=ni;var e=Gv(n);qv=e*Gv(t),Uv=e*ny(t),Rv=ny(n),Zr(qv,Uv,Rv)}function ni(t,n){t*=Vv,n*=Vv;var e=Gv(n),r=e*Gv(t),i=e*ny(t),o=ny(n),u=Uv*o-Rv*i,a=Rv*r-qv*o,c=qv*i-Uv*r,s=ry(u*u+a*a+c*c),l=mr(s),f=s&&-l/s;Cv+=f*u,zv+=f*a,Dv+=f*c,Mv+=l,Av+=l*(qv+(qv=r)),Nv+=l*(Uv+(Uv=i)),Ev+=l*(Rv+(Rv=o)),Zr(qv,Uv,Rv)}function ei(t,n){return[t>Iv?t-Bv:t<-Iv?t+Bv:t,n]}function ri(t,n,e){return(t%=Bv)?n||e?_y(oi(t),ui(n,e)):oi(t):n||e?ui(n,e):ei}function ii(t){return function(n,e){return n+=t,[n>Iv?n-Bv:n<-Iv?n+Bv:n,e]}}function oi(t){var n=ii(t);return n.invert=ii(-t),n}function ui(t,n){function e(t,n){var e=Gv(n),a=Gv(t)*e,c=ny(t)*e,s=ny(n),l=s*r+a*i;return[Wv(c*o-l*u,a*r-s*i),mr(l*o+c*u)]}var r=Gv(t),i=ny(t),o=Gv(n),u=ny(n);return e.invert=function(t,n){var e=Gv(n),a=Gv(t)*e,c=ny(t)*e,s=ny(n),l=s*o-c*u;return[Wv(c*o+s*u,a*r+l*i),mr(l*r-a*i)]},e}function ai(t,n,e,r,i,o){if(e){var u=Gv(n),a=ny(n),c=r*e;null==i?(i=n+r*Bv,o=n-c/2):(i=ci(u,i),o=ci(u,o),(r>0?i<o:i>o)&&(i+=r*Bv));for(var s,l=i;r>0?l>o:l<o;l-=c)s=Er([u,-a*Gv(l),-a*ny(l)]),t.point(s[0],s[1])}}function ci(t,n){n=Cr(n),n[0]-=t,qr(n);var e=_r(-n[1]);return((-n[2]<0?-e:e)+Bv-Fv)%Bv}function si(t,n,e,r){this.x=t,this.z=n,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}function li(t){if(n=t.length){for(var n,e,r=0,i=t[0];++r<n;)i.n=e=t[r],e.p=i,i=e;i.n=e=t[0],e.p=i}}function fi(t,n,e,r){function i(i,o){return t<=i&&i<=e&&n<=o&&o<=r}function o(i,o,a,s){var l=0,f=0;if(null==i||(l=u(i,a))!==(f=u(o,a))||c(i,o)<0^a>0){do s.point(0===l||3===l?t:e,l>1?r:n);while((l=(l+a+4)%4)!==f)}else s.point(o[0],o[1])}function u(r,i){return Zv(r[0]-t)<Fv?i>0?0:3:Zv(r[0]-e)<Fv?i>0?2:1:Zv(r[1]-n)<Fv?i>0?1:0:i>0?3:2}function a(t,n){return c(t.x,n.x)}function c(t,n){var e=u(t,1),r=u(n,1);return e!==r?e-r:0===e?n[1]-t[1]:1===e?t[0]-n[0]:2===e?t[1]-n[1]:n[0]-t[0]}return function(u){function c(t,n){i(t,n)&&S.point(t,n)}function s(){for(var n=0,e=0,i=v.length;e<i;++e)for(var o,u,a=v[e],c=1,s=a.length,l=a[0],f=l[0],h=l[1];c<s;++c)o=f,u=h,l=a[c],f=l[0],h=l[1],u<=r?h>r&&(f-o)*(r-u)>(h-u)*(t-o)&&++n:h<=r&&(f-o)*(r-u)<(h-u)*(t-o)&&--n;return n}function l(){S=A,g=[],v=[],T=!0}function f(){var t=s(),n=T&&t,e=(g=bl(g)).length;(n||e)&&(u.polygonStart(),n&&(u.lineStart(),o(null,null,1,u),u.lineEnd()),e&&qy(g,a,t,o,u),u.polygonEnd()),S=u,g=v=y=null}function h(){N.point=d,v&&v.push(y=[]),k=!0,M=!1,b=w=NaN}function p(){g&&(d(_,m),x&&M&&A.rejoin(),g.push(A.result())),N.point=c,M&&S.lineEnd()}function d(o,u){var a=i(o,u);if(v&&y.push([o,u]),k)_=o,m=u,x=a,k=!1,a&&(S.lineStart(),S.point(o,u));else if(a&&M)S.point(o,u);else{var c=[b=Math.max(Ry,Math.min(Uy,b)),w=Math.max(Ry,Math.min(Uy,w))],s=[o=Math.max(Ry,Math.min(Uy,o)),u=Math.max(Ry,Math.min(Uy,u))];Ly(c,s,t,n,e,r)?(M||(S.lineStart(),S.point(c[0],c[1])),S.point(s[0],s[1]),a||S.lineEnd(),T=!1):a&&(S.lineStart(),S.point(o,u),T=!1)}b=o,w=u,M=a}var g,v,y,_,m,x,b,w,M,k,T,S=u,A=Dy(),N={point:c,lineStart:h,lineEnd:p,polygonStart:l,polygonEnd:f};return N}}function hi(){jy.point=di,jy.lineEnd=pi}function pi(){jy.point=jy.lineEnd=br}function di(t,n){t*=Vv,n*=Vv,my=t,xy=ny(n),by=Gv(n),jy.point=gi}function gi(t,n){t*=Vv,n*=Vv;var e=ny(n),r=Gv(n),i=Zv(t-my),o=Gv(i),u=ny(i),a=r*u,c=by*e-xy*r*o,s=xy*e+by*r*o;Iy.add(Wv(ry(a*a+c*c),s)),my=t,xy=e,by=r}function vi(t,n){return!(!t||!$y.hasOwnProperty(t.type))&&$y[t.type](t,n)}function yi(t,n){return 0===Vy(t,n)}function _i(t,n){var e=Vy(t[0],t[1]),r=Vy(t[0],n),i=Vy(n,t[1]);return r+i<=e+Fv}function mi(t,n){return!!Yy(t.map(xi),bi(n))}function xi(t){return t=t.map(bi),t.pop(),t}function bi(t){return[t[0]*Vv,t[1]*Vv]}function wi(t,n,e){var r=cl(t,n-Fv,e).concat(n);return function(t){return r.map(function(n){return[t,n]})}}function Mi(t,n,e){var r=cl(t,n-Fv,e).concat(n);return function(t){return r.map(function(n){return[n,t]})}}function ki(){function t(){return{type:"MultiLineString",coordinates:n()}}function n(){return cl(Jv(o/v)*v,i,v).map(h).concat(cl(Jv(s/y)*y,c,y).map(p)).concat(cl(Jv(r/d)*d,e,d).filter(function(t){return Zv(t%v)>Fv}).map(l)).concat(cl(Jv(a/g)*g,u,g).filter(function(t){return Zv(t%y)>Fv}).map(f))}var e,r,i,o,u,a,c,s,l,f,h,p,d=10,g=d,v=90,y=360,_=2.5;return t.lines=function(){return n().map(function(t){return{type:"LineString",coordinates:t}})},t.outline=function(){return{type:"Polygon",coordinates:[h(o).concat(p(c).slice(1),h(i).reverse().slice(1),p(s).reverse().slice(1))]}},t.extent=function(n){return arguments.length?t.extentMajor(n).extentMinor(n):t.extentMinor()},t.extentMajor=function(n){return arguments.length?(o=+n[0][0],i=+n[1][0],s=+n[0][1],c=+n[1][1],o>i&&(n=o,o=i,i=n),s>c&&(n=s,s=c,c=n),t.precision(_)):[[o,s],[i,c]]},t.extentMinor=function(n){return arguments.length?(r=+n[0][0],e=+n[1][0],a=+n[0][1],u=+n[1][1],r>e&&(n=r,r=e,e=n),a>u&&(n=a,a=u,u=n),t.precision(_)):[[r,a],[e,u]]},t.step=function(n){return arguments.length?t.stepMajor(n).stepMinor(n):t.stepMinor()},t.stepMajor=function(n){return arguments.length?(v=+n[0],y=+n[1],t):[v,y]},t.stepMinor=function(n){return arguments.length?(d=+n[0],g=+n[1],t):[d,g]},t.precision=function(n){return arguments.length?(_=+n,l=wi(a,u,90),f=Mi(r,e,_),h=wi(s,c,90),p=Mi(o,i,_),t):_},t.extentMajor([[-180,-90+Fv],[180,90-Fv]]).extentMinor([[-180,-80-Fv],[180,80+Fv]])}function Ti(){return ki()()}function Si(){t_.point=Ai}function Ai(t,n){t_.point=Ni,wy=ky=t,My=Ty=n}function Ni(t,n){Ky.add(Ty*t-ky*n),ky=t,Ty=n}function Ei(){Ni(wy,My)}function Ci(t,n){t<n_&&(n_=t),t>r_&&(r_=t),n<e_&&(e_=n),n>i_&&(i_=n)}function zi(t,n){u_+=t,a_+=n,++c_}function Di(){g_.point=Li}function Li(t,n){g_.point=Pi,zi(Ny=t,Ey=n)}function Pi(t,n){var e=t-Ny,r=n-Ey,i=ry(e*e+r*r);s_+=i*(Ny+t)/2,l_+=i*(Ey+n)/2,f_+=i,zi(Ny=t,Ey=n)}function qi(){g_.point=zi}function Ui(){g_.point=Oi}function Ri(){Fi(Sy,Ay)}function Oi(t,n){g_.point=Fi,zi(Sy=Ny=t,Ay=Ey=n)}function Fi(t,n){var e=t-Ny,r=n-Ey,i=ry(e*e+r*r);s_+=i*(Ny+t)/2,l_+=i*(Ey+n)/2,f_+=i,i=Ey*t-Ny*n,h_+=i*(Ny+t),p_+=i*(Ey+n),d_+=3*i,zi(Ny=t,Ey=n)}function Yi(t){this._context=t}function Ii(t,n){w_.point=ji,y_=m_=t,__=x_=n}function ji(t,n){m_-=t,x_-=n,b_.add(ry(m_*m_+x_*x_)),m_=t,x_=n}function Hi(){this._string=[]}function Bi(t){return"m0,"+t+"a"+t+","+t+" 0 1,1 0,"+-2*t+"a"+t+","+t+" 0 1,1 0,"+2*t+"z"}function Xi(t){return t.length>1}function Vi(t,n){return((t=t.x)[0]<0?t[1]-jv-Fv:jv-t[1])-((n=n.x)[0]<0?n[1]-jv-Fv:jv-n[1])}function Zi(t){var n,e=NaN,r=NaN,i=NaN;return{lineStart:function(){t.lineStart(),n=1},point:function(o,u){var a=o>0?Iv:-Iv,c=Zv(o-e);Zv(c-Iv)<Fv?(t.point(e,r=(r+u)/2>0?jv:-jv),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),t.point(o,r),n=0):i!==a&&c>=Iv&&(Zv(e-i)<Fv&&(e-=i*Fv),Zv(o-a)<Fv&&(o-=a*Fv),r=$i(e,r,o,u),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),n=0),t.point(e=o,r=u),i=a},lineEnd:function(){t.lineEnd(),e=r=NaN},clean:function(){return 2-n}}}function $i(t,n,e,r){var i,o,u=ny(t-e);return Zv(u)>Fv?$v((ny(n)*(o=Gv(r))*ny(e)-ny(r)*(i=Gv(n))*ny(t))/(i*o*u)):(n+r)/2}function Wi(t,n,e,r){var i;if(null==t)i=e*jv,r.point(-Iv,i),r.point(0,i),r.point(Iv,i),r.point(Iv,0),r.point(Iv,-i),r.point(0,-i),r.point(-Iv,-i),r.point(-Iv,0),r.point(-Iv,i);else if(Zv(t[0]-n[0])>Fv){var o=t[0]<n[0]?Iv:-Iv;i=e*o/2,r.point(-o,i),r.point(0,i),r.point(o,i)}else r.point(n[0],n[1])}function Gi(t){return function(n){var e=new Ji;for(var r in t)e[r]=t[r];return e.stream=n,e}}function Ji(){}function Qi(t,n,e){var r=n[1][0]-n[0][0],i=n[1][1]-n[0][1],o=t.clipExtent&&t.clipExtent();t.scale(150).translate([0,0]),null!=o&&t.clipExtent(null),ay(e,t.stream(o_));var u=o_.result(),a=Math.min(r/(u[1][0]-u[0][0]),i/(u[1][1]-u[0][1])),c=+n[0][0]+(r-a*(u[1][0]+u[0][0]))/2,s=+n[0][1]+(i-a*(u[1][1]+u[0][1]))/2;return null!=o&&t.clipExtent(o),t.scale(150*a).translate([c,s])}function Ki(t,n,e){return Qi(t,[[0,0],n],e)}function to(t){return Gi({point:function(n,e){n=t(n,e),this.stream.point(n[0],n[1])}})}function no(t,n){function e(r,i,o,u,a,c,s,l,f,h,p,d,g,v){var y=s-r,_=l-i,m=y*y+_*_;if(m>4*n&&g--){var x=u+h,b=a+p,w=c+d,M=ry(x*x+b*b+w*w),k=mr(w/=M),T=Zv(Zv(w)-1)<Fv||Zv(o-f)<Fv?(o+f)/2:Wv(b,x),S=t(T,k),A=S[0],N=S[1],E=A-r,C=N-i,z=_*E-y*C;(z*z/m>n||Zv((y*E+_*C)/m-.5)>.3||u*h+a*p+c*d<E_)&&(e(r,i,o,u,a,c,A,N,T,x/=M,b/=M,w,g,v),v.point(A,N),e(A,N,T,x,b,w,s,l,f,h,p,d,g,v))}}return function(n){function r(e,r){e=t(e,r),n.point(e[0],e[1])}function i(){y=NaN,w.point=o,n.lineStart()}function o(r,i){var o=Cr([r,i]),u=t(r,i);e(y,_,v,m,x,b,y=u[0],_=u[1],v=r,m=o[0],x=o[1],b=o[2],N_,n),n.point(y,_)}function u(){w.point=r,n.lineEnd()}function a(){i(),w.point=c,w.lineEnd=s}function c(t,n){o(l=t,n),f=y,h=_,p=m,d=x,g=b,w.point=o}function s(){e(y,_,v,m,x,b,f,h,l,p,d,g,N_,n),w.lineEnd=u,u()}var l,f,h,p,d,g,v,y,_,m,x,b,w={point:r,lineStart:i,lineEnd:u,polygonStart:function(){n.polygonStart(),w.lineStart=a},polygonEnd:function(){n.polygonEnd(),w.lineStart=i}};return w}}function eo(t){return ro(function(){return t})()}function ro(t){function n(t){return t=l(t[0]*Vv,t[1]*Vv),[t[0]*v+a,c-t[1]*v]}function e(t){return t=l.invert((t[0]-a)/v,(c-t[1])/v),t&&[t[0]*Xv,t[1]*Xv]}function r(t,n){return t=u(t,n),[t[0]*v+a,c-t[1]*v]}function i(){l=_y(s=ri(b,w,M),u);var t=u(m,x);return a=y-t[0]*v,c=_+t[1]*v,o()}function o(){return d=g=null,n}var u,a,c,s,l,f,h,p,d,g,v=150,y=480,_=250,m=0,x=0,b=0,w=0,M=0,k=null,T=T_,S=null,A=Jy,N=.5,E=C_(r,N);return n.stream=function(t){return d&&g===t?d:d=z_(T(s,E(A(g=t))))},n.clipAngle=function(t){return arguments.length?(T=+t?S_(k=t*Vv,6*Vv):(k=null,T_),o()):k*Xv},n.clipExtent=function(t){return arguments.length?(A=null==t?(S=f=h=p=null,Jy):fi(S=+t[0][0],f=+t[0][1],h=+t[1][0],p=+t[1][1]),o()):null==S?null:[[S,f],[h,p]]},n.scale=function(t){return arguments.length?(v=+t,i()):v},n.translate=function(t){return arguments.length?(y=+t[0],_=+t[1],i()):[y,_]},n.center=function(t){return arguments.length?(m=t[0]%360*Vv,x=t[1]%360*Vv,i()):[m*Xv,x*Xv]},n.rotate=function(t){return arguments.length?(b=t[0]%360*Vv,w=t[1]%360*Vv,M=t.length>2?t[2]%360*Vv:0,i()):[b*Xv,w*Xv,M*Xv]},n.precision=function(t){return arguments.length?(E=C_(r,N=t*t),o()):ry(N)},n.fitExtent=function(t,e){return Qi(n,t,e)},n.fitSize=function(t,e){return Ki(n,t,e)},function(){return u=t.apply(this,arguments),n.invert=u.invert&&e,i()}}function io(t){var n=0,e=Iv/3,r=ro(t),i=r(n,e);return i.parallels=function(t){return arguments.length?r(n=t[0]*Vv,e=t[1]*Vv):[n*Xv,e*Xv]},i}function oo(t){function n(t,n){return[t*e,ny(n)/e]}var e=Gv(t);return n.invert=function(t,n){return[t/e,mr(n*e)]},n}function uo(t,n){function e(t,n){var e=ry(o-2*i*ny(n))/i;return[e*ny(t*=i),u-e*Gv(t)]}var r=ny(t),i=(r+ny(n))/2;if(Zv(i)<Fv)return oo(t);var o=1+r*(2*i-r),u=ry(o)/i;return e.invert=function(t,n){var e=u-n;return[Wv(t,Zv(e))/i*ey(e),mr((o-(t*t+e*e)*i*i)/(2*i))]},e}function ao(t){var n=t.length;return{point:function(e,r){for(var i=-1;++i<n;)t[i].point(e,r)},sphere:function(){for(var e=-1;++e<n;)t[e].sphere()},lineStart:function(){for(var e=-1;++e<n;)t[e].lineStart()},lineEnd:function(){for(var e=-1;++e<n;)t[e].lineEnd()},polygonStart:function(){for(var e=-1;++e<n;)t[e].polygonStart()},polygonEnd:function(){for(var e=-1;++e<n;)t[e].polygonEnd()}}}function co(t){return function(n,e){var r=Gv(n),i=Gv(e),o=t(r*i);return[o*i*ny(n),o*ny(e)]}}function so(t){return function(n,e){var r=ry(n*n+e*e),i=t(r),o=ny(i),u=Gv(i);return[Wv(n*o,r*u),mr(r&&e*o/r)]}}function lo(t,n){return[t,Kv(iy((jv+n)/2))]}function fo(t){function n(){var n=Iv*a(),u=o(Cy(o.rotate()).invert([0,0]));return s(null==l?[[u[0]-n,u[1]-n],[u[0]+n,u[1]+n]]:t===lo?[[Math.max(u[0]-n,l),e],[Math.min(u[0]+n,r),i]]:[[l,Math.max(u[1]-n,e)],[r,Math.min(u[1]+n,i)]])}var e,r,i,o=eo(t),u=o.center,a=o.scale,c=o.translate,s=o.clipExtent,l=null;return o.scale=function(t){return arguments.length?(a(t),n()):a()},o.translate=function(t){return arguments.length?(c(t),n()):c()},o.center=function(t){return arguments.length?(u(t),n()):u()},o.clipExtent=function(t){return arguments.length?(null==t?l=e=r=i=null:(l=+t[0][0],e=+t[0][1],r=+t[1][0],i=+t[1][1]),n()):null==l?null:[[l,e],[r,i]]},n()}function ho(t){return iy((jv+t)/2)}function po(t,n){function e(t,n){o>0?n<-jv+Fv&&(n=-jv+Fv):n>jv-Fv&&(n=jv-Fv);var e=o/ty(ho(n),i);return[e*ny(i*t),o-e*Gv(i*t)]}var r=Gv(t),i=t===n?ny(t):Kv(r/Gv(n))/Kv(ho(n)/ho(t)),o=r*ty(ho(t),i)/i;return i?(e.invert=function(t,n){var e=o-n,r=ey(i)*ry(t*t+e*e);return[Wv(t,Zv(e))/i*ey(e),2*$v(ty(o/r,1/i))-jv]},e):lo}function go(t,n){return[t,n]}function vo(t,n){function e(t,n){var e=o-n,r=i*t;return[e*ny(r),o-e*Gv(r)]}var r=Gv(t),i=t===n?ny(t):(r-Gv(n))/(n-t),o=r/i+t;return Zv(i)<Fv?go:(e.invert=function(t,n){var e=o-n;return[Wv(t,Zv(e))/i*ey(e),o-ey(i)*ry(t*t+e*e)]},e)}function yo(t,n){var e=Gv(n),r=Gv(t)*e;return[e*ny(t)/r,ny(n)/r]}function _o(t,n,e,r){return 1===t&&1===n&&0===e&&0===r?Jy:Gi({point:function(i,o){this.stream.point(i*t+e,o*n+r)}})}function mo(t,n){return[Gv(n)*ny(t),ny(n)]}function xo(t,n){var e=Gv(n),r=1+Gv(t)*e;return[e*ny(t)/r,ny(n)/r]}function bo(t,n){return[Kv(iy((jv+n)/2)),-t]}function wo(t,n){return t.parent===n.parent?1:2}function Mo(t){return t.reduce(ko,0)/t.length}function ko(t,n){return t+n.x}function To(t){return 1+t.reduce(So,0)}function So(t,n){return Math.max(t,n.y)}function Ao(t){for(var n;n=t.children;)t=n[0];return t}function No(t){for(var n;n=t.children;)t=n[n.length-1];return t}function Eo(t){var n=0,e=t.children,r=e&&e.length;if(r)for(;--r>=0;)n+=e[r].value;else n=1;t.value=n}function Co(t,n){if(t===n)return t;var e=t.ancestors(),r=n.ancestors(),i=null;for(t=e.pop(),n=r.pop();t===n;)i=t,t=e.pop(),n=r.pop();return i}function zo(t,n){var e,r,i,o,u,a=new Uo(t),c=+t.value&&(a.value=t.value),s=[a];for(null==n&&(n=Lo);e=s.pop();)if(c&&(e.value=+e.data.value),(i=n(e.data))&&(u=i.length))for(e.children=new Array(u),o=u-1;o>=0;--o)s.push(r=e.children[o]=new Uo(i[o])),r.parent=e,r.depth=e.depth+1;return a.eachBefore(qo)}function Do(){return zo(this).eachBefore(Po)}function Lo(t){return t.children}function Po(t){t.data=t.data.data}function qo(t){var n=0;do t.height=n;while((t=t.parent)&&t.height<++n)}function Uo(t){this.data=t,this.depth=this.height=0,this.parent=null}function Ro(t){this._=t,this.next=null}function Oo(t,n){var e=n.x-t.x,r=n.y-t.y,i=t.r-n.r;return i*i+1e-6>e*e+r*r}function Fo(t,n){var e,r,i,o=null,u=t.head;switch(n.length){case 1:e=Yo(n[0]);break;case 2:e=Io(n[0],n[1]);break;case 3:e=jo(n[0],n[1],n[2])}for(;u;)i=u._,r=u.next,e&&Oo(e,i)?o=u:(o?(t.tail=o,o.next=null):t.head=t.tail=null,n.push(i),e=Fo(t,n),n.pop(),t.head?(u.next=t.head,t.head=u):(u.next=null,t.head=t.tail=u),o=t.tail,o.next=r),u=r;return t.tail=o,e}function Yo(t){return{x:t.x,y:t.y,r:t.r}}function Io(t,n){var e=t.x,r=t.y,i=t.r,o=n.x,u=n.y,a=n.r,c=o-e,s=u-r,l=a-i,f=Math.sqrt(c*c+s*s);return{x:(e+o+c/f*l)/2,y:(r+u+s/f*l)/2,r:(f+i+a)/2}}function jo(t,n,e){var r=t.x,i=t.y,o=t.r,u=n.x,a=n.y,c=n.r,s=e.x,l=e.y,f=e.r,h=2*(r-u),p=2*(i-a),d=2*(c-o),g=r*r+i*i-o*o-u*u-a*a+c*c,v=2*(r-s),y=2*(i-l),_=2*(f-o),m=r*r+i*i-o*o-s*s-l*l+f*f,x=v*p-h*y,b=(p*m-y*g)/x-r,w=(y*d-p*_)/x,M=(v*g-h*m)/x-i,k=(h*_-v*d)/x,T=w*w+k*k-1,S=2*(b*w+M*k+o),A=b*b+M*M-o*o,N=(-S-Math.sqrt(S*S-4*T*A))/(2*T);return{x:b+w*N+r,y:M+k*N+i,r:N}}function Ho(t,n,e){var r=t.x,i=t.y,o=n.r+e.r,u=t.r+e.r,a=n.x-r,c=n.y-i,s=a*a+c*c;if(s){var l=.5+((u*=u)-(o*=o))/(2*s),f=Math.sqrt(Math.max(0,2*o*(u+s)-(u-=s)*u-o*o))/(2*s);e.x=r+l*a+f*c,e.y=i+l*c-f*a}else e.x=r+u,e.y=i}function Bo(t,n){var e=n.x-t.x,r=n.y-t.y,i=t.r+n.r;return i*i-1e-6>e*e+r*r}function Xo(t,n,e){var r=t._,i=t.next._,o=r.r+i.r,u=(r.x*i.r+i.x*r.r)/o-n,a=(r.y*i.r+i.y*r.r)/o-e;return u*u+a*a}function Vo(t){this._=t,this.next=null,this.previous=null}function Zo(t){if(!(i=t.length))return 0;var n,e,r,i;if(n=t[0],n.x=0,n.y=0,!(i>1))return n.r;if(e=t[1],n.x=-e.r,e.x=n.r,e.y=0,!(i>2))return n.r+e.r;Ho(e,n,r=t[2]);var o,u,a,c,s,l,f,h=n.r*n.r,p=e.r*e.r,d=r.r*r.r,g=h+p+d,v=h*n.x+p*e.x+d*r.x,y=h*n.y+p*e.y+d*r.y;n=new Vo(n),e=new Vo(e),r=new Vo(r),n.next=r.previous=e,e.next=n.previous=r,r.next=e.previous=n;t:for(a=3;a<i;++a){Ho(n._,e._,r=t[a]),r=new Vo(r),c=e.next,s=n.previous,l=e._.r,f=n._.r;do if(l<=f){if(Bo(c._,r._)){e=c,n.next=e,e.previous=n,--a;continue t}l+=c._.r,c=c.next}else{if(Bo(s._,r._)){n=s,n.next=e,e.previous=n,--a;continue t}f+=s._.r,s=s.previous}while(c!==s.next);for(r.previous=n,r.next=e,n.next=e.previous=e=r,g+=d=r._.r*r._.r,v+=d*r._.x,y+=d*r._.y,h=Xo(n,o=v/g,u=y/g);(r=r.next)!==e;)(d=Xo(r,o,u))<h&&(n=r,h=d);e=n.next}for(n=[e._],r=e;(r=r.next)!==e;)n.push(r._);for(r=am(n),a=0;a<i;++a)n=t[a],n.x-=r.x,n.y-=r.y;return r.r}function $o(t){return null==t?null:Wo(t)}function Wo(t){if("function"!=typeof t)throw new Error;return t}function Go(){return 0}function Jo(t){return Math.sqrt(t.value)}function Qo(t){return function(n){n.children||(n.r=Math.max(0,+t(n)||0))}}function Ko(t,n){return function(e){if(r=e.children){var r,i,o,u=r.length,a=t(e)*n||0;if(a)for(i=0;i<u;++i)r[i].r+=a;if(o=Zo(r),a)for(i=0;i<u;++i)r[i].r-=a;e.r=o+a}}}function tu(t){return function(n){var e=n.parent;n.r*=t,e&&(n.x=e.x+t*n.x,n.y=e.y+t*n.y)}}function nu(t){return t.id}function eu(t){return t.parentId}function ru(t,n){return t.parent===n.parent?1:2;
}function iu(t){var n=t.children;return n?n[0]:t.t}function ou(t){var n=t.children;return n?n[n.length-1]:t.t}function uu(t,n,e){var r=e/(n.i-t.i);n.c-=r,n.s+=e,t.c+=r,n.z+=e,n.m+=e}function au(t){for(var n,e=0,r=0,i=t.children,o=i.length;--o>=0;)n=i[o],n.z+=e,n.m+=e,e+=n.s+(r+=n.c)}function cu(t,n,e){return t.a.parent===n.parent?t.a:e}function su(t,n){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=n}function lu(t){for(var n,e,r,i,o,u=new su(t,0),a=[u];n=a.pop();)if(r=n._.children)for(n.children=new Array(o=r.length),i=o-1;i>=0;--i)a.push(e=n.children[i]=new su(r[i],i)),e.parent=n;return(u.parent=new su(null,0)).children=[u],u}function fu(t,n,e,r,i,o){for(var u,a,c,s,l,f,h,p,d,g,v,y=[],_=n.children,m=0,x=0,b=_.length,w=n.value;m<b;){c=i-e,s=o-r;do l=_[x++].value;while(!l&&x<b);for(f=h=l,g=Math.max(s/c,c/s)/(w*t),v=l*l*g,d=Math.max(h/v,v/f);x<b;++x){if(l+=a=_[x].value,a<f&&(f=a),a>h&&(h=a),v=l*l*g,p=Math.max(h/v,v/f),p>d){l-=a;break}d=p}y.push(u={value:l,dice:c<s,children:_.slice(m,x)}),u.dice?hm(u,e,r,i,w?r+=s*l/w:o):mm(u,e,r,w?e+=c*l/w:i,o),w-=l,m=x}return y}function hu(t,n){return t[0]-n[0]||t[1]-n[1]}function pu(t){for(var n=t.length,e=[0,1],r=2,i=2;i<n;++i){for(;r>1&&Nm(t[e[r-2]],t[e[r-1]],t[i])<=0;)--r;e[r++]=i}return e.slice(0,r)}function du(t){this._size=t,this._call=this._error=null,this._tasks=[],this._data=[],this._waiting=this._active=this._ended=this._start=0}function gu(t){if(!t._start)try{vu(t)}catch(n){if(t._tasks[t._ended+t._active-1])_u(t,n);else if(!t._data)throw n}}function vu(t){for(;t._start=t._waiting&&t._active<t._size;){var n=t._ended+t._active,e=t._tasks[n],r=e.length-1,i=e[r];e[r]=yu(t,n),--t._waiting,++t._active,e=i.apply(null,e),t._tasks[n]&&(t._tasks[n]=e||Lm)}}function yu(t,n){return function(e,r){t._tasks[n]&&(--t._active,++t._ended,t._tasks[n]=null,null==t._error&&(null!=e?_u(t,e):(t._data[n]=r,t._waiting?gu(t):mu(t))))}}function _u(t,n){var e,r=t._tasks.length;for(t._error=n,t._data=void 0,t._waiting=NaN;--r>=0;)if((e=t._tasks[r])&&(t._tasks[r]=null,e.abort))try{e.abort()}catch(n){}t._active=NaN,mu(t)}function mu(t){if(!t._active&&t._call){var n=t._data;t._data=void 0,t._call(t._error,n)}}function xu(t){if(null==t)t=1/0;else if(!((t=+t)>=1))throw new Error("invalid concurrency");return new du(t)}function bu(t){return function(n,e){t(null==n?e:null)}}function wu(t){var n=t.responseType;return n&&"text"!==n?t.response:t.responseText}function Mu(t,n){return function(e){return t(e.responseText,n)}}function ku(t){function n(n){var o=n+"",u=e.get(o);if(!u){if(i!==Km)return i;e.set(o,u=r.push(n))}return t[(u-1)%t.length]}var e=He(),r=[],i=Km;return t=null==t?[]:Qm.call(t),n.domain=function(t){if(!arguments.length)return r.slice();r=[],e=He();for(var i,o,u=-1,a=t.length;++u<a;)e.has(o=(i=t[u])+"")||e.set(o,r.push(i));return n},n.range=function(e){return arguments.length?(t=Qm.call(e),n):t.slice()},n.unknown=function(t){return arguments.length?(i=t,n):i},n.copy=function(){return ku().domain(r).range(t).unknown(i)},n}function Tu(){function t(){var t=i().length,r=u[1]<u[0],f=u[r-0],h=u[1-r];n=(h-f)/Math.max(1,t-c+2*s),a&&(n=Math.floor(n)),f+=(h-f-n*(t-c))*l,e=n*(1-c),a&&(f=Math.round(f),e=Math.round(e));var p=cl(t).map(function(t){return f+n*t});return o(r?p.reverse():p)}var n,e,r=ku().unknown(void 0),i=r.domain,o=r.range,u=[0,1],a=!1,c=0,s=0,l=.5;return delete r.unknown,r.domain=function(n){return arguments.length?(i(n),t()):i()},r.range=function(n){return arguments.length?(u=[+n[0],+n[1]],t()):u.slice()},r.rangeRound=function(n){return u=[+n[0],+n[1]],a=!0,t()},r.bandwidth=function(){return e},r.step=function(){return n},r.round=function(n){return arguments.length?(a=!!n,t()):a},r.padding=function(n){return arguments.length?(c=s=Math.max(0,Math.min(1,n)),t()):c},r.paddingInner=function(n){return arguments.length?(c=Math.max(0,Math.min(1,n)),t()):c},r.paddingOuter=function(n){return arguments.length?(s=Math.max(0,Math.min(1,n)),t()):s},r.align=function(n){return arguments.length?(l=Math.max(0,Math.min(1,n)),t()):l},r.copy=function(){return Tu().domain(i()).range(u).round(a).paddingInner(c).paddingOuter(s).align(l)},t()}function Su(t){var n=t.copy;return t.padding=t.paddingOuter,delete t.paddingInner,delete t.paddingOuter,t.copy=function(){return Su(n())},t}function Au(){return Su(Tu().paddingInner(1))}function Nu(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:tx(n)}function Eu(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=n?0:t>=e?1:r(t)}}}function Cu(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=0?n:t>=1?e:r(t)}}}function zu(t,n,e,r){var i=t[0],o=t[1],u=n[0],a=n[1];return o<i?(i=e(o,i),u=r(a,u)):(i=e(i,o),u=r(u,a)),function(t){return u(i(t))}}function Du(t,n,e,r){var i=Math.min(t.length,n.length)-1,o=new Array(i),u=new Array(i),a=-1;for(t[i]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++a<i;)o[a]=e(t[a],t[a+1]),u[a]=r(n[a],n[a+1]);return function(n){var e=$s(t,n,1,i)-1;return u[e](o[e](n))}}function Lu(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp())}function Pu(t,n){function e(){return i=Math.min(a.length,c.length)>2?Du:zu,o=u=null,r}function r(n){return(o||(o=i(a,c,l?Eu(t):t,s)))(+n)}var i,o,u,a=ex,c=ex,s=Yh,l=!1;return r.invert=function(t){return(u||(u=i(c,a,Nu,l?Cu(n):n)))(+t)},r.domain=function(t){return arguments.length?(a=Jm.call(t,nx),e()):a.slice()},r.range=function(t){return arguments.length?(c=Qm.call(t),e()):c.slice()},r.rangeRound=function(t){return c=Qm.call(t),s=Ih,e()},r.clamp=function(t){return arguments.length?(l=!!t,e()):l},r.interpolate=function(t){return arguments.length?(s=t,e()):s},e()}function qu(t){var n=t.domain;return t.ticks=function(t){var e=n();return hl(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){return rx(n(),t,e)},t.nice=function(e){null==e&&(e=10);var i,o=n(),u=0,a=o.length-1,c=o[u],s=o[a];return s<c&&(i=c,c=s,s=i,i=u,u=a,a=i),i=r(c,s,e),i>0?(c=Math.floor(c/i)*i,s=Math.ceil(s/i)*i,i=r(c,s,e)):i<0&&(c=Math.ceil(c*i)/i,s=Math.floor(s*i)/i,i=r(c,s,e)),i>0?(o[u]=Math.floor(c/i)*i,o[a]=Math.ceil(s/i)*i,n(o)):i<0&&(o[u]=Math.ceil(c*i)/i,o[a]=Math.floor(s*i)/i,n(o)),t},t}function Uu(){var t=Pu(Nu,qh);return t.copy=function(){return Lu(t,Uu())},qu(t)}function Ru(){function t(t){return+t}var n=[0,1];return t.invert=t,t.domain=t.range=function(e){return arguments.length?(n=Jm.call(e,nx),t):n.slice()},t.copy=function(){return Ru().domain(n)},qu(t)}function Ou(t,n){return(n=Math.log(n/t))?function(e){return Math.log(e/t)/n}:tx(n)}function Fu(t,n){return t<0?function(e){return-Math.pow(-n,e)*Math.pow(-t,1-e)}:function(e){return Math.pow(n,e)*Math.pow(t,1-e)}}function Yu(t){return isFinite(t)?+("1e"+t):t<0?0:t}function Iu(t){return 10===t?Yu:t===Math.E?Math.exp:function(n){return Math.pow(t,n)}}function ju(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(n){return Math.log(n)/t})}function Hu(t){return function(n){return-t(-n)}}function Bu(){function n(){return o=ju(i),u=Iu(i),r()[0]<0&&(o=Hu(o),u=Hu(u)),e}var e=Pu(Ou,Fu).domain([1,10]),r=e.domain,i=10,o=ju(10),u=Iu(10);return e.base=function(t){return arguments.length?(i=+t,n()):i},e.domain=function(t){return arguments.length?(r(t),n()):r()},e.ticks=function(t){var n,e=r(),a=e[0],c=e[e.length-1];(n=c<a)&&(h=a,a=c,c=h);var s,l,f,h=o(a),p=o(c),d=null==t?10:+t,g=[];if(!(i%1)&&p-h<d){if(h=Math.round(h)-1,p=Math.round(p)+1,a>0){for(;h<p;++h)for(l=1,s=u(h);l<i;++l)if(f=s*l,!(f<a)){if(f>c)break;g.push(f)}}else for(;h<p;++h)for(l=i-1,s=u(h);l>=1;--l)if(f=s*l,!(f<a)){if(f>c)break;g.push(f)}}else g=hl(h,p,Math.min(p-h,d)).map(u);return n?g.reverse():g},e.tickFormat=function(n,r){if(null==r&&(r=10===i?".0e":","),"function"!=typeof r&&(r=t.format(r)),n===1/0)return r;null==n&&(n=10);var a=Math.max(1,i*n/e.ticks().length);return function(t){var n=t/u(Math.round(o(t)));return n*i<i-.5&&(n*=i),n<=a?r(t):""}},e.nice=function(){return r(ix(r(),{floor:function(t){return u(Math.floor(o(t)))},ceil:function(t){return u(Math.ceil(o(t)))}}))},e.copy=function(){return Lu(e,Bu().base(i))},e}function Xu(t,n){return t<0?-Math.pow(-t,n):Math.pow(t,n)}function Vu(){function t(t,n){return(n=Xu(n,e)-(t=Xu(t,e)))?function(r){return(Xu(r,e)-t)/n}:tx(n)}function n(t,n){return n=Xu(n,e)-(t=Xu(t,e)),function(r){return Xu(t+n*r,1/e)}}var e=1,r=Pu(t,n),i=r.domain;return r.exponent=function(t){return arguments.length?(e=+t,i(i())):e},r.copy=function(){return Lu(r,Vu().exponent(e))},qu(r)}function Zu(){return Vu().exponent(.5)}function $u(){function t(){var t=0,o=Math.max(1,r.length);for(i=new Array(o-1);++t<o;)i[t-1]=gl(e,t/o);return n}function n(t){if(!isNaN(t=+t))return r[$s(i,t)]}var e=[],r=[],i=[];return n.invertExtent=function(t){var n=r.indexOf(t);return n<0?[NaN,NaN]:[n>0?i[n-1]:e[0],n<i.length?i[n]:e[e.length-1]]},n.domain=function(n){if(!arguments.length)return e.slice();e=[];for(var r,i=0,o=n.length;i<o;++i)r=n[i],null==r||isNaN(r=+r)||e.push(r);return e.sort(Xs),t()},n.range=function(n){return arguments.length?(r=Qm.call(n),t()):r.slice()},n.quantiles=function(){return i.slice()},n.copy=function(){return $u().domain(e).range(r)},n}function Wu(){function t(t){if(t<=t)return u[$s(o,t,0,i)]}function n(){var n=-1;for(o=new Array(i);++n<i;)o[n]=((n+1)*r-(n-i)*e)/(i+1);return t}var e=0,r=1,i=1,o=[.5],u=[0,1];return t.domain=function(t){return arguments.length?(e=+t[0],r=+t[1],n()):[e,r]},t.range=function(t){return arguments.length?(i=(u=Qm.call(t)).length-1,n()):u.slice()},t.invertExtent=function(t){var n=u.indexOf(t);return n<0?[NaN,NaN]:n<1?[e,o[0]]:n>=i?[o[i-1],r]:[o[n-1],o[n]]},t.copy=function(){return Wu().domain([e,r]).range(u)},qu(t)}function Gu(){function t(t){if(t<=t)return e[$s(n,t,0,r)]}var n=[.5],e=[0,1],r=1;return t.domain=function(i){return arguments.length?(n=Qm.call(i),r=Math.min(n.length,e.length-1),t):n.slice()},t.range=function(i){return arguments.length?(e=Qm.call(i),r=Math.min(n.length,e.length-1),t):e.slice()},t.invertExtent=function(t){var r=e.indexOf(t);return[n[r-1],n[r]]},t.copy=function(){return Gu().domain(n).range(e)},t}function Ju(t,n,e,r){function i(n){return t(n=new Date((+n))),n}return i.floor=i,i.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},i.round=function(t){var n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=function(t,e){return n(t=new Date((+t)),null==e?1:Math.floor(e)),t},i.range=function(e,r,o){var u=[];if(e=i.ceil(e),o=null==o?1:Math.floor(o),!(e<r&&o>0))return u;do u.push(new Date((+e)));while(n(e,o),t(e),e<r);return u},i.filter=function(e){return Ju(function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)},function(t,r){if(t>=t)for(;--r>=0;)for(;n(t,1),!e(t););})},e&&(i.count=function(n,r){return ox.setTime(+n),ux.setTime(+r),t(ox),t(ux),Math.floor(e(ox,ux))},i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?function(n){return r(n)%t===0}:function(n){return i.count(0,n)%t===0}):i:null}),i}function Qu(t){return Ju(function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+7*n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*lx)/px})}function Ku(t){return Ju(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+7*n)},function(t,n){return(n-t)/px})}function ta(t){if(0<=t.y&&t.y<100){var n=new Date((-1),t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function na(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function ea(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}function ra(t){function n(t,n){return function(e){var r,i,o,u=[],a=-1,c=0,s=t.length;for(e instanceof Date||(e=new Date((+e)));++a<s;)37===t.charCodeAt(a)&&(u.push(t.slice(c,a)),null!=(i=fb[r=t.charAt(++a)])?r=t.charAt(++a):i="e"===r?" ":"0",(o=n[r])&&(r=o(e,i)),u.push(r),c=a+1);return u.push(t.slice(c,a)),u.join("")}}function e(t,n){return function(e){var i=ea(1900),o=r(i,t,e+="",0);if(o!=e.length)return null;if("p"in i&&(i.H=i.H%12+12*i.p),"W"in i||"U"in i){"w"in i||(i.w="W"in i?1:0);var u="Z"in i?na(ea(i.y)).getUTCDay():n(ea(i.y)).getDay();i.m=0,i.d="W"in i?(i.w+6)%7+7*i.W-(u+5)%7:i.w+7*i.U-(u+6)%7}return"Z"in i?(i.H+=i.Z/100|0,i.M+=i.Z%100,na(i)):n(i)}}function r(t,n,e,r){for(var i,o,u=0,a=n.length,c=e.length;u<a;){if(r>=c)return-1;if(i=n.charCodeAt(u++),37===i){if(i=n.charAt(u++),o=j[i in fb?n.charAt(u++):i],!o||(r=o(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}function i(t,n,e){var r=C.exec(n.slice(e));return r?(t.p=z[r[0].toLowerCase()],e+r[0].length):-1}function o(t,n,e){var r=P.exec(n.slice(e));return r?(t.w=q[r[0].toLowerCase()],e+r[0].length):-1}function u(t,n,e){var r=D.exec(n.slice(e));return r?(t.w=L[r[0].toLowerCase()],e+r[0].length):-1}function a(t,n,e){var r=O.exec(n.slice(e));return r?(t.m=F[r[0].toLowerCase()],e+r[0].length):-1}function c(t,n,e){var r=U.exec(n.slice(e));return r?(t.m=R[r[0].toLowerCase()],e+r[0].length):-1}function s(t,n,e){return r(t,w,n,e)}function l(t,n,e){return r(t,M,n,e)}function f(t,n,e){return r(t,k,n,e)}function h(t){return A[t.getDay()]}function p(t){return S[t.getDay()]}function d(t){return E[t.getMonth()]}function g(t){return N[t.getMonth()]}function v(t){return T[+(t.getHours()>=12)]}function y(t){return A[t.getUTCDay()]}function _(t){return S[t.getUTCDay()]}function m(t){return E[t.getUTCMonth()]}function x(t){return N[t.getUTCMonth()]}function b(t){return T[+(t.getUTCHours()>=12)]}var w=t.dateTime,M=t.date,k=t.time,T=t.periods,S=t.days,A=t.shortDays,N=t.months,E=t.shortMonths,C=ua(T),z=aa(T),D=ua(S),L=aa(S),P=ua(A),q=aa(A),U=ua(N),R=aa(N),O=ua(E),F=aa(E),Y={a:h,A:p,b:d,B:g,c:null,d:wa,e:wa,H:Ma,I:ka,j:Ta,L:Sa,m:Aa,M:Na,p:v,S:Ea,U:Ca,w:za,W:Da,x:null,X:null,y:La,Y:Pa,Z:qa,"%":Ga},I={a:y,A:_,b:m,B:x,c:null,d:Ua,e:Ua,H:Ra,I:Oa,j:Fa,L:Ya,m:Ia,M:ja,p:b,S:Ha,U:Ba,w:Xa,W:Va,x:null,X:null,y:Za,Y:$a,Z:Wa,"%":Ga},j={a:o,A:u,b:a,B:c,c:s,d:ga,e:ga,H:ya,I:ya,j:va,L:xa,m:da,M:_a,p:i,S:ma,U:sa,w:ca,W:la,x:l,X:f,y:ha,Y:fa,Z:pa,"%":ba};return Y.x=n(M,Y),Y.X=n(k,Y),Y.c=n(w,Y),I.x=n(M,I),I.X=n(k,I),I.c=n(w,I),{format:function(t){var e=n(t+="",Y);return e.toString=function(){return t},e},parse:function(t){var n=e(t+="",ta);return n.toString=function(){return t},n},utcFormat:function(t){var e=n(t+="",I);return e.toString=function(){return t},e},utcParse:function(t){var n=e(t,na);return n.toString=function(){return t},n}}}function ia(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",o=i.length;return r+(o<e?new Array(e-o+1).join(n)+i:i)}function oa(t){return t.replace(db,"\\$&")}function ua(t){return new RegExp("^(?:"+t.map(oa).join("|")+")","i")}function aa(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function ca(t,n,e){var r=hb.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function sa(t,n,e){var r=hb.exec(n.slice(e));return r?(t.U=+r[0],e+r[0].length):-1}function la(t,n,e){var r=hb.exec(n.slice(e));return r?(t.W=+r[0],e+r[0].length):-1}function fa(t,n,e){var r=hb.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function ha(t,n,e){var r=hb.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function pa(t,n,e){var r=/^(Z)|([+-]\d\d)(?:\:?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function da(t,n,e){var r=hb.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function ga(t,n,e){var r=hb.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function va(t,n,e){var r=hb.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function ya(t,n,e){var r=hb.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function _a(t,n,e){var r=hb.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function ma(t,n,e){var r=hb.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function xa(t,n,e){var r=hb.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function ba(t,n,e){var r=pb.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function wa(t,n){return ia(t.getDate(),n,2)}function Ma(t,n){return ia(t.getHours(),n,2)}function ka(t,n){return ia(t.getHours()%12||12,n,2)}function Ta(t,n){return ia(1+xx.count(Ox(t),t),n,3)}function Sa(t,n){return ia(t.getMilliseconds(),n,3)}function Aa(t,n){return ia(t.getMonth()+1,n,2)}function Na(t,n){return ia(t.getMinutes(),n,2)}function Ea(t,n){return ia(t.getSeconds(),n,2)}function Ca(t,n){return ia(wx.count(Ox(t),t),n,2)}function za(t){return t.getDay()}function Da(t,n){return ia(Mx.count(Ox(t),t),n,2)}function La(t,n){return ia(t.getFullYear()%100,n,2)}function Pa(t,n){return ia(t.getFullYear()%1e4,n,4)}function qa(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+ia(n/60|0,"0",2)+ia(n%60,"0",2)}function Ua(t,n){return ia(t.getUTCDate(),n,2)}function Ra(t,n){return ia(t.getUTCHours(),n,2)}function Oa(t,n){return ia(t.getUTCHours()%12||12,n,2)}function Fa(t,n){return ia(1+Bx.count(cb(t),t),n,3)}function Ya(t,n){return ia(t.getUTCMilliseconds(),n,3)}function Ia(t,n){return ia(t.getUTCMonth()+1,n,2)}function ja(t,n){return ia(t.getUTCMinutes(),n,2)}function Ha(t,n){return ia(t.getUTCSeconds(),n,2)}function Ba(t,n){return ia(Vx.count(cb(t),t),n,2)}function Xa(t){return t.getUTCDay()}function Va(t,n){return ia(Zx.count(cb(t),t),n,2)}function Za(t,n){return ia(t.getUTCFullYear()%100,n,2)}function $a(t,n){return ia(t.getUTCFullYear()%1e4,n,4)}function Wa(){return"+0000"}function Ga(){return"%"}function Ja(n){return sb=ra(n),t.timeFormat=sb.format,t.timeParse=sb.parse,t.utcFormat=sb.utcFormat,t.utcParse=sb.utcParse,sb}function Qa(t){return t.toISOString()}function Ka(t){var n=new Date(t);return isNaN(n)?null:n}function tc(t){return new Date(t)}function nc(t){return t instanceof Date?+t:+new Date((+t))}function ec(t,n,e,r,o,u,a,c,s){function l(i){return(a(i)<i?g:u(i)<i?v:o(i)<i?y:r(i)<i?_:n(i)<i?e(i)<i?m:x:t(i)<i?b:w)(i)}function f(n,e,r,o){if(null==n&&(n=10),"number"==typeof n){var u=Math.abs(r-e)/n,a=Vs(function(t){return t[2]}).right(M,u);a===M.length?(o=i(e/kb,r/kb,n),n=t):a?(a=M[u/M[a-1][2]<M[a][2]/u?a-1:a],o=a[1],n=a[0]):(o=i(e,r,n),n=c)}return null==o?n:n.every(o)}var h=Pu(Nu,qh),p=h.invert,d=h.domain,g=s(".%L"),v=s(":%S"),y=s("%I:%M"),_=s("%I %p"),m=s("%a %d"),x=s("%b %d"),b=s("%B"),w=s("%Y"),M=[[a,1,_b],[a,5,5*_b],[a,15,15*_b],[a,30,30*_b],[u,1,mb],[u,5,5*mb],[u,15,15*mb],[u,30,30*mb],[o,1,xb],[o,3,3*xb],[o,6,6*xb],[o,12,12*xb],[r,1,bb],[r,2,2*bb],[e,1,wb],[n,1,Mb],[n,3,3*Mb],[t,1,kb]];return h.invert=function(t){return new Date(p(t))},h.domain=function(t){return arguments.length?d(Jm.call(t,nc)):d().map(tc)},h.ticks=function(t,n){var e,r=d(),i=r[0],o=r[r.length-1],u=o<i;return u&&(e=i,i=o,o=e),e=f(t,i,o,n),e=e?e.range(i,o+1):[],u?e.reverse():e},h.tickFormat=function(t,n){return null==n?l:s(n)},h.nice=function(t,n){var e=d();return(t=f(t,e[0],e[e.length-1],n))?d(ix(e,t)):h},h.copy=function(){return Lu(h,ec(t,n,e,r,o,u,a,c,s))},h}function rc(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}}function ic(t){function n(n){var o=(n-e)/(r-e);return t(i?Math.max(0,Math.min(1,o)):o)}var e=0,r=1,i=!1;return n.domain=function(t){return arguments.length?(e=+t[0],r=+t[1],n):[e,r]},n.clamp=function(t){return arguments.length?(i=!!t,n):i},n.interpolator=function(e){return arguments.length?(t=e,n):t},n.copy=function(){return ic(t).domain([e,r]).clamp(i)},qu(n)}function oc(t){return t>1?0:t<-1?Gb:Math.acos(t)}function uc(t){return t>=1?Jb:t<=-1?-Jb:Math.asin(t)}function ac(t){return t.innerRadius}function cc(t){return t.outerRadius}function sc(t){return t.startAngle}function lc(t){return t.endAngle}function fc(t){return t&&t.padAngle}function hc(t,n,e,r,i,o,u,a){var c=e-t,s=r-n,l=u-i,f=a-o,h=(l*(n-o)-f*(t-i))/(f*c-l*s);return[t+h*c,n+h*s]}function pc(t,n,e,r,i,o,u){var a=t-e,c=n-r,s=(u?o:-o)/$b(a*a+c*c),l=s*c,f=-s*a,h=t+l,p=n+f,d=e+l,g=r+f,v=(h+d)/2,y=(p+g)/2,_=d-h,m=g-p,x=_*_+m*m,b=i-o,w=h*g-d*p,M=(m<0?-1:1)*$b(Xb(0,b*b*x-w*w)),k=(w*m-_*M)/x,T=(-w*_-m*M)/x,S=(w*m+_*M)/x,A=(-w*_+m*M)/x,N=k-v,E=T-y,C=S-v,z=A-y;return N*N+E*E>C*C+z*z&&(k=S,T=A),{cx:k,cy:T,x01:-l,y01:-f,x11:k*(i/b-1),y11:T*(i/b-1)}}function dc(t){this._context=t}function gc(t){return t[0]}function vc(t){return t[1]}function yc(t){this._curve=t}function _c(t){function n(n){return new yc(t(n))}return n._curve=t,n}function mc(t){var n=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?n(_c(t)):n()._curve},t}function xc(t){return t.source}function bc(t){return t.target}function wc(t){function n(){var n,a=sw.call(arguments),c=e.apply(this,a),s=r.apply(this,a);if(u||(u=n=Ue()),t(u,+i.apply(this,(a[0]=c,a)),+o.apply(this,a),+i.apply(this,(a[0]=s,a)),+o.apply(this,a)),n)return u=null,n+""||null}var e=xc,r=bc,i=gc,o=vc,u=null;return n.source=function(t){return arguments.length?(e=t,n):e},n.target=function(t){return arguments.length?(r=t,n):r},n.x=function(t){return arguments.length?(i="function"==typeof t?t:Ib(+t),n):i},n.y=function(t){return arguments.length?(o="function"==typeof t?t:Ib(+t),n):o},n.context=function(t){return arguments.length?(u=null==t?null:t,n):u},n}function Mc(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n=(n+r)/2,e,n,i,r,i)}function kc(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n,e=(e+i)/2,r,e,r,i)}function Tc(t,n,e,r,i){var o=lw(n,e),u=lw(n,e=(e+i)/2),a=lw(r,e),c=lw(r,i);t.moveTo(o[0],o[1]),t.bezierCurveTo(u[0],u[1],a[0],a[1],c[0],c[1])}function Sc(){return wc(Mc)}function Ac(){return wc(kc)}function Nc(){var t=wc(Tc);return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t}function Ec(t,n,e){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+n)/6,(t._y0+4*t._y1+e)/6)}function Cc(t){this._context=t}function zc(t){this._context=t}function Dc(t){this._context=t}function Lc(t,n){this._basis=new Cc(t),this._beta=n}function Pc(t,n,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-n),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function qc(t,n){this._context=t,this._k=(1-n)/6}function Uc(t,n){this._context=t,this._k=(1-n)/6}function Rc(t,n){this._context=t,this._k=(1-n)/6}function Oc(t,n,e){var r=t._x1,i=t._y1,o=t._x2,u=t._y2;if(t._l01_a>Wb){var a=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,c=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*a-t._x0*t._l12_2a+t._x2*t._l01_2a)/c,i=(i*a-t._y0*t._l12_2a+t._y2*t._l01_2a)/c}if(t._l23_a>Wb){var s=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,l=3*t._l23_a*(t._l23_a+t._l12_a);o=(o*s+t._x1*t._l23_2a-n*t._l12_2a)/l,u=(u*s+t._y1*t._l23_2a-e*t._l12_2a)/l}t._context.bezierCurveTo(r,i,o,u,t._x2,t._y2)}function Fc(t,n){this._context=t,this._alpha=n}function Yc(t,n){this._context=t,this._alpha=n}function Ic(t,n){this._context=t,this._alpha=n}function jc(t){this._context=t}function Hc(t){return t<0?-1:1}function Bc(t,n,e){var r=t._x1-t._x0,i=n-t._x1,o=(t._y1-t._y0)/(r||i<0&&-0),u=(e-t._y1)/(i||r<0&&-0),a=(o*i+u*r)/(r+i);return(Hc(o)+Hc(u))*Math.min(Math.abs(o),Math.abs(u),.5*Math.abs(a))||0}function Xc(t,n){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-n)/2:n}function Vc(t,n,e){var r=t._x0,i=t._y0,o=t._x1,u=t._y1,a=(o-r)/3;t._context.bezierCurveTo(r+a,i+a*n,o-a,u-a*e,o,u)}function Zc(t){this._context=t}function $c(t){this._context=new Wc(t)}function Wc(t){this._context=t}function Gc(t){return new Zc(t)}function Jc(t){return new $c(t)}function Qc(t){this._context=t}function Kc(t){var n,e,r=t.length-1,i=new Array(r),o=new Array(r),u=new Array(r);for(i[0]=0,o[0]=2,u[0]=t[0]+2*t[1],n=1;n<r-1;++n)i[n]=1,o[n]=4,u[n]=4*t[n]+2*t[n+1];for(i[r-1]=2,o[r-1]=7,u[r-1]=8*t[r-1]+t[r],n=1;n<r;++n)e=i[n]/o[n-1],o[n]-=e,u[n]-=e*u[n-1];for(i[r-1]=u[r-1]/o[r-1],n=r-2;n>=0;--n)i[n]=(u[n]-i[n+1])/o[n];for(o[r-1]=(t[r]+i[r-1])/2,n=0;n<r-1;++n)o[n]=2*t[n+1]-i[n+1];return[i,o]}function ts(t,n){this._context=t,this._t=n}function ns(t){return new ts(t,0)}function es(t){return new ts(t,1)}function rs(t,n){return t[n]}function is(t){for(var n,e=0,r=-1,i=t.length;++r<i;)(n=+t[r][1])&&(e+=n);return e}function os(t){return t[0]}function us(t){return t[1]}function as(){this._=null}function cs(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function ss(t,n){var e=n,r=n.R,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function ls(t,n){var e=n,r=n.L,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function fs(t){for(;t.L;)t=t.L;return t}function hs(t,n,e,r){var i=[null,null],o=aM.push(i)-1;return i.left=t,i.right=n,e&&ds(i,t,n,e),r&&ds(i,n,t,r),oM[t.index].halfedges.push(o),oM[n.index].halfedges.push(o),i}function ps(t,n,e){var r=[n,e];return r.left=t,r}function ds(t,n,e,r){t[0]||t[1]?t.left===e?t[1]=r:t[0]=r:(t[0]=r,t.left=n,t.right=e)}function gs(t,n,e,r,i){var o,u=t[0],a=t[1],c=u[0],s=u[1],l=a[0],f=a[1],h=0,p=1,d=l-c,g=f-s;if(o=n-c,d||!(o>0)){if(o/=d,d<0){if(o<h)return;o<p&&(p=o)}else if(d>0){if(o>p)return;o>h&&(h=o)}if(o=r-c,d||!(o<0)){if(o/=d,d<0){if(o>p)return;o>h&&(h=o)}else if(d>0){if(o<h)return;o<p&&(p=o)}if(o=e-s,g||!(o>0)){if(o/=g,g<0){if(o<h)return;o<p&&(p=o)}else if(g>0){if(o>p)return;o>h&&(h=o)}if(o=i-s,g||!(o<0)){if(o/=g,g<0){if(o>p)return;o>h&&(h=o)}else if(g>0){if(o<h)return;o<p&&(p=o)}return!(h>0||p<1)||(h>0&&(t[0]=[c+h*d,s+h*g]),p<1&&(t[1]=[c+p*d,s+p*g]),!0)}}}}}function vs(t,n,e,r,i){var o=t[1];if(o)return!0;var u,a,c=t[0],s=t.left,l=t.right,f=s[0],h=s[1],p=l[0],d=l[1],g=(f+p)/2,v=(h+d)/2;if(d===h){if(g<n||g>=r)return;if(f>p){if(c){if(c[1]>=i)return}else c=[g,e];o=[g,i]}else{if(c){if(c[1]<e)return}else c=[g,i];o=[g,e]}}else if(u=(f-p)/(d-h),a=v-u*g,u<-1||u>1)if(f>p){if(c){if(c[1]>=i)return}else c=[(e-a)/u,e];o=[(i-a)/u,i]}else{if(c){if(c[1]<e)return}else c=[(i-a)/u,i];o=[(e-a)/u,e]}else if(h<d){if(c){if(c[0]>=r)return}else c=[n,u*n+a];o=[r,u*r+a]}else{if(c){if(c[0]<n)return}else c=[r,u*r+a];o=[n,u*n+a]}return t[0]=c,t[1]=o,!0}function ys(t,n,e,r){for(var i,o=aM.length;o--;)vs(i=aM[o],t,n,e,r)&&gs(i,t,n,e,r)&&(Math.abs(i[0][0]-i[1][0])>lM||Math.abs(i[0][1]-i[1][1])>lM)||delete aM[o]}function _s(t){return oM[t.index]={site:t,halfedges:[]}}function ms(t,n){var e=t.site,r=n.left,i=n.right;return e===i&&(i=r,r=e),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(e===r?(r=n[1],i=n[0]):(r=n[0],i=n[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function xs(t,n){return n[+(n.left!==t.site)]}function bs(t,n){return n[+(n.left===t.site)]}function ws(){for(var t,n,e,r,i=0,o=oM.length;i<o;++i)if((t=oM[i])&&(r=(n=t.halfedges).length)){var u=new Array(r),a=new Array(r);for(e=0;e<r;++e)u[e]=e,a[e]=ms(t,aM[n[e]]);for(u.sort(function(t,n){return a[n]-a[t]}),e=0;e<r;++e)a[e]=n[u[e]];for(e=0;e<r;++e)n[e]=a[e]}}function Ms(t,n,e,r){var i,o,u,a,c,s,l,f,h,p,d,g,v=oM.length,y=!0;for(i=0;i<v;++i)if(o=oM[i]){for(u=o.site,c=o.halfedges,a=c.length;a--;)aM[c[a]]||c.splice(a,1);for(a=0,s=c.length;a<s;)p=bs(o,aM[c[a]]),d=p[0],g=p[1],l=xs(o,aM[c[++a%s]]),f=l[0],h=l[1],(Math.abs(d-f)>lM||Math.abs(g-h)>lM)&&(c.splice(a,0,aM.push(ps(u,p,Math.abs(d-t)<lM&&r-g>lM?[t,Math.abs(f-t)<lM?h:r]:Math.abs(g-r)<lM&&e-d>lM?[Math.abs(h-r)<lM?f:e,r]:Math.abs(d-e)<lM&&g-n>lM?[e,Math.abs(f-e)<lM?h:n]:Math.abs(g-n)<lM&&d-t>lM?[Math.abs(h-n)<lM?f:t,n]:null))-1),++s);s&&(y=!1)}if(y){var _,m,x,b=1/0;for(i=0,y=null;i<v;++i)(o=oM[i])&&(u=o.site,_=u[0]-t,m=u[1]-n,x=_*_+m*m,x<b&&(b=x,y=o));if(y){var w=[t,n],M=[t,r],k=[e,r],T=[e,n];y.halfedges.push(aM.push(ps(u=y.site,w,M))-1,aM.push(ps(u,M,k))-1,aM.push(ps(u,k,T))-1,aM.push(ps(u,T,w))-1)}}for(i=0;i<v;++i)(o=oM[i])&&(o.halfedges.length||delete oM[i])}function ks(){cs(this),this.x=this.y=this.arc=this.site=this.cy=null}function Ts(t){var n=t.P,e=t.N;if(n&&e){var r=n.site,i=t.site,o=e.site;if(r!==o){var u=i[0],a=i[1],c=r[0]-u,s=r[1]-a,l=o[0]-u,f=o[1]-a,h=2*(c*f-s*l);if(!(h>=-fM)){var p=c*c+s*s,d=l*l+f*f,g=(f*p-s*d)/h,v=(c*d-l*p)/h,y=cM.pop()||new ks;y.arc=t,y.site=i,y.x=g+u,y.y=(y.cy=v+a)+Math.sqrt(g*g+v*v),t.circle=y;for(var _=null,m=uM._;m;)if(y.y<m.y||y.y===m.y&&y.x<=m.x){if(!m.L){_=m.P;break}m=m.L}else{if(!m.R){_=m;break}m=m.R}uM.insert(_,y),_||(rM=y)}}}}function Ss(t){var n=t.circle;n&&(n.P||(rM=n.N),uM.remove(n),cM.push(n),cs(n),t.circle=null)}function As(){cs(this),this.edge=this.site=this.circle=null}function Ns(t){var n=sM.pop()||new As;return n.site=t,n}function Es(t){Ss(t),iM.remove(t),sM.push(t),cs(t)}function Cs(t){var n=t.circle,e=n.x,r=n.cy,i=[e,r],o=t.P,u=t.N,a=[t];Es(t);for(var c=o;c.circle&&Math.abs(e-c.circle.x)<lM&&Math.abs(r-c.circle.cy)<lM;)o=c.P,a.unshift(c),Es(c),c=o;a.unshift(c),Ss(c);for(var s=u;s.circle&&Math.abs(e-s.circle.x)<lM&&Math.abs(r-s.circle.cy)<lM;)u=s.N,a.push(s),Es(s),s=u;a.push(s),Ss(s);var l,f=a.length;for(l=1;l<f;++l)s=a[l],c=a[l-1],ds(s.edge,c.site,s.site,i);c=a[0],s=a[f-1],s.edge=hs(c.site,s.site,null,i),Ts(c),Ts(s)}function zs(t){for(var n,e,r,i,o=t[0],u=t[1],a=iM._;a;)if(r=Ds(a,u)-o,r>lM)a=a.L;else{if(i=o-Ls(a,u),!(i>lM)){r>-lM?(n=a.P,e=a):i>-lM?(n=a,e=a.N):n=e=a;break}if(!a.R){n=a;break}a=a.R}_s(t);var c=Ns(t);if(iM.insert(n,c),n||e){if(n===e)return Ss(n),e=Ns(n.site),iM.insert(c,e),c.edge=e.edge=hs(n.site,c.site),Ts(n),void Ts(e);if(!e)return void(c.edge=hs(n.site,c.site));Ss(n),Ss(e);var s=n.site,l=s[0],f=s[1],h=t[0]-l,p=t[1]-f,d=e.site,g=d[0]-l,v=d[1]-f,y=2*(h*v-p*g),_=h*h+p*p,m=g*g+v*v,x=[(v*_-p*m)/y+l,(h*m-g*_)/y+f];ds(e.edge,s,d,x),c.edge=hs(s,t,null,x),e.edge=hs(t,d,null,x),Ts(n),Ts(e)}}function Ds(t,n){var e=t.site,r=e[0],i=e[1],o=i-n;if(!o)return r;var u=t.P;if(!u)return-(1/0);e=u.site;var a=e[0],c=e[1],s=c-n;if(!s)return a;var l=a-r,f=1/o-1/s,h=l/s;return f?(-h+Math.sqrt(h*h-2*f*(l*l/(-2*s)-c+s/2+i-o/2)))/f+r:(r+a)/2}function Ls(t,n){var e=t.N;if(e)return Ds(e,n);var r=t.site;return r[1]===n?r[0]:1/0}function Ps(t,n,e){return(t[0]-e[0])*(n[1]-t[1])-(t[0]-n[0])*(e[1]-t[1])}function qs(t,n){return n[1]-t[1]||n[0]-t[0]}function Us(t,n){var e,r,i,o=t.sort(qs).pop();for(aM=[],oM=new Array(t.length),iM=new as,uM=new as;;)if(i=rM,o&&(!i||o[1]<i.y||o[1]===i.y&&o[0]<i.x))o[0]===e&&o[1]===r||(zs(o),e=o[0],r=o[1]),o=t.pop();else{if(!i)break;Cs(i.arc)}if(ws(),n){var u=+n[0][0],a=+n[0][1],c=+n[1][0],s=+n[1][1];ys(u,a,c,s),Ms(u,a,c,s)}this.edges=aM,this.cells=oM,iM=uM=aM=oM=null}function Rs(t,n,e){this.target=t,this.type=n,this.transform=e}function Os(t,n,e){this.k=t,this.x=n,this.y=e}function Fs(t){return t.__zoom||dM}function Ys(){t.event.stopImmediatePropagation()}function Is(){return!t.event.button}function js(){var t,n,e=this;return e instanceof SVGElement?(e=e.ownerSVGElement||e,t=e.width.baseVal.value,n=e.height.baseVal.value):(t=e.clientWidth,n=e.clientHeight),[[0,0],[t,n]]}function Hs(){return this.__zoom||dM}var Bs="4.9.1",Xs=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},Vs=function(t){return 1===t.length&&(t=n(t)),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)<0?r=o+1:i=o}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)>0?i=o:r=o+1}return r}}},Zs=Vs(Xs),$s=Zs.right,Ws=Zs.left,Gs=function(t,n){null==n&&(n=e);for(var r=0,i=t.length-1,o=t[0],u=new Array(i<0?0:i);r<i;)u[r]=n(o,o=t[++r]);return u},Js=function(t,n,r){var i,o,u,a,c=t.length,s=n.length,l=new Array(c*s);for(null==r&&(r=e),i=u=0;i<c;++i)for(a=t[i],o=0;o<s;++o,++u)l[u]=r(a,n[o]);return l},Qs=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},Ks=function(t){return null===t?NaN:+t},tl=function(t,n){var e,r,i=t.length,o=0,u=-1,a=0,c=0;if(null==n)for(;++u<i;)isNaN(e=Ks(t[u]))||(r=e-a,a+=r/++o,c+=r*(e-a));else for(;++u<i;)isNaN(e=Ks(n(t[u],u,t)))||(r=e-a,a+=r/++o,c+=r*(e-a));if(o>1)return c/(o-1)},nl=function(t,n){var e=tl(t,n);return e?Math.sqrt(e):e},el=function(t,n){var e,r,i,o=t.length,u=-1;if(null==n){for(;++u<o;)if(null!=(e=t[u])&&e>=e)for(r=i=e;++u<o;)null!=(e=t[u])&&(r>e&&(r=e),i<e&&(i=e))}else for(;++u<o;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=i=e;++u<o;)null!=(e=n(t[u],u,t))&&(r>e&&(r=e),i<e&&(i=e));return[r,i]},rl=Array.prototype,il=rl.slice,ol=rl.map,ul=function(t){
return function(){return t}},al=function(t){return t},cl=function(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;for(var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),o=new Array(i);++r<i;)o[r]=t+r*e;return o},sl=Math.sqrt(50),ll=Math.sqrt(10),fl=Math.sqrt(2),hl=function(t,n,e){var i,o,u,a=n<t,c=-1;if(a&&(i=t,t=n,n=i),0===(u=r(t,n,e))||!isFinite(u))return[];if(u>0)for(t=Math.ceil(t/u),n=Math.floor(n/u),o=new Array(i=Math.ceil(n-t+1));++c<i;)o[c]=(t+c)*u;else for(t=Math.floor(t*u),n=Math.ceil(n*u),o=new Array(i=Math.ceil(t-n+1));++c<i;)o[c]=(t-c)/u;return a&&o.reverse(),o},pl=function(t){return Math.ceil(Math.log(t.length)/Math.LN2)+1},dl=function(){function t(t){var o,u,a=t.length,c=new Array(a);for(o=0;o<a;++o)c[o]=n(t[o],o,t);var s=e(c),l=s[0],f=s[1],h=r(c,l,f);Array.isArray(h)||(h=i(l,f,h),h=cl(Math.ceil(l/h)*h,Math.floor(f/h)*h,h));for(var p=h.length;h[0]<=l;)h.shift(),--p;for(;h[p-1]>f;)h.pop(),--p;var d,g=new Array(p+1);for(o=0;o<=p;++o)d=g[o]=[],d.x0=o>0?h[o-1]:l,d.x1=o<p?h[o]:f;for(o=0;o<a;++o)u=c[o],l<=u&&u<=f&&g[$s(h,u,0,p)].push(t[o]);return g}var n=al,e=el,r=pl;return t.value=function(e){return arguments.length?(n="function"==typeof e?e:ul(e),t):n},t.domain=function(n){return arguments.length?(e="function"==typeof n?n:ul([n[0],n[1]]),t):e},t.thresholds=function(n){return arguments.length?(r="function"==typeof n?n:ul(Array.isArray(n)?il.call(n):n),t):r},t},gl=function(t,n,e){if(null==e&&(e=Ks),r=t.length){if((n=+n)<=0||r<2)return+e(t[0],0,t);if(n>=1)return+e(t[r-1],r-1,t);var r,i=(r-1)*n,o=Math.floor(i),u=+e(t[o],o,t),a=+e(t[o+1],o+1,t);return u+(a-u)*(i-o)}},vl=function(t,n,e){return t=ol.call(t,Ks).sort(Xs),Math.ceil((e-n)/(2*(gl(t,.75)-gl(t,.25))*Math.pow(t.length,-1/3)))},yl=function(t,n,e){return Math.ceil((e-n)/(3.5*nl(t)*Math.pow(t.length,-1/3)))},_l=function(t,n){var e,r,i=t.length,o=-1;if(null==n){for(;++o<i;)if(null!=(e=t[o])&&e>=e)for(r=e;++o<i;)null!=(e=t[o])&&e>r&&(r=e)}else for(;++o<i;)if(null!=(e=n(t[o],o,t))&&e>=e)for(r=e;++o<i;)null!=(e=n(t[o],o,t))&&e>r&&(r=e);return r},ml=function(t,n){var e,r=t.length,i=r,o=-1,u=0;if(null==n)for(;++o<r;)isNaN(e=Ks(t[o]))?--i:u+=e;else for(;++o<r;)isNaN(e=Ks(n(t[o],o,t)))?--i:u+=e;if(i)return u/i},xl=function(t,n){var e,r=t.length,i=-1,o=[];if(null==n)for(;++i<r;)isNaN(e=Ks(t[i]))||o.push(e);else for(;++i<r;)isNaN(e=Ks(n(t[i],i,t)))||o.push(e);return gl(o.sort(Xs),.5)},bl=function(t){for(var n,e,r,i=t.length,o=-1,u=0;++o<i;)u+=t[o].length;for(e=new Array(u);--i>=0;)for(r=t[i],n=r.length;--n>=0;)e[--u]=r[n];return e},wl=function(t,n){var e,r,i=t.length,o=-1;if(null==n){for(;++o<i;)if(null!=(e=t[o])&&e>=e)for(r=e;++o<i;)null!=(e=t[o])&&r>e&&(r=e)}else for(;++o<i;)if(null!=(e=n(t[o],o,t))&&e>=e)for(r=e;++o<i;)null!=(e=n(t[o],o,t))&&r>e&&(r=e);return r},Ml=function(t,n){for(var e=n.length,r=new Array(e);e--;)r[e]=t[n[e]];return r},kl=function(t,n){if(e=t.length){var e,r,i=0,o=0,u=t[o];for(null==n&&(n=Xs);++i<e;)(n(r=t[i],u)<0||0!==n(u,u))&&(u=r,o=i);return 0===n(u,u)?o:void 0}},Tl=function(t,n,e){for(var r,i,o=(null==e?t.length:e)-(n=null==n?0:+n);o;)i=Math.random()*o--|0,r=t[o+n],t[o+n]=t[i+n],t[i+n]=r;return t},Sl=function(t,n){var e,r=t.length,i=-1,o=0;if(null==n)for(;++i<r;)(e=+t[i])&&(o+=e);else for(;++i<r;)(e=+n(t[i],i,t))&&(o+=e);return o},Al=function(t){if(!(i=t.length))return[];for(var n=-1,e=wl(t,o),r=new Array(e);++n<e;)for(var i,u=-1,a=r[n]=new Array(i);++u<i;)a[u]=t[u][n];return r},Nl=function(){return Al(arguments)},El=Array.prototype.slice,Cl=function(t){return t},zl=1,Dl=2,Ll=3,Pl=4,ql=1e-6,Ul={value:function(){}};v.prototype=g.prototype={constructor:v,on:function(t,n){var e,r=this._,i=y(t+"",r),o=-1,u=i.length;{if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++o<u;)if(e=(t=i[o]).type)r[e]=m(r[e],t.name,n);else if(null==n)for(e in r)r[e]=m(r[e],t.name,null);return this}for(;++o<u;)if((e=(t=i[o]).type)&&(e=_(r[e],t.name)))return e}},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new v(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),o=0;o<e;++o)i[o]=arguments[o+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(r=this._[t],o=0,e=r.length;o<e;++o)r[o].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(n,e)}};var Rl="http://www.w3.org/1999/xhtml",Ol={svg:"http://www.w3.org/2000/svg",xhtml:Rl,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},Fl=function(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),Ol.hasOwnProperty(n)?{space:Ol[n],local:t}:t},Yl=function(t){var n=Fl(t);return(n.local?b:x)(n)},Il=0;M.prototype=w.prototype={constructor:M,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var jl=function(t){return function(){return this.matches(t)}};if("undefined"!=typeof document){var Hl=document.documentElement;if(!Hl.matches){var Bl=Hl.webkitMatchesSelector||Hl.msMatchesSelector||Hl.mozMatchesSelector||Hl.oMatchesSelector;jl=function(t){return function(){return Bl.call(this,t)}}}}var Xl=jl,Vl={};if(t.event=null,"undefined"!=typeof document){var Zl=document.documentElement;"onmouseenter"in Zl||(Vl={mouseenter:"mouseover",mouseleave:"mouseout"})}var $l=function(t,n,e){var r,i,o=S(t+""),u=o.length;{if(!(arguments.length<2)){for(a=n?N:A,null==e&&(e=!1),r=0;r<u;++r)this.each(a(o[r],n,e));return this}var a=this.node().__on;if(a)for(var c,s=0,l=a.length;s<l;++s)for(r=0,c=a[s];r<u;++r)if((i=o[r]).type===c.type&&i.name===c.name)return c.value}},Wl=function(){for(var n,e=t.event;n=e.sourceEvent;)e=n;return e},Gl=function(t,n){var e=t.ownerSVGElement||t;if(e.createSVGPoint){var r=e.createSVGPoint();return r.x=n.clientX,r.y=n.clientY,r=r.matrixTransform(t.getScreenCTM().inverse()),[r.x,r.y]}var i=t.getBoundingClientRect();return[n.clientX-i.left-t.clientLeft,n.clientY-i.top-t.clientTop]},Jl=function(t){var n=Wl();return n.changedTouches&&(n=n.changedTouches[0]),Gl(t,n)},Ql=function(t){return null==t?C:function(){return this.querySelector(t)}},Kl=function(t){"function"!=typeof t&&(t=Ql(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u,a=n[i],c=a.length,s=r[i]=new Array(c),l=0;l<c;++l)(o=a[l])&&(u=t.call(o,o.__data__,l,a))&&("__data__"in o&&(u.__data__=o.__data__),s[l]=u);return new vt(r,this._parents)},tf=function(t){return null==t?z:function(){return this.querySelectorAll(t)}},nf=function(t){"function"!=typeof t&&(t=tf(t));for(var n=this._groups,e=n.length,r=[],i=[],o=0;o<e;++o)for(var u,a=n[o],c=a.length,s=0;s<c;++s)(u=a[s])&&(r.push(t.call(u,u.__data__,s,a)),i.push(u));return new vt(r,i)},ef=function(t){"function"!=typeof t&&(t=Xl(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u=n[i],a=u.length,c=r[i]=[],s=0;s<a;++s)(o=u[s])&&t.call(o,o.__data__,s,u)&&c.push(o);return new vt(r,this._parents)},rf=function(t){return new Array(t.length)},of=function(){return new vt(this._enter||this._groups.map(rf),this._parents)};D.prototype={constructor:D,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var uf=function(t){return function(){return t}},af="$",cf=function(t,n){if(!t)return p=new Array(this.size()),s=-1,this.each(function(t){p[++s]=t}),p;var e=n?P:L,r=this._parents,i=this._groups;"function"!=typeof t&&(t=uf(t));for(var o=i.length,u=new Array(o),a=new Array(o),c=new Array(o),s=0;s<o;++s){var l=r[s],f=i[s],h=f.length,p=t.call(l,l&&l.__data__,s,r),d=p.length,g=a[s]=new Array(d),v=u[s]=new Array(d),y=c[s]=new Array(h);e(l,f,g,v,y,p,n);for(var _,m,x=0,b=0;x<d;++x)if(_=g[x]){for(x>=b&&(b=x+1);!(m=v[b])&&++b<d;);_._next=m||null}}return u=new vt(u,r),u._enter=a,u._exit=c,u},sf=function(){return new vt(this._exit||this._groups.map(rf),this._parents)},lf=function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var c,s=n[a],l=e[a],f=s.length,h=u[a]=new Array(f),p=0;p<f;++p)(c=s[p]||l[p])&&(h[p]=c);for(;a<r;++a)u[a]=n[a];return new vt(u,this._parents)},ff=function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],o=i.length-1,u=i[o];--o>=0;)(r=i[o])&&(u&&u!==r.nextSibling&&u.parentNode.insertBefore(r,u),u=r);return this},hf=function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=q);for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o){for(var u,a=e[o],c=a.length,s=i[o]=new Array(c),l=0;l<c;++l)(u=a[l])&&(s[l]=u);s.sort(n)}return new vt(i,this._parents).order()},pf=function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},df=function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t},gf=function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,o=r.length;i<o;++i){var u=r[i];if(u)return u}return null},vf=function(){var t=0;return this.each(function(){++t}),t},yf=function(){return!this.node()},_f=function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,o=n[e],u=0,a=o.length;u<a;++u)(i=o[u])&&t.call(i,i.__data__,u,o);return this},mf=function(t,n){var e=Fl(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?R:U:"function"==typeof n?e.local?I:Y:e.local?F:O)(e,n))},xf=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView},bf=function(t,n,e){return arguments.length>1?this.each((null==n?j:"function"==typeof n?B:H)(t,n,null==e?"":e)):X(this.node(),t)},wf=function(t,n){return arguments.length>1?this.each((null==n?V:"function"==typeof n?$:Z)(t,n)):this.node()[t]};J.prototype={add:function(t){var n=this._names.indexOf(t);n<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};var Mf=function(t,n){var e=W(t+"");if(arguments.length<2){for(var r=G(this.node()),i=-1,o=e.length;++i<o;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?et:n?tt:nt)(e,n))},kf=function(t){return arguments.length?this.each(null==t?rt:("function"==typeof t?ot:it)(t)):this.node().textContent},Tf=function(t){return arguments.length?this.each(null==t?ut:("function"==typeof t?ct:at)(t)):this.node().innerHTML},Sf=function(){return this.each(st)},Af=function(){return this.each(lt)},Nf=function(t){var n="function"==typeof t?t:Yl(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},Ef=function(t,n){var e="function"==typeof t?t:Yl(t),r=null==n?ft:"function"==typeof n?n:Ql(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},Cf=function(){return this.each(ht)},zf=function(t){return arguments.length?this.property("__data__",t):this.node().__data__},Df=function(t,n){return this.each(("function"==typeof n?gt:dt)(t,n))},Lf=[null];vt.prototype=yt.prototype={constructor:vt,select:Kl,selectAll:nf,filter:ef,data:cf,enter:of,exit:sf,merge:lf,order:ff,sort:hf,call:pf,nodes:df,node:gf,size:vf,empty:yf,each:_f,attr:mf,style:bf,property:wf,classed:Mf,text:kf,html:Tf,raise:Sf,lower:Af,append:Nf,insert:Ef,remove:Cf,datum:zf,on:$l,dispatch:Df};var Pf=function(t){return"string"==typeof t?new vt([[document.querySelector(t)]],[document.documentElement]):new vt([[t]],Lf)},qf=function(t){return"string"==typeof t?new vt([document.querySelectorAll(t)],[document.documentElement]):new vt([null==t?[]:t],Lf)},Uf=function(t,n,e){arguments.length<3&&(e=n,n=Wl().changedTouches);for(var r,i=0,o=n?n.length:0;i<o;++i)if((r=n[i]).identifier===e)return Gl(t,r);return null},Rf=function(t,n){null==n&&(n=Wl().touches);for(var e=0,r=n?n.length:0,i=new Array(r);e<r;++e)i[e]=Gl(t,n[e]);return i},Of=function(){t.event.preventDefault(),t.event.stopImmediatePropagation()},Ff=function(t){var n=t.document.documentElement,e=Pf(t).on("dragstart.drag",Of,!0);"onselectstart"in n?e.on("selectstart.drag",Of,!0):(n.__noselect=n.style.MozUserSelect,n.style.MozUserSelect="none")},Yf=function(t){return function(){return t}};xt.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t};var If=function(){function n(t){t.on("mousedown.drag",e).on("touchstart.drag",o).on("touchmove.drag",u).on("touchend.drag touchcancel.drag",a).style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function e(){if(!h&&p.apply(this,arguments)){var n=c("mouse",d.apply(this,arguments),Jl,this,arguments);n&&(Pf(t.event.view).on("mousemove.drag",r,!0).on("mouseup.drag",i,!0),Ff(t.event.view),_t(),f=!1,s=t.event.clientX,l=t.event.clientY,n("start"))}}function r(){if(Of(),!f){var n=t.event.clientX-s,e=t.event.clientY-l;f=n*n+e*e>x}y.mouse("drag")}function i(){Pf(t.event.view).on("mousemove.drag mouseup.drag",null),mt(t.event.view,f),Of(),y.mouse("end")}function o(){if(p.apply(this,arguments)){var n,e,r=t.event.changedTouches,i=d.apply(this,arguments),o=r.length;for(n=0;n<o;++n)(e=c(r[n].identifier,i,Uf,this,arguments))&&(_t(),e("start"))}}function u(){var n,e,r=t.event.changedTouches,i=r.length;for(n=0;n<i;++n)(e=y[r[n].identifier])&&(Of(),e("drag"))}function a(){var n,e,r=t.event.changedTouches,i=r.length;for(h&&clearTimeout(h),h=setTimeout(function(){h=null},500),n=0;n<i;++n)(e=y[r[n].identifier])&&(_t(),e("end"))}function c(e,r,i,o,u){var a,c,s,l=i(r,e),f=_.copy();if(E(new xt(n,"beforestart",a,e,m,l[0],l[1],0,0,f),function(){return null!=(t.event.subject=a=v.apply(o,u))&&(c=a.x-l[0]||0,s=a.y-l[1]||0,!0)}))return function h(t){var p,d=l;switch(t){case"start":y[e]=h,p=m++;break;case"end":delete y[e],--m;case"drag":l=i(r,e),p=m}E(new xt(n,t,a,e,p,l[0]+c,l[1]+s,l[0]-d[0],l[1]-d[1],f),f.apply,f,[t,o,u])}}var s,l,f,h,p=bt,d=wt,v=Mt,y={},_=g("start","drag","end"),m=0,x=0;return n.filter=function(t){return arguments.length?(p="function"==typeof t?t:Yf(!!t),n):p},n.container=function(t){return arguments.length?(d="function"==typeof t?t:Yf(t),n):d},n.subject=function(t){return arguments.length?(v="function"==typeof t?t:Yf(t),n):v},n.on=function(){var t=_.on.apply(_,arguments);return t===_?n:t},n.clickDistance=function(t){return arguments.length?(x=(t=+t)*t,n):Math.sqrt(x)},n},jf=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t},Hf=.7,Bf=1/Hf,Xf="\\s*([+-]?\\d+)\\s*",Vf="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Zf="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",$f=/^#([0-9a-f]{3})$/,Wf=/^#([0-9a-f]{6})$/,Gf=new RegExp("^rgb\\("+[Xf,Xf,Xf]+"\\)$"),Jf=new RegExp("^rgb\\("+[Zf,Zf,Zf]+"\\)$"),Qf=new RegExp("^rgba\\("+[Xf,Xf,Xf,Vf]+"\\)$"),Kf=new RegExp("^rgba\\("+[Zf,Zf,Zf,Vf]+"\\)$"),th=new RegExp("^hsl\\("+[Vf,Zf,Zf]+"\\)$"),nh=new RegExp("^hsla\\("+[Vf,Zf,Zf,Vf]+"\\)$"),eh={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};jf(Tt,St,{displayable:function(){return this.rgb().displayable()},toString:function(){return this.rgb()+""}}),jf(zt,Ct,kt(Tt,{brighter:function(t){return t=null==t?Bf:Math.pow(Bf,t),new zt(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?Hf:Math.pow(Hf,t),new zt(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},toString:function(){var t=this.opacity;return t=isNaN(t)?1:Math.max(0,Math.min(1,t)),(1===t?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),jf(qt,Pt,kt(Tt,{brighter:function(t){return t=null==t?Bf:Math.pow(Bf,t),new qt(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?Hf:Math.pow(Hf,t),new qt(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new zt(Ut(t>=240?t-240:t+120,i,r),Ut(t,i,r),Ut(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var rh=Math.PI/180,ih=180/Math.PI,oh=18,uh=.95047,ah=1,ch=1.08883,sh=4/29,lh=6/29,fh=3*lh*lh,hh=lh*lh*lh;jf(Ft,Ot,kt(Tt,{brighter:function(t){return new Ft(this.l+oh*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new Ft(this.l-oh*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return t=ah*It(t),n=uh*It(n),e=ch*It(e),new zt(jt(3.2404542*n-1.5371385*t-.4985314*e),jt(-.969266*n+1.8760108*t+.041556*e),jt(.0556434*n-.2040259*t+1.0572252*e),this.opacity)}})),jf(Vt,Xt,kt(Tt,{brighter:function(t){return new Vt(this.h,this.c,this.l+oh*(null==t?1:t),this.opacity)},darker:function(t){return new Vt(this.h,this.c,this.l-oh*(null==t?1:t),this.opacity)},rgb:function(){return Rt(this).rgb()}}));var ph=-.14861,dh=1.78277,gh=-.29227,vh=-.90649,yh=1.97294,_h=yh*vh,mh=yh*dh,xh=dh*gh-vh*ph;jf(Wt,$t,kt(Tt,{brighter:function(t){return t=null==t?Bf:Math.pow(Bf,t),new Wt(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?Hf:Math.pow(Hf,t),new Wt(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*rh,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new zt(255*(n+e*(ph*r+dh*i)),255*(n+e*(gh*r+vh*i)),255*(n+e*(yh*r)),this.opacity)}}));var bh,wh,Mh,kh,Th,Sh,Ah=function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],o=t[r+1],u=r>0?t[r-1]:2*i-o,a=r<n-1?t[r+2]:2*o-i;return Gt((e-r/n)*n,u,i,o,a)}},Nh=function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],o=t[r%n],u=t[(r+1)%n],a=t[(r+2)%n];return Gt((e-r/n)*n,i,o,u,a)}},Eh=function(t){return function(){return t}},Ch=function yM(t){function n(t,n){var r=e((t=Ct(t)).r,(n=Ct(n)).r),i=e(t.g,n.g),o=e(t.b,n.b),u=nn(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=o(n),t.opacity=u(n),t+""}}var e=tn(t);return n.gamma=yM,n}(1),zh=en(Ah),Dh=en(Nh),Lh=function(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,o=new Array(r),u=new Array(r);for(e=0;e<i;++e)o[e]=Yh(t[e],n[e]);for(;e<r;++e)u[e]=n[e];return function(t){for(e=0;e<i;++e)u[e]=o[e](t);return u}},Ph=function(t,n){var e=new Date;return t=+t,n-=t,function(r){return e.setTime(t+n*r),e}},qh=function(t,n){return t=+t,n-=t,function(e){return t+n*e}},Uh=function(t,n){var e,r={},i={};null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={});for(e in n)e in t?r[e]=Yh(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}},Rh=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Oh=new RegExp(Rh.source,"g"),Fh=function(t,n){var e,r,i,o=Rh.lastIndex=Oh.lastIndex=0,u=-1,a=[],c=[];for(t+="",n+="";(e=Rh.exec(t))&&(r=Oh.exec(n));)(i=r.index)>o&&(i=n.slice(o,i),a[u]?a[u]+=i:a[++u]=i),(e=e[0])===(r=r[0])?a[u]?a[u]+=r:a[++u]=r:(a[++u]=null,c.push({i:u,x:qh(e,r)})),o=Oh.lastIndex;return o<n.length&&(i=n.slice(o),a[u]?a[u]+=i:a[++u]=i),a.length<2?c[0]?on(c[0].x):rn(n):(n=c.length,function(t){for(var e,r=0;r<n;++r)a[(e=c[r]).i]=e.x(t);return a.join("")})},Yh=function(t,n){var e,r=typeof n;return null==n||"boolean"===r?Eh(n):("number"===r?qh:"string"===r?(e=St(n))?(n=e,Ch):Fh:n instanceof St?Ch:n instanceof Date?Ph:Array.isArray(n)?Lh:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?Uh:qh)(t,n)},Ih=function(t,n){return t=+t,n-=t,function(e){return Math.round(t+n*e)}},jh=180/Math.PI,Hh={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},Bh=function(t,n,e,r,i,o){var u,a,c;return(u=Math.sqrt(t*t+n*n))&&(t/=u,n/=u),(c=t*e+n*r)&&(e-=t*c,r-=n*c),(a=Math.sqrt(e*e+r*r))&&(e/=a,r/=a,c/=a),t*r<n*e&&(t=-t,n=-n,c=-c,u=-u),{translateX:i,translateY:o,rotate:Math.atan2(n,t)*jh,skewX:Math.atan(c)*jh,scaleX:u,scaleY:a}},Xh=cn(un,"px, ","px)","deg)"),Vh=cn(an,", ",")",")"),Zh=Math.SQRT2,$h=2,Wh=4,Gh=1e-12,Jh=function(t,n){var e,r,i=t[0],o=t[1],u=t[2],a=n[0],c=n[1],s=n[2],l=a-i,f=c-o,h=l*l+f*f;if(h<Gh)r=Math.log(s/u)/Zh,e=function(t){return[i+t*l,o+t*f,u*Math.exp(Zh*t*r)]};else{var p=Math.sqrt(h),d=(s*s-u*u+Wh*h)/(2*u*$h*p),g=(s*s-u*u-Wh*h)/(2*s*$h*p),v=Math.log(Math.sqrt(d*d+1)-d),y=Math.log(Math.sqrt(g*g+1)-g);r=(y-v)/Zh,e=function(t){var n=t*r,e=sn(v),a=u/($h*p)*(e*fn(Zh*n+v)-ln(v));return[i+a*l,o+a*f,u*e/sn(Zh*n+v)]}}return e.duration=1e3*r,e},Qh=hn(Kt),Kh=hn(nn),tp=dn(Kt),np=dn(nn),ep=gn(Kt),rp=gn(nn),ip=function(t,n){for(var e=new Array(n),r=0;r<n;++r)e[r]=t(r/(n-1));return e},op=0,up=0,ap=0,cp=1e3,sp=0,lp=0,fp=0,hp="object"==typeof performance&&performance.now?performance:Date,pp="function"==typeof requestAnimationFrame?requestAnimationFrame:function(t){setTimeout(t,17)};_n.prototype=mn.prototype={constructor:_n,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?vn():+e)+(null==n?0:+n),this._next||Sh===this||(Sh?Sh._next=this:Th=this,Sh=this),this._call=t,this._time=e,kn()},stop:function(){this._call&&(this._call=null,this._time=1/0,kn())}};var dp=function(t,n,e){var r=new _n;return n=null==n?0:+n,r.restart(function(e){r.stop(),t(e+n)},n,e),r},gp=function(t,n,e){var r=new _n,i=n;return null==n?(r.restart(t,n,e),r):(n=+n,e=null==e?vn():+e,r.restart(function o(u){u+=i,r.restart(o,i+=n,e),t(u)},n,e),r)},vp=g("start","end","interrupt"),yp=[],_p=0,mp=1,xp=2,bp=3,wp=4,Mp=5,kp=6,Tp=function(t,n,e,r,i,o){var u=t.__transition;if(u){if(e in u)return}else t.__transition={};Nn(t,e,{name:n,index:r,group:i,on:vp,tween:yp,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:_p})},Sp=function(t,n){var e,r,i,o=t.__transition,u=!0;if(o){n=null==n?null:n+"";for(i in o)(e=o[i]).name===n?(r=e.state>xp&&e.state<Mp,e.state=kp,e.timer.stop(),r&&e.on.call("interrupt",t,t.__data__,e.index,e.group),delete o[i]):u=!1;u&&delete t.__transition}},Ap=function(t){return this.each(function(){Sp(this,t)})},Np=function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=An(this.node(),e).tween,o=0,u=i.length;o<u;++o)if((r=i[o]).name===t)return r.value;return null}return this.each((null==n?En:Cn)(e,t,n))},Ep=function(t,n){var e;return("number"==typeof n?qh:n instanceof St?Ch:(e=St(n))?(n=e,Ch):Fh)(t,n)},Cp=function(t,n){var e=Fl(t),r="transform"===e?Vh:Ep;return this.attrTween(t,"function"==typeof n?(e.local?Rn:Un)(e,r,zn(this,"attr."+t,n)):null==n?(e.local?Ln:Dn)(e):(e.local?qn:Pn)(e,r,n+""))},zp=function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=Fl(t);return this.tween(e,(r.local?On:Fn)(r,n))},Dp=function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?Yn:In)(n,t)):An(this.node(),n).delay},Lp=function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?jn:Hn)(n,t)):An(this.node(),n).duration},Pp=function(t){var n=this._id;return arguments.length?this.each(Bn(n,t)):An(this.node(),n).ease},qp=function(t){"function"!=typeof t&&(t=Xl(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u=n[i],a=u.length,c=r[i]=[],s=0;s<a;++s)(o=u[s])&&t.call(o,o.__data__,s,u)&&c.push(o);return new ne(r,this._parents,this._name,this._id)},Up=function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var c,s=n[a],l=e[a],f=s.length,h=u[a]=new Array(f),p=0;p<f;++p)(c=s[p]||l[p])&&(h[p]=c);for(;a<r;++a)u[a]=n[a];return new ne(u,this._parents,this._name,this._id)},Rp=function(t,n){var e=this._id;return arguments.length<2?An(this.node(),e).on.on(t):this.each(Vn(e,t,n))},Op=function(){return this.on("end.remove",Zn(this._id))},Fp=function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=Ql(t));for(var r=this._groups,i=r.length,o=new Array(i),u=0;u<i;++u)for(var a,c,s=r[u],l=s.length,f=o[u]=new Array(l),h=0;h<l;++h)(a=s[h])&&(c=t.call(a,a.__data__,h,s))&&("__data__"in a&&(c.__data__=a.__data__),f[h]=c,Tp(f[h],n,e,h,f,An(a,e)));return new ne(o,this._parents,n,e)},Yp=function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=tf(t));for(var r=this._groups,i=r.length,o=[],u=[],a=0;a<i;++a)for(var c,s=r[a],l=s.length,f=0;f<l;++f)if(c=s[f]){for(var h,p=t.call(c,c.__data__,f,s),d=An(c,e),g=0,v=p.length;g<v;++g)(h=p[g])&&Tp(h,n,e,g,p,d);o.push(p),u.push(c)}return new ne(o,u,n,e)},Ip=yt.prototype.constructor,jp=function(){return new Ip(this._groups,this._parents)},Hp=function(t,n,e){var r="transform"==(t+="")?Xh:Ep;return null==n?this.styleTween(t,$n(t,r)).on("end.style."+t,Wn(t)):this.styleTween(t,"function"==typeof n?Jn(t,r,zn(this,"style."+t,n)):Gn(t,r,n+""),e)},Bp=function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,Qn(t,n,null==e?"":e))},Xp=function(t){return this.tween("text","function"==typeof t?te(zn(this,"text",t)):Kn(null==t?"":t+""))},Vp=function(){for(var t=this._name,n=this._id,e=re(),r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],c=a.length,s=0;s<c;++s)if(u=a[s]){var l=An(u,n);Tp(u,t,e,s,a,{time:l.time+l.delay+l.duration,delay:0,duration:l.duration,ease:l.ease})}return new ne(r,this._parents,t,e)},Zp=0,$p=yt.prototype;ne.prototype=ee.prototype={constructor:ne,select:Fp,selectAll:Yp,filter:qp,merge:Up,selection:jp,transition:Vp,call:$p.call,nodes:$p.nodes,node:$p.node,size:$p.size,empty:$p.empty,each:$p.each,on:Rp,attr:Cp,attrTween:zp,style:Hp,styleTween:Bp,text:Xp,remove:Op,tween:Np,delay:Dp,duration:Lp,ease:Pp};var Wp=3,Gp=function _M(t){function n(n){return Math.pow(n,t)}return t=+t,n.exponent=_M,n}(Wp),Jp=function mM(t){function n(n){return 1-Math.pow(1-n,t)}return t=+t,n.exponent=mM,n}(Wp),Qp=function xM(t){function n(n){return((n*=2)<=1?Math.pow(n,t):2-Math.pow(2-n,t))/2}return t=+t,n.exponent=xM,n}(Wp),Kp=Math.PI,td=Kp/2,nd=4/11,ed=6/11,rd=8/11,id=.75,od=9/11,ud=10/11,ad=.9375,cd=21/22,sd=63/64,ld=1/nd/nd,fd=1.70158,hd=function bM(t){function n(n){return n*n*((t+1)*n-t)}return t=+t,n.overshoot=bM,n}(fd),pd=function wM(t){function n(n){return--n*n*((t+1)*n+t)+1}return t=+t,n.overshoot=wM,n}(fd),dd=function MM(t){function n(n){return((n*=2)<1?n*n*((t+1)*n-t):(n-=2)*n*((t+1)*n+t)+2)/2}return t=+t,n.overshoot=MM,n}(fd),gd=2*Math.PI,vd=1,yd=.3,_d=function kM(t,n){function e(e){return t*Math.pow(2,10*--e)*Math.sin((r-e)/n)}var r=Math.asin(1/(t=Math.max(1,t)))*(n/=gd);return e.amplitude=function(t){return kM(t,n*gd)},e.period=function(n){return kM(t,n)},e}(vd,yd),md=function TM(t,n){function e(e){return 1-t*Math.pow(2,-10*(e=+e))*Math.sin((e+r)/n)}var r=Math.asin(1/(t=Math.max(1,t)))*(n/=gd);return e.amplitude=function(t){return TM(t,n*gd)},e.period=function(n){return TM(t,n)},e}(vd,yd),xd=function SM(t,n){function e(e){return((e=2*e-1)<0?t*Math.pow(2,10*e)*Math.sin((r-e)/n):2-t*Math.pow(2,-10*e)*Math.sin((r+e)/n))/2}var r=Math.asin(1/(t=Math.max(1,t)))*(n/=gd);return e.amplitude=function(t){return SM(t,n*gd)},e.period=function(n){return SM(t,n)},e}(vd,yd),bd={time:null,delay:0,duration:250,ease:le},wd=function(t){var n,e;t instanceof ne?(n=t._id,t=t._name):(n=re(),(e=bd).time=vn(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],c=a.length,s=0;s<c;++s)(u=a[s])&&Tp(u,t,n,s,a,e||Me(u,n));return new ne(r,this._parents,t,n)};yt.prototype.interrupt=Ap,yt.prototype.transition=wd;var Md=[null],kd=function(t,n){var e,r,i=t.__transition;if(i){n=null==n?null:n+"";for(r in i)if((e=i[r]).state>mp&&e.name===n)return new ne([[t]],Md,n,(+r))}return null},Td=function(t){return function(){return t}},Sd=function(t,n,e){this.target=t,this.type=n,this.selection=e},Ad=function(){t.event.preventDefault(),t.event.stopImmediatePropagation()},Nd={name:"drag"},Ed={name:"space"},Cd={name:"handle"},zd={name:"center"},Dd={name:"x",handles:["e","w"].map(Te),input:function(t,n){return t&&[[t[0],n[0][1]],[t[1],n[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},Ld={name:"y",handles:["n","s"].map(Te),input:function(t,n){return t&&[[n[0][0],t[0]],[n[1][0],t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},Pd={name:"xy",handles:["n","e","s","w","nw","ne","se","sw"].map(Te),input:function(t){return t},output:function(t){return t}},qd={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},Ud={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},Rd={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},Od={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},Fd={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1},Yd=function(){return Le(Pd)},Id=Math.cos,jd=Math.sin,Hd=Math.PI,Bd=Hd/2,Xd=2*Hd,Vd=Math.max,Zd=function(){
function t(t){var o,u,a,c,s,l,f=t.length,h=[],p=cl(f),d=[],g=[],v=g.groups=new Array(f),y=new Array(f*f);for(o=0,s=-1;++s<f;){for(u=0,l=-1;++l<f;)u+=t[s][l];h.push(u),d.push(cl(f)),o+=u}for(e&&p.sort(function(t,n){return e(h[t],h[n])}),r&&d.forEach(function(n,e){n.sort(function(n,i){return r(t[e][n],t[e][i])})}),o=Vd(0,Xd-n*f)/o,c=o?n:Xd/f,u=0,s=-1;++s<f;){for(a=u,l=-1;++l<f;){var _=p[s],m=d[_][l],x=t[_][m],b=u,w=u+=x*o;y[m*f+_]={index:_,subindex:m,startAngle:b,endAngle:w,value:x}}v[_]={index:_,startAngle:a,endAngle:u,value:h[_]},u+=c}for(s=-1;++s<f;)for(l=s-1;++l<f;){var M=y[l*f+s],k=y[s*f+l];(M.value||k.value)&&g.push(M.value<k.value?{source:k,target:M}:{source:M,target:k})}return i?g.sort(i):g}var n=0,e=null,r=null,i=null;return t.padAngle=function(e){return arguments.length?(n=Vd(0,e),t):n},t.sortGroups=function(n){return arguments.length?(e=n,t):e},t.sortSubgroups=function(n){return arguments.length?(r=n,t):r},t.sortChords=function(n){return arguments.length?(null==n?i=null:(i=Pe(n))._=n,t):i&&i._},t},$d=Array.prototype.slice,Wd=function(t){return function(){return t}},Gd=Math.PI,Jd=2*Gd,Qd=1e-6,Kd=Jd-Qd;qe.prototype=Ue.prototype={constructor:qe,moveTo:function(t,n){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,n){this._+="L"+(this._x1=+t)+","+(this._y1=+n)},quadraticCurveTo:function(t,n,e,r){this._+="Q"+ +t+","+ +n+","+(this._x1=+e)+","+(this._y1=+r)},bezierCurveTo:function(t,n,e,r,i,o){this._+="C"+ +t+","+ +n+","+ +e+","+ +r+","+(this._x1=+i)+","+(this._y1=+o)},arcTo:function(t,n,e,r,i){t=+t,n=+n,e=+e,r=+r,i=+i;var o=this._x1,u=this._y1,a=e-t,c=r-n,s=o-t,l=u-n,f=s*s+l*l;if(i<0)throw new Error("negative radius: "+i);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=n);else if(f>Qd)if(Math.abs(l*a-c*s)>Qd&&i){var h=e-o,p=r-u,d=a*a+c*c,g=h*h+p*p,v=Math.sqrt(d),y=Math.sqrt(f),_=i*Math.tan((Gd-Math.acos((d+f-g)/(2*v*y)))/2),m=_/y,x=_/v;Math.abs(m-1)>Qd&&(this._+="L"+(t+m*s)+","+(n+m*l)),this._+="A"+i+","+i+",0,0,"+ +(l*h>s*p)+","+(this._x1=t+x*a)+","+(this._y1=n+x*c)}else this._+="L"+(this._x1=t)+","+(this._y1=n);else;},arc:function(t,n,e,r,i,o){t=+t,n=+n,e=+e;var u=e*Math.cos(r),a=e*Math.sin(r),c=t+u,s=n+a,l=1^o,f=o?r-i:i-r;if(e<0)throw new Error("negative radius: "+e);null===this._x1?this._+="M"+c+","+s:(Math.abs(this._x1-c)>Qd||Math.abs(this._y1-s)>Qd)&&(this._+="L"+c+","+s),e&&(f<0&&(f=f%Jd+Jd),f>Kd?this._+="A"+e+","+e+",0,1,"+l+","+(t-u)+","+(n-a)+"A"+e+","+e+",0,1,"+l+","+(this._x1=c)+","+(this._y1=s):f>Qd&&(this._+="A"+e+","+e+",0,"+ +(f>=Gd)+","+l+","+(this._x1=t+e*Math.cos(i))+","+(this._y1=n+e*Math.sin(i))))},rect:function(t,n,e,r){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)+"h"+ +e+"v"+ +r+"h"+-e+"Z"},toString:function(){return this._}};var tg=function(){function t(){var t,a=$d.call(arguments),c=n.apply(this,a),s=e.apply(this,a),l=+r.apply(this,(a[0]=c,a)),f=i.apply(this,a)-Bd,h=o.apply(this,a)-Bd,p=l*Id(f),d=l*jd(f),g=+r.apply(this,(a[0]=s,a)),v=i.apply(this,a)-Bd,y=o.apply(this,a)-Bd;if(u||(u=t=Ue()),u.moveTo(p,d),u.arc(0,0,l,f,h),f===v&&h===y||(u.quadraticCurveTo(0,0,g*Id(v),g*jd(v)),u.arc(0,0,g,v,y)),u.quadraticCurveTo(0,0,p,d),u.closePath(),t)return u=null,t+""||null}var n=Re,e=Oe,r=Fe,i=Ye,o=Ie,u=null;return t.radius=function(n){return arguments.length?(r="function"==typeof n?n:Wd(+n),t):r},t.startAngle=function(n){return arguments.length?(i="function"==typeof n?n:Wd(+n),t):i},t.endAngle=function(n){return arguments.length?(o="function"==typeof n?n:Wd(+n),t):o},t.source=function(e){return arguments.length?(n=e,t):n},t.target=function(n){return arguments.length?(e=n,t):e},t.context=function(n){return arguments.length?(u=null==n?null:n,t):u},t},ng="$";je.prototype=He.prototype={constructor:je,has:function(t){return ng+t in this},get:function(t){return this[ng+t]},set:function(t,n){return this[ng+t]=n,this},remove:function(t){var n=ng+t;return n in this&&delete this[n]},clear:function(){for(var t in this)t[0]===ng&&delete this[t]},keys:function(){var t=[];for(var n in this)n[0]===ng&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)n[0]===ng&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)n[0]===ng&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)n[0]===ng&&++t;return t},empty:function(){for(var t in this)if(t[0]===ng)return!1;return!0},each:function(t){for(var n in this)n[0]===ng&&t(this[n],n.slice(1),this)}};var eg=function(){function t(n,i,u,a){if(i>=o.length)return null!=r?r(n):null!=e?n.sort(e):n;for(var c,s,l,f=-1,h=n.length,p=o[i++],d=He(),g=u();++f<h;)(l=d.get(c=p(s=n[f])+""))?l.push(s):d.set(c,[s]);return d.each(function(n,e){a(g,e,t(n,i,u,a))}),g}function n(t,e){if(++e>o.length)return t;var i,a=u[e-1];return null!=r&&e>=o.length?i=t.entries():(i=[],t.each(function(t,r){i.push({key:r,values:n(t,e)})})),null!=a?i.sort(function(t,n){return a(t.key,n.key)}):i}var e,r,i,o=[],u=[];return i={object:function(n){return t(n,0,Be,Xe)},map:function(n){return t(n,0,Ve,Ze)},entries:function(e){return n(t(e,0,Ve,Ze),0)},key:function(t){return o.push(t),i},sortKeys:function(t){return u[o.length-1]=t,i},sortValues:function(t){return e=t,i},rollup:function(t){return r=t,i}}},rg=He.prototype;$e.prototype=We.prototype={constructor:$e,has:rg.has,add:function(t){return t+="",this[ng+t]=t,this},remove:rg.remove,clear:rg.clear,values:rg.keys,size:rg.size,empty:rg.empty,each:rg.each};var ig=function(t){var n=[];for(var e in t)n.push(e);return n},og=function(t){var n=[];for(var e in t)n.push(t[e]);return n},ug=function(t){var n=[];for(var e in t)n.push({key:e,value:t[e]});return n},ag=function(t){function n(t,n){var r,i,o=e(t,function(t,e){return r?r(t,e-1):(i=t,void(r=n?Je(t,n):Ge(t)))});return o.columns=i,o}function e(t,n){function e(){if(l>=s)return u;if(i)return i=!1,o;var n,e=l;if(34===t.charCodeAt(e)){for(var r=e;r++<s;)if(34===t.charCodeAt(r)){if(34!==t.charCodeAt(r+1))break;++r}return l=r+2,n=t.charCodeAt(r+1),13===n?(i=!0,10===t.charCodeAt(r+2)&&++l):10===n&&(i=!0),t.slice(e+1,r).replace(/""/g,'"')}for(;l<s;){var a=1;if(n=t.charCodeAt(l++),10===n)i=!0;else if(13===n)i=!0,10===t.charCodeAt(l)&&(++l,++a);else if(n!==c)continue;return t.slice(e,l-a)}return t.slice(e)}for(var r,i,o={},u={},a=[],s=t.length,l=0,f=0;(r=e())!==u;){for(var h=[];r!==o&&r!==u;)h.push(r),r=e();n&&null==(h=n(h,f++))||a.push(h)}return a}function r(n,e){return null==e&&(e=Qe(n)),[e.map(u).join(t)].concat(n.map(function(n){return e.map(function(t){return u(n[t])}).join(t)})).join("\n")}function i(t){return t.map(o).join("\n")}function o(n){return n.map(u).join(t)}function u(t){return null==t?"":a.test(t+="")?'"'+t.replace(/\"/g,'""')+'"':t}var a=new RegExp('["'+t+"\n\r]"),c=t.charCodeAt(0);return{parse:n,parseRows:e,format:r,formatRows:i}},cg=ag(","),sg=cg.parse,lg=cg.parseRows,fg=cg.format,hg=cg.formatRows,pg=ag("\t"),dg=pg.parse,gg=pg.parseRows,vg=pg.format,yg=pg.formatRows,_g=function(t,n){function e(){var e,i,o=r.length,u=0,a=0;for(e=0;e<o;++e)i=r[e],u+=i.x,a+=i.y;for(u=u/o-t,a=a/o-n,e=0;e<o;++e)i=r[e],i.x-=u,i.y-=a}var r;return null==t&&(t=0),null==n&&(n=0),e.initialize=function(t){r=t},e.x=function(n){return arguments.length?(t=+n,e):t},e.y=function(t){return arguments.length?(n=+t,e):n},e},mg=function(t){return function(){return t}},xg=function(){return 1e-6*(Math.random()-.5)},bg=function(t){var n=+this._x.call(null,t),e=+this._y.call(null,t);return Ke(this.cover(n,e),n,e,t)},wg=function(t,n){if(isNaN(t=+t)||isNaN(n=+n))return this;var e=this._x0,r=this._y0,i=this._x1,o=this._y1;if(isNaN(e))i=(e=Math.floor(t))+1,o=(r=Math.floor(n))+1;else{if(!(e>t||t>i||r>n||n>o))return this;var u,a,c=i-e,s=this._root;switch(a=(n<(r+o)/2)<<1|t<(e+i)/2){case 0:do u=new Array(4),u[a]=s,s=u;while(c*=2,i=e+c,o=r+c,t>i||n>o);break;case 1:do u=new Array(4),u[a]=s,s=u;while(c*=2,e=i-c,o=r+c,e>t||n>o);break;case 2:do u=new Array(4),u[a]=s,s=u;while(c*=2,i=e+c,r=o-c,t>i||r>n);break;case 3:do u=new Array(4),u[a]=s,s=u;while(c*=2,e=i-c,r=o-c,e>t||r>n)}this._root&&this._root.length&&(this._root=s)}return this._x0=e,this._y0=r,this._x1=i,this._y1=o,this},Mg=function(){var t=[];return this.visit(function(n){if(!n.length)do t.push(n.data);while(n=n.next)}),t},kg=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},Tg=function(t,n,e,r,i){this.node=t,this.x0=n,this.y0=e,this.x1=r,this.y1=i},Sg=function(t,n,e){var r,i,o,u,a,c,s,l=this._x0,f=this._y0,h=this._x1,p=this._y1,d=[],g=this._root;for(g&&d.push(new Tg(g,l,f,h,p)),null==e?e=1/0:(l=t-e,f=n-e,h=t+e,p=n+e,e*=e);c=d.pop();)if(!(!(g=c.node)||(i=c.x0)>h||(o=c.y0)>p||(u=c.x1)<l||(a=c.y1)<f))if(g.length){var v=(i+u)/2,y=(o+a)/2;d.push(new Tg(g[3],v,y,u,a),new Tg(g[2],i,y,v,a),new Tg(g[1],v,o,u,y),new Tg(g[0],i,o,v,y)),(s=(n>=y)<<1|t>=v)&&(c=d[d.length-1],d[d.length-1]=d[d.length-1-s],d[d.length-1-s]=c)}else{var _=t-+this._x.call(null,g.data),m=n-+this._y.call(null,g.data),x=_*_+m*m;if(x<e){var b=Math.sqrt(e=x);l=t-b,f=n-b,h=t+b,p=n+b,r=g.data}}return r},Ag=function(t){if(isNaN(o=+this._x.call(null,t))||isNaN(u=+this._y.call(null,t)))return this;var n,e,r,i,o,u,a,c,s,l,f,h,p=this._root,d=this._x0,g=this._y0,v=this._x1,y=this._y1;if(!p)return this;if(p.length)for(;;){if((s=o>=(a=(d+v)/2))?d=a:v=a,(l=u>=(c=(g+y)/2))?g=c:y=c,n=p,!(p=p[f=l<<1|s]))return this;if(!p.length)break;(n[f+1&3]||n[f+2&3]||n[f+3&3])&&(e=n,h=f)}for(;p.data!==t;)if(r=p,!(p=p.next))return this;return(i=p.next)&&delete p.next,r?(i?r.next=i:delete r.next,this):n?(i?n[f]=i:delete n[f],(p=n[0]||n[1]||n[2]||n[3])&&p===(n[3]||n[2]||n[1]||n[0])&&!p.length&&(e?e[h]=p:this._root=p),this):(this._root=i,this)},Ng=function(){return this._root},Eg=function(){var t=0;return this.visit(function(n){if(!n.length)do++t;while(n=n.next)}),t},Cg=function(t){var n,e,r,i,o,u,a=[],c=this._root;for(c&&a.push(new Tg(c,this._x0,this._y0,this._x1,this._y1));n=a.pop();)if(!t(c=n.node,r=n.x0,i=n.y0,o=n.x1,u=n.y1)&&c.length){var s=(r+o)/2,l=(i+u)/2;(e=c[3])&&a.push(new Tg(e,s,l,o,u)),(e=c[2])&&a.push(new Tg(e,r,l,s,u)),(e=c[1])&&a.push(new Tg(e,s,i,o,l)),(e=c[0])&&a.push(new Tg(e,r,i,s,l))}return this},zg=function(t){var n,e=[],r=[];for(this._root&&e.push(new Tg(this._root,this._x0,this._y0,this._x1,this._y1));n=e.pop();){var i=n.node;if(i.length){var o,u=n.x0,a=n.y0,c=n.x1,s=n.y1,l=(u+c)/2,f=(a+s)/2;(o=i[0])&&e.push(new Tg(o,u,a,l,f)),(o=i[1])&&e.push(new Tg(o,l,a,c,f)),(o=i[2])&&e.push(new Tg(o,u,f,l,s)),(o=i[3])&&e.push(new Tg(o,l,f,c,s))}r.push(n)}for(;n=r.pop();)t(n.node,n.x0,n.y0,n.x1,n.y1);return this},Dg=function(t){return arguments.length?(this._x=t,this):this._x},Lg=function(t){return arguments.length?(this._y=t,this):this._y},Pg=ir.prototype=or.prototype;Pg.copy=function(){var t,n,e=new or(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return e;if(!r.length)return e._root=ur(r),e;for(t=[{source:r,target:e._root=new Array(4)}];r=t.pop();)for(var i=0;i<4;++i)(n=r.source[i])&&(n.length?t.push({source:n,target:r.target[i]=new Array(4)}):r.target[i]=ur(n));return e},Pg.add=bg,Pg.addAll=tr,Pg.cover=wg,Pg.data=Mg,Pg.extent=kg,Pg.find=Sg,Pg.remove=Ag,Pg.removeAll=nr,Pg.root=Ng,Pg.size=Eg,Pg.visit=Cg,Pg.visitAfter=zg,Pg.x=Dg,Pg.y=Lg;var qg,Ug=function(t){function n(){function t(t,n,e,r,i){var o=t.data,a=t.r,p=f+a;{if(!o)return n>s+p||r<s-p||e>l+p||i<l-p;if(o.index>c.index){var d=s-o.x-o.vx,g=l-o.y-o.vy,v=d*d+g*g;v<p*p&&(0===d&&(d=xg(),v+=d*d),0===g&&(g=xg(),v+=g*g),v=(p-(v=Math.sqrt(v)))/v*u,c.vx+=(d*=v)*(p=(a*=a)/(h+a)),c.vy+=(g*=v)*p,o.vx-=d*(p=1-p),o.vy-=g*p)}}}for(var n,r,c,s,l,f,h,p=i.length,d=0;d<a;++d)for(r=ir(i,ar,cr).visitAfter(e),n=0;n<p;++n)c=i[n],f=o[c.index],h=f*f,s=c.x+c.vx,l=c.y+c.vy,r.visit(t)}function e(t){if(t.data)return t.r=o[t.data.index];for(var n=t.r=0;n<4;++n)t[n]&&t[n].r>t.r&&(t.r=t[n].r)}function r(){if(i){var n,e,r=i.length;for(o=new Array(r),n=0;n<r;++n)e=i[n],o[e.index]=+t(e,n,i)}}var i,o,u=1,a=1;return"function"!=typeof t&&(t=mg(null==t?1:+t)),n.initialize=function(t){i=t,r()},n.iterations=function(t){return arguments.length?(a=+t,n):a},n.strength=function(t){return arguments.length?(u=+t,n):u},n.radius=function(e){return arguments.length?(t="function"==typeof e?e:mg(+e),r(),n):t},n},Rg=function(t){function n(t){return 1/Math.min(s[t.source.index],s[t.target.index])}function e(n){for(var e=0,r=t.length;e<d;++e)for(var i,o,c,s,f,h,p,g=0;g<r;++g)i=t[g],o=i.source,c=i.target,s=c.x+c.vx-o.x-o.vx||xg(),f=c.y+c.vy-o.y-o.vy||xg(),h=Math.sqrt(s*s+f*f),h=(h-a[g])/h*n*u[g],s*=h,f*=h,c.vx-=s*(p=l[g]),c.vy-=f*p,o.vx+=s*(p=1-p),o.vy+=f*p}function r(){if(c){var n,e,r=c.length,h=t.length,p=He(c,f);for(n=0,s=new Array(r);n<h;++n)e=t[n],e.index=n,"object"!=typeof e.source&&(e.source=lr(p,e.source)),"object"!=typeof e.target&&(e.target=lr(p,e.target)),s[e.source.index]=(s[e.source.index]||0)+1,s[e.target.index]=(s[e.target.index]||0)+1;for(n=0,l=new Array(h);n<h;++n)e=t[n],l[n]=s[e.source.index]/(s[e.source.index]+s[e.target.index]);u=new Array(h),i(),a=new Array(h),o()}}function i(){if(c)for(var n=0,e=t.length;n<e;++n)u[n]=+h(t[n],n,t)}function o(){if(c)for(var n=0,e=t.length;n<e;++n)a[n]=+p(t[n],n,t)}var u,a,c,s,l,f=sr,h=n,p=mg(30),d=1;return null==t&&(t=[]),e.initialize=function(t){c=t,r()},e.links=function(n){return arguments.length?(t=n,r(),e):t},e.id=function(t){return arguments.length?(f=t,e):f},e.iterations=function(t){return arguments.length?(d=+t,e):d},e.strength=function(t){return arguments.length?(h="function"==typeof t?t:mg(+t),i(),e):h},e.distance=function(t){return arguments.length?(p="function"==typeof t?t:mg(+t),o(),e):p},e},Og=10,Fg=Math.PI*(3-Math.sqrt(5)),Yg=function(t){function n(){e(),p.call("tick",o),u<a&&(h.stop(),p.call("end",o))}function e(){var n,e,r=t.length;for(u+=(s-u)*c,f.each(function(t){t(u)}),n=0;n<r;++n)e=t[n],null==e.fx?e.x+=e.vx*=l:(e.x=e.fx,e.vx=0),null==e.fy?e.y+=e.vy*=l:(e.y=e.fy,e.vy=0)}function r(){for(var n,e=0,r=t.length;e<r;++e){if(n=t[e],n.index=e,isNaN(n.x)||isNaN(n.y)){var i=Og*Math.sqrt(e),o=e*Fg;n.x=i*Math.cos(o),n.y=i*Math.sin(o)}(isNaN(n.vx)||isNaN(n.vy))&&(n.vx=n.vy=0)}}function i(n){return n.initialize&&n.initialize(t),n}var o,u=1,a=.001,c=1-Math.pow(a,1/300),s=0,l=.6,f=He(),h=mn(n),p=g("tick","end");return null==t&&(t=[]),r(),o={tick:e,restart:function(){return h.restart(n),o},stop:function(){return h.stop(),o},nodes:function(n){return arguments.length?(t=n,r(),f.each(i),o):t},alpha:function(t){return arguments.length?(u=+t,o):u},alphaMin:function(t){return arguments.length?(a=+t,o):a},alphaDecay:function(t){return arguments.length?(c=+t,o):+c},alphaTarget:function(t){return arguments.length?(s=+t,o):s},velocityDecay:function(t){return arguments.length?(l=1-t,o):1-l},force:function(t,n){return arguments.length>1?(null==n?f.remove(t):f.set(t,i(n)),o):f.get(t)},find:function(n,e,r){var i,o,u,a,c,s=0,l=t.length;for(null==r?r=1/0:r*=r,s=0;s<l;++s)a=t[s],i=n-a.x,o=e-a.y,u=i*i+o*o,u<r&&(c=a,r=u);return c},on:function(t,n){return arguments.length>1?(p.on(t,n),o):p.on(t)}}},Ig=function(){function t(t){var n,a=i.length,c=ir(i,fr,hr).visitAfter(e);for(u=t,n=0;n<a;++n)o=i[n],c.visit(r)}function n(){if(i){var t,n,e=i.length;for(a=new Array(e),t=0;t<e;++t)n=i[t],a[n.index]=+c(n,t,i)}}function e(t){var n,e,r,i,o,u=0;if(t.length){for(r=i=o=0;o<4;++o)(n=t[o])&&(e=n.value)&&(u+=e,r+=e*n.x,i+=e*n.y);t.x=r/u,t.y=i/u}else{n=t,n.x=n.data.x,n.y=n.data.y;do u+=a[n.data.index];while(n=n.next)}t.value=u}function r(t,n,e,r){if(!t.value)return!0;var i=t.x-o.x,c=t.y-o.y,h=r-n,p=i*i+c*c;if(h*h/f<p)return p<l&&(0===i&&(i=xg(),p+=i*i),0===c&&(c=xg(),p+=c*c),p<s&&(p=Math.sqrt(s*p)),o.vx+=i*t.value*u/p,o.vy+=c*t.value*u/p),!0;if(!(t.length||p>=l)){(t.data!==o||t.next)&&(0===i&&(i=xg(),p+=i*i),0===c&&(c=xg(),p+=c*c),p<s&&(p=Math.sqrt(s*p)));do t.data!==o&&(h=a[t.data.index]*u/p,o.vx+=i*h,o.vy+=c*h);while(t=t.next)}}var i,o,u,a,c=mg(-30),s=1,l=1/0,f=.81;return t.initialize=function(t){i=t,n()},t.strength=function(e){return arguments.length?(c="function"==typeof e?e:mg(+e),n(),t):c},t.distanceMin=function(n){return arguments.length?(s=n*n,t):Math.sqrt(s)},t.distanceMax=function(n){return arguments.length?(l=n*n,t):Math.sqrt(l)},t.theta=function(n){return arguments.length?(f=n*n,t):Math.sqrt(f)},t},jg=function(t){function n(t){for(var n,e=0,u=r.length;e<u;++e)n=r[e],n.vx+=(o[e]-n.x)*i[e]*t}function e(){if(r){var n,e=r.length;for(i=new Array(e),o=new Array(e),n=0;n<e;++n)i[n]=isNaN(o[n]=+t(r[n],n,r))?0:+u(r[n],n,r)}}var r,i,o,u=mg(.1);return"function"!=typeof t&&(t=mg(null==t?0:+t)),n.initialize=function(t){r=t,e()},n.strength=function(t){return arguments.length?(u="function"==typeof t?t:mg(+t),e(),n):u},n.x=function(r){return arguments.length?(t="function"==typeof r?r:mg(+r),e(),n):t},n},Hg=function(t){function n(t){for(var n,e=0,u=r.length;e<u;++e)n=r[e],n.vy+=(o[e]-n.y)*i[e]*t}function e(){if(r){var n,e=r.length;for(i=new Array(e),o=new Array(e),n=0;n<e;++n)i[n]=isNaN(o[n]=+t(r[n],n,r))?0:+u(r[n],n,r)}}var r,i,o,u=mg(.1);return"function"!=typeof t&&(t=mg(null==t?0:+t)),n.initialize=function(t){r=t,e()},n.strength=function(t){return arguments.length?(u="function"==typeof t?t:mg(+t),e(),n):u},n.y=function(r){return arguments.length?(t="function"==typeof r?r:mg(+r),e(),n):t},n},Bg=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]},Xg=function(t){return t=Bg(Math.abs(t)),t?t[1]:NaN},Vg=function(t,n){return function(e,r){for(var i=e.length,o=[],u=0,a=t[0],c=0;i>0&&a>0&&(c+a+1>r&&(a=Math.max(1,r-c)),o.push(e.substring(i-=a,i+a)),!((c+=a+1)>r));)a=t[u=(u+1)%t.length];return o.reverse().join(n)}},Zg=function(t){return function(n){return n.replace(/[0-9]/g,function(n){return t[+n]})}},$g=function(t,n){t=t.toPrecision(n);t:for(var e,r=t.length,i=1,o=-1;i<r;++i)switch(t[i]){case".":o=e=i;break;case"0":0===o&&(o=i),e=i;break;case"e":break t;default:o>0&&(o=0)}return o>0?t.slice(0,o)+t.slice(e+1):t},Wg=function(t,n){var e=Bg(t,n);if(!e)return t+"";var r=e[0],i=e[1],o=i-(qg=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,u=r.length;return o===u?r:o>u?r+new Array(o-u+1).join("0"):o>0?r.slice(0,o)+"."+r.slice(o):"0."+new Array(1-o).join("0")+Bg(t,Math.max(0,n+o-1))[0]},Gg=function(t,n){var e=Bg(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array((-i)).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")},Jg={"":$g,"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return Gg(100*t,n)},r:Gg,s:Wg,X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},Qg=/^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;pr.prototype=dr.prototype,dr.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+this.type};var Kg,tv=function(t){return t},nv=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"],ev=function(t){function n(t){function n(t){var n,i,a,l=v,x=y;if("c"===g)x=_(t)+x,t="";else{t=+t;var b=t<0;if(t=_(Math.abs(t),d),b&&0===+t&&(b=!1),l=(b?"("===s?s:"-":"-"===s||"("===s?"":s)+l,x=x+("s"===g?nv[8+qg/3]:"")+(b&&"("===s?")":""),m)for(n=-1,i=t.length;++n<i;)if(a=t.charCodeAt(n),48>a||a>57){x=(46===a?o+t.slice(n+1):t.slice(n))+x,t=t.slice(0,n);break}}p&&!f&&(t=r(t,1/0));var w=l.length+t.length+x.length,M=w<h?new Array(h-w+1).join(e):"";switch(p&&f&&(t=r(M+t,M.length?h-x.length:1/0),M=""),c){case"<":t=l+t+x+M;break;case"=":t=l+M+t+x;break;case"^":t=M.slice(0,w=M.length>>1)+l+t+x+M.slice(w);break;default:t=M+l+t+x}return u(t)}t=pr(t);var e=t.fill,c=t.align,s=t.sign,l=t.symbol,f=t.zero,h=t.width,p=t.comma,d=t.precision,g=t.type,v="$"===l?i[0]:"#"===l&&/[boxX]/.test(g)?"0"+g.toLowerCase():"",y="$"===l?i[1]:/[%p]/.test(g)?a:"",_=Jg[g],m=!g||/[defgprs%]/.test(g);return d=null==d?g?6:12:/[gprs]/.test(g)?Math.max(1,Math.min(21,d)):Math.max(0,Math.min(20,d)),n.toString=function(){return t+""},n}function e(t,e){var r=n((t=pr(t),t.type="f",t)),i=3*Math.max(-8,Math.min(8,Math.floor(Xg(e)/3))),o=Math.pow(10,-i),u=nv[8+i/3];return function(t){return r(o*t)+u}}var r=t.grouping&&t.thousands?Vg(t.grouping,t.thousands):tv,i=t.currency,o=t.decimal,u=t.numerals?Zg(t.numerals):tv,a=t.percent||"%";return{format:n,formatPrefix:e}};gr({decimal:".",thousands:",",grouping:[3],currency:["$",""]});var rv=function(t){return Math.max(0,-Xg(Math.abs(t)))},iv=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Xg(n)/3)))-Xg(Math.abs(t)))},ov=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,Xg(n)-Xg(t))+1},uv=function(){return new vr};vr.prototype={constructor:vr,reset:function(){this.s=this.t=0},add:function(t){yr(Ov,t,this.t),yr(this,Ov.s,this.s),this.s?this.t+=Ov.t:this.s=Ov.t},valueOf:function(){return this.s}};var av,cv,sv,lv,fv,hv,pv,dv,gv,vv,yv,_v,mv,xv,bv,wv,Mv,kv,Tv,Sv,Av,Nv,Ev,Cv,zv,Dv,Lv,Pv,qv,Uv,Rv,Ov=new vr,Fv=1e-6,Yv=1e-12,Iv=Math.PI,jv=Iv/2,Hv=Iv/4,Bv=2*Iv,Xv=180/Iv,Vv=Iv/180,Zv=Math.abs,$v=Math.atan,Wv=Math.atan2,Gv=Math.cos,Jv=Math.ceil,Qv=Math.exp,Kv=Math.log,ty=Math.pow,ny=Math.sin,ey=Math.sign||function(t){return t>0?1:t<0?-1:0},ry=Math.sqrt,iy=Math.tan,oy={Feature:function(t,n){wr(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)wr(e[r].geometry,n)}},uy={Sphere:function(t,n){n.sphere()},Point:function(t,n){t=t.coordinates,n.point(t[0],t[1],t[2])},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)t=e[r],n.point(t[0],t[1],t[2])},LineString:function(t,n){Mr(t.coordinates,n,0)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)Mr(e[r],n,0)},Polygon:function(t,n){kr(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)kr(e[r],n)},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)wr(e[r],n)}},ay=function(t,n){t&&oy.hasOwnProperty(t.type)?oy[t.type](t,n):wr(t,n)},cy=uv(),sy=uv(),ly={point:br,lineStart:br,lineEnd:br,polygonStart:function(){cy.reset(),ly.lineStart=Tr,ly.lineEnd=Sr},polygonEnd:function(){var t=+cy;sy.add(t<0?Bv+t:t),this.lineStart=this.lineEnd=this.point=br},sphere:function(){sy.add(Bv)}},fy=function(t){return sy.reset(),ay(t,ly),2*sy},hy=uv(),py={point:Ur,lineStart:Or,lineEnd:Fr,polygonStart:function(){py.point=Yr,py.lineStart=Ir,py.lineEnd=jr,hy.reset(),ly.polygonStart()},polygonEnd:function(){ly.polygonEnd(),py.point=Ur,py.lineStart=Or,py.lineEnd=Fr,cy<0?(hv=-(dv=180),pv=-(gv=90)):hy>Fv?gv=90:hy<-Fv&&(pv=-90),bv[0]=hv,bv[1]=dv}},dy=function(t){var n,e,r,i,o,u,a;if(gv=dv=-(hv=pv=1/0),xv=[],ay(t,py),e=xv.length){for(xv.sort(Br),n=1,r=xv[0],o=[r];n<e;++n)i=xv[n],Xr(r,i[0])||Xr(r,i[1])?(Hr(r[0],i[1])>Hr(r[0],r[1])&&(r[1]=i[1]),Hr(i[0],r[1])>Hr(r[0],r[1])&&(r[0]=i[0])):o.push(r=i);for(u=-(1/0),e=o.length-1,n=0,r=o[e];n<=e;r=i,++n)i=o[n],(a=Hr(r[1],i[0]))>u&&(u=a,hv=i[0],dv=r[1])}return xv=bv=null,hv===1/0||pv===1/0?[[NaN,NaN],[NaN,NaN]]:[[hv,pv],[dv,gv]]},gy={sphere:br,point:Vr,lineStart:$r,lineEnd:Jr,polygonStart:function(){gy.lineStart=Qr,gy.lineEnd=Kr},polygonEnd:function(){gy.lineStart=$r,gy.lineEnd=Jr}},vy=function(t){wv=Mv=kv=Tv=Sv=Av=Nv=Ev=Cv=zv=Dv=0,ay(t,gy);var n=Cv,e=zv,r=Dv,i=n*n+e*e+r*r;return i<Yv&&(n=Av,e=Nv,r=Ev,Mv<Fv&&(n=kv,e=Tv,r=Sv),i=n*n+e*e+r*r,i<Yv)?[NaN,NaN]:[Wv(e,n)*Xv,mr(r/ry(i))*Xv]},yy=function(t){return function(){return t}},_y=function(t,n){function e(e,r){return e=t(e,r),n(e[0],e[1])}return t.invert&&n.invert&&(e.invert=function(e,r){return e=n.invert(e,r),e&&t.invert(e[0],e[1])}),e};ei.invert=ei;var my,xy,by,wy,My,ky,Ty,Sy,Ay,Ny,Ey,Cy=function(t){function n(n){return n=t(n[0]*Vv,n[1]*Vv),n[0]*=Xv,n[1]*=Xv,n}return t=ri(t[0]*Vv,t[1]*Vv,t.length>2?t[2]*Vv:0),n.invert=function(n){return n=t.invert(n[0]*Vv,n[1]*Vv),n[0]*=Xv,n[1]*=Xv,n},n},zy=function(){function t(t,n){e.push(t=r(t,n)),t[0]*=Xv,t[1]*=Xv}function n(){var t=i.apply(this,arguments),n=o.apply(this,arguments)*Vv,c=u.apply(this,arguments)*Vv;return e=[],r=ri(-t[0]*Vv,-t[1]*Vv,0).invert,ai(a,n,c,1),t={type:"Polygon",coordinates:[e]},e=r=null,t}var e,r,i=yy([0,0]),o=yy(90),u=yy(6),a={point:t};return n.center=function(t){return arguments.length?(i="function"==typeof t?t:yy([+t[0],+t[1]]),n):i},n.radius=function(t){return arguments.length?(o="function"==typeof t?t:yy(+t),n):o},n.precision=function(t){return arguments.length?(u="function"==typeof t?t:yy(+t),n):u},n},Dy=function(){var t,n=[];return{point:function(n,e){t.push([n,e])},lineStart:function(){n.push(t=[])},lineEnd:br,rejoin:function(){n.length>1&&n.push(n.pop().concat(n.shift()))},result:function(){var e=n;return n=[],t=null,e}}},Ly=function(t,n,e,r,i,o){var u,a=t[0],c=t[1],s=n[0],l=n[1],f=0,h=1,p=s-a,d=l-c;if(u=e-a,p||!(u>0)){if(u/=p,p<0){if(u<f)return;u<h&&(h=u)}else if(p>0){if(u>h)return;u>f&&(f=u)}if(u=i-a,p||!(u<0)){if(u/=p,p<0){if(u>h)return;u>f&&(f=u)}else if(p>0){if(u<f)return;u<h&&(h=u)}if(u=r-c,d||!(u>0)){if(u/=d,d<0){if(u<f)return;u<h&&(h=u)}else if(d>0){if(u>h)return;u>f&&(f=u)}if(u=o-c,d||!(u<0)){if(u/=d,d<0){if(u>h)return;u>f&&(f=u)}else if(d>0){if(u<f)return;u<h&&(h=u)}return f>0&&(t[0]=a+f*p,t[1]=c+f*d),h<1&&(n[0]=a+h*p,n[1]=c+h*d),!0}}}}},Py=function(t,n){return Zv(t[0]-n[0])<Fv&&Zv(t[1]-n[1])<Fv},qy=function(t,n,e,r,i){var o,u,a=[],c=[];if(t.forEach(function(t){if(!((n=t.length-1)<=0)){var n,e,r=t[0],u=t[n];if(Py(r,u)){for(i.lineStart(),o=0;o<n;++o)i.point((r=t[o])[0],r[1]);return void i.lineEnd()}a.push(e=new si(r,t,null,(!0))),c.push(e.o=new si(r,null,e,(!1))),a.push(e=new si(u,t,null,(!1))),c.push(e.o=new si(u,null,e,(!0)))}}),a.length){for(c.sort(n),li(a),li(c),o=0,u=c.length;o<u;++o)c[o].e=e=!e;for(var s,l,f=a[0];;){for(var h=f,p=!0;h.v;)if((h=h.n)===f)return;s=h.z,i.lineStart();do{if(h.v=h.o.v=!0,h.e){if(p)for(o=0,u=s.length;o<u;++o)i.point((l=s[o])[0],l[1]);else r(h.x,h.n.x,1,i);h=h.n}else{if(p)for(s=h.p.z,o=s.length-1;o>=0;--o)i.point((l=s[o])[0],l[1]);else r(h.x,h.p.x,-1,i);h=h.p}h=h.o,s=h.z,p=!p}while(!h.v);i.lineEnd()}}},Uy=1e9,Ry=-Uy,Oy=function(){var t,n,e,r=0,i=0,o=960,u=500;return e={stream:function(e){return t&&n===e?t:t=fi(r,i,o,u)(n=e)},extent:function(a){return arguments.length?(r=+a[0][0],i=+a[0][1],o=+a[1][0],u=+a[1][1],t=n=null,e):[[r,i],[o,u]]}}},Fy=uv(),Yy=function(t,n){var e=n[0],r=n[1],i=[ny(e),-Gv(e),0],o=0,u=0;Fy.reset();for(var a=0,c=t.length;a<c;++a)if(l=(s=t[a]).length)for(var s,l,f=s[l-1],h=f[0],p=f[1]/2+Hv,d=ny(p),g=Gv(p),v=0;v<l;++v,h=_,d=x,g=b,f=y){var y=s[v],_=y[0],m=y[1]/2+Hv,x=ny(m),b=Gv(m),w=_-h,M=w>=0?1:-1,k=M*w,T=k>Iv,S=d*x;if(Fy.add(Wv(S*M*ny(k),g*b+S*Gv(k))),o+=T?w+M*Bv:w,T^h>=e^_>=e){var A=Dr(Cr(f),Cr(y));qr(A);var N=Dr(i,A);qr(N);var E=(T^w>=0?-1:1)*mr(N[2]);(r>E||r===E&&(A[0]||A[1]))&&(u+=T^w>=0?1:-1)}}return(o<-Fv||o<Fv&&Fy<-Fv)^1&u},Iy=uv(),jy={sphere:br,point:br,lineStart:hi,lineEnd:br,polygonStart:br,polygonEnd:br},Hy=function(t){return Iy.reset(),ay(t,jy),+Iy},By=[null,null],Xy={type:"LineString",coordinates:By},Vy=function(t,n){return By[0]=t,By[1]=n,Hy(Xy)},Zy={Feature:function(t,n){return vi(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)if(vi(e[r].geometry,n))return!0;return!1}},$y={Sphere:function(){return!0},Point:function(t,n){return yi(t.coordinates,n)},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(yi(e[r],n))return!0;return!1},LineString:function(t,n){return _i(t.coordinates,n)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(_i(e[r],n))return!0;return!1},Polygon:function(t,n){return mi(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(mi(e[r],n))return!0;return!1},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)if(vi(e[r],n))return!0;return!1}},Wy=function(t,n){return(t&&Zy.hasOwnProperty(t.type)?Zy[t.type]:vi)(t,n)},Gy=function(t,n){var e=t[0]*Vv,r=t[1]*Vv,i=n[0]*Vv,o=n[1]*Vv,u=Gv(r),a=ny(r),c=Gv(o),s=ny(o),l=u*Gv(e),f=u*ny(e),h=c*Gv(i),p=c*ny(i),d=2*mr(ry(xr(o-r)+u*c*xr(i-e))),g=ny(d),v=d?function(t){var n=ny(t*=d)/g,e=ny(d-t)/g,r=e*l+n*h,i=e*f+n*p,o=e*a+n*s;return[Wv(i,r)*Xv,Wv(o,ry(r*r+i*i))*Xv]}:function(){return[e*Xv,r*Xv]};return v.distance=d,v},Jy=function(t){return t},Qy=uv(),Ky=uv(),t_={point:br,lineStart:br,lineEnd:br,polygonStart:function(){t_.lineStart=Si,t_.lineEnd=Ei},polygonEnd:function(){t_.lineStart=t_.lineEnd=t_.point=br,Qy.add(Zv(Ky)),Ky.reset()},result:function(){var t=Qy/2;return Qy.reset(),t}},n_=1/0,e_=n_,r_=-n_,i_=r_,o_={point:Ci,lineStart:br,lineEnd:br,polygonStart:br,polygonEnd:br,result:function(){var t=[[n_,e_],[r_,i_]];return r_=i_=-(e_=n_=1/0),t}},u_=0,a_=0,c_=0,s_=0,l_=0,f_=0,h_=0,p_=0,d_=0,g_={point:zi,lineStart:Di,lineEnd:qi,polygonStart:function(){g_.lineStart=Ui,g_.lineEnd=Ri},polygonEnd:function(){g_.point=zi,g_.lineStart=Di,g_.lineEnd=qi},result:function(){var t=d_?[h_/d_,p_/d_]:f_?[s_/f_,l_/f_]:c_?[u_/c_,a_/c_]:[NaN,NaN];return u_=a_=c_=s_=l_=f_=h_=p_=d_=0,t}};Yi.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._context.moveTo(t,n),this._point=1;break;case 1:this._context.lineTo(t,n);break;default:this._context.moveTo(t+this._radius,n),this._context.arc(t,n,this._radius,0,Bv)}},result:br};var v_,y_,__,m_,x_,b_=uv(),w_={point:br,lineStart:function(){w_.point=Ii},lineEnd:function(){v_&&ji(y_,__),w_.point=br},polygonStart:function(){v_=!0},polygonEnd:function(){v_=null},result:function(){var t=+b_;return b_.reset(),t}};Hi.prototype={_radius:4.5,_circle:Bi(4.5),pointRadius:function(t){return(t=+t)!==this._radius&&(this._radius=t,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._string.push("M",t,",",n),this._point=1;break;case 1:this._string.push("L",t,",",n);break;default:null==this._circle&&(this._circle=Bi(this._radius)),this._string.push("M",t,",",n,this._circle)}},result:function(){if(this._string.length){var t=this._string.join("");return this._string=[],t}return null}};var M_=function(t,n){function e(t){return t&&("function"==typeof o&&i.pointRadius(+o.apply(this,arguments)),ay(t,r(i))),i.result()}var r,i,o=4.5;return e.area=function(t){return ay(t,r(t_)),t_.result()},e.measure=function(t){return ay(t,r(w_)),w_.result()},e.bounds=function(t){return ay(t,r(o_)),o_.result()},e.centroid=function(t){return ay(t,r(g_)),g_.result()},e.projection=function(n){return arguments.length?(r=null==n?(t=null,Jy):(t=n).stream,e):t},e.context=function(t){return arguments.length?(i=null==t?(n=null,new Hi):new Yi(n=t),"function"!=typeof o&&i.pointRadius(o),e):n},e.pointRadius=function(t){return arguments.length?(o="function"==typeof t?t:(i.pointRadius(+t),+t),e):o},e.projection(t).context(n)},k_=function(t,n,e,r){return function(i,o){function u(n,e){var r=i(n,e);t(n=r[0],e=r[1])&&o.point(n,e)}function a(t,n){var e=i(t,n);v.point(e[0],e[1])}function c(){b.point=a,v.lineStart()}function s(){b.point=u,v.lineEnd()}function l(t,n){g.push([t,n]);var e=i(t,n);m.point(e[0],e[1])}function f(){m.lineStart(),g=[]}function h(){l(g[0][0],g[0][1]),m.lineEnd();var t,n,e,r,i=m.clean(),u=_.result(),a=u.length;
if(g.pop(),p.push(g),g=null,a)if(1&i){if(e=u[0],(n=e.length-1)>0){for(x||(o.polygonStart(),x=!0),o.lineStart(),t=0;t<n;++t)o.point((r=e[t])[0],r[1]);o.lineEnd()}}else a>1&&2&i&&u.push(u.pop().concat(u.shift())),d.push(u.filter(Xi))}var p,d,g,v=n(o),y=i.invert(r[0],r[1]),_=Dy(),m=n(_),x=!1,b={point:u,lineStart:c,lineEnd:s,polygonStart:function(){b.point=l,b.lineStart=f,b.lineEnd=h,d=[],p=[]},polygonEnd:function(){b.point=u,b.lineStart=c,b.lineEnd=s,d=bl(d);var t=Yy(p,y);d.length?(x||(o.polygonStart(),x=!0),qy(d,Vi,t,e,o)):t&&(x||(o.polygonStart(),x=!0),o.lineStart(),e(null,null,1,o),o.lineEnd()),x&&(o.polygonEnd(),x=!1),d=p=null},sphere:function(){o.polygonStart(),o.lineStart(),e(null,null,1,o),o.lineEnd(),o.polygonEnd()}};return b}},T_=k_(function(){return!0},Zi,Wi,[-Iv,-jv]),S_=function(t,n){function e(e,r,i,o){ai(o,t,n,i,e,r)}function r(t,n){return Gv(t)*Gv(n)>a}function i(t){var n,e,i,a,l;return{lineStart:function(){a=i=!1,l=1},point:function(f,h){var p,d=[f,h],g=r(f,h),v=c?g?0:u(f,h):g?u(f+(f<0?Iv:-Iv),h):0;if(!n&&(a=i=g)&&t.lineStart(),g!==i&&(p=o(n,d),(!p||Py(n,p)||Py(d,p))&&(d[0]+=Fv,d[1]+=Fv,g=r(d[0],d[1]))),g!==i)l=0,g?(t.lineStart(),p=o(d,n),t.point(p[0],p[1])):(p=o(n,d),t.point(p[0],p[1]),t.lineEnd()),n=p;else if(s&&n&&c^g){var y;v&e||!(y=o(d,n,!0))||(l=0,c?(t.lineStart(),t.point(y[0][0],y[0][1]),t.point(y[1][0],y[1][1]),t.lineEnd()):(t.point(y[1][0],y[1][1]),t.lineEnd(),t.lineStart(),t.point(y[0][0],y[0][1])))}!g||n&&Py(n,d)||t.point(d[0],d[1]),n=d,i=g,e=v},lineEnd:function(){i&&t.lineEnd(),n=null},clean:function(){return l|(a&&i)<<1}}}function o(t,n,e){var r=Cr(t),i=Cr(n),o=[1,0,0],u=Dr(r,i),c=zr(u,u),s=u[0],l=c-s*s;if(!l)return!e&&t;var f=a*c/l,h=-a*s/l,p=Dr(o,u),d=Pr(o,f),g=Pr(u,h);Lr(d,g);var v=p,y=zr(d,v),_=zr(v,v),m=y*y-_*(zr(d,d)-1);if(!(m<0)){var x=ry(m),b=Pr(v,(-y-x)/_);if(Lr(b,d),b=Er(b),!e)return b;var w,M=t[0],k=n[0],T=t[1],S=n[1];k<M&&(w=M,M=k,k=w);var A=k-M,N=Zv(A-Iv)<Fv,E=N||A<Fv;if(!N&&S<T&&(w=T,T=S,S=w),E?N?T+S>0^b[1]<(Zv(b[0]-M)<Fv?T:S):T<=b[1]&&b[1]<=S:A>Iv^(M<=b[0]&&b[0]<=k)){var C=Pr(v,(-y+x)/_);return Lr(C,d),[b,Er(C)]}}}function u(n,e){var r=c?t:Iv-t,i=0;return n<-r?i|=1:n>r&&(i|=2),e<-r?i|=4:e>r&&(i|=8),i}var a=Gv(t),c=a>0,s=Zv(a)>Fv;return k_(r,i,e,c?[0,-t]:[-Iv,t-Iv])},A_=function(t){return{stream:Gi(t)}};Ji.prototype={constructor:Ji,point:function(t,n){this.stream.point(t,n)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var N_=16,E_=Gv(30*Vv),C_=function(t,n){return+n?no(t,n):to(t)},z_=Gi({point:function(t,n){this.stream.point(t*Vv,n*Vv)}}),D_=function(){return io(uo).scale(155.424).center([0,33.6442])},L_=function(){return D_().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])},P_=function(){function t(t){var n=t[0],e=t[1];return a=null,i.point(n,e),a||(o.point(n,e),a)||(u.point(n,e),a)}function n(){return e=r=null,t}var e,r,i,o,u,a,c=L_(),s=D_().rotate([154,0]).center([-2,58.5]).parallels([55,65]),l=D_().rotate([157,0]).center([-3,19.9]).parallels([8,18]),f={point:function(t,n){a=[t,n]}};return t.invert=function(t){var n=c.scale(),e=c.translate(),r=(t[0]-e[0])/n,i=(t[1]-e[1])/n;return(i>=.12&&i<.234&&r>=-.425&&r<-.214?s:i>=.166&&i<.234&&r>=-.214&&r<-.115?l:c).invert(t)},t.stream=function(t){return e&&r===t?e:e=ao([c.stream(r=t),s.stream(t),l.stream(t)])},t.precision=function(t){return arguments.length?(c.precision(t),s.precision(t),l.precision(t),n()):c.precision()},t.scale=function(n){return arguments.length?(c.scale(n),s.scale(.35*n),l.scale(n),t.translate(c.translate())):c.scale()},t.translate=function(t){if(!arguments.length)return c.translate();var e=c.scale(),r=+t[0],a=+t[1];return i=c.translate(t).clipExtent([[r-.455*e,a-.238*e],[r+.455*e,a+.238*e]]).stream(f),o=s.translate([r-.307*e,a+.201*e]).clipExtent([[r-.425*e+Fv,a+.12*e+Fv],[r-.214*e-Fv,a+.234*e-Fv]]).stream(f),u=l.translate([r-.205*e,a+.212*e]).clipExtent([[r-.214*e+Fv,a+.166*e+Fv],[r-.115*e-Fv,a+.234*e-Fv]]).stream(f),n()},t.fitExtent=function(n,e){return Qi(t,n,e)},t.fitSize=function(n,e){return Ki(t,n,e)},t.scale(1070)},q_=co(function(t){return ry(2/(1+t))});q_.invert=so(function(t){return 2*mr(t/2)});var U_=function(){return eo(q_).scale(124.75).clipAngle(179.999)},R_=co(function(t){return(t=_r(t))&&t/ny(t)});R_.invert=so(function(t){return t});var O_=function(){return eo(R_).scale(79.4188).clipAngle(179.999)};lo.invert=function(t,n){return[t,2*$v(Qv(n))-jv]};var F_=function(){return fo(lo).scale(961/Bv)},Y_=function(){return io(po).scale(109.5).parallels([30,30])};go.invert=go;var I_=function(){return eo(go).scale(152.63)},j_=function(){return io(vo).scale(131.154).center([0,13.9389])};yo.invert=so($v);var H_=function(){return eo(yo).scale(144.049).clipAngle(60)},B_=function(){function t(){return i=o=null,u}var n,e,r,i,o,u,a=1,c=0,s=0,l=1,f=1,h=Jy,p=null,d=Jy;return u={stream:function(t){return i&&o===t?i:i=h(d(o=t))},clipExtent:function(i){return arguments.length?(d=null==i?(p=n=e=r=null,Jy):fi(p=+i[0][0],n=+i[0][1],e=+i[1][0],r=+i[1][1]),t()):null==p?null:[[p,n],[e,r]]},scale:function(n){return arguments.length?(h=_o((a=+n)*l,a*f,c,s),t()):a},translate:function(n){return arguments.length?(h=_o(a*l,a*f,c=+n[0],s=+n[1]),t()):[c,s]},reflectX:function(n){return arguments.length?(h=_o(a*(l=n?-1:1),a*f,c,s),t()):l<0},reflectY:function(n){return arguments.length?(h=_o(a*l,a*(f=n?-1:1),c,s),t()):f<0},fitExtent:function(t,n){return Qi(u,t,n)},fitSize:function(t,n){return Ki(u,t,n)}}};mo.invert=so(mr);var X_=function(){return eo(mo).scale(249.5).clipAngle(90+Fv)};xo.invert=so(function(t){return 2*$v(t)});var V_=function(){return eo(xo).scale(250).clipAngle(142)};bo.invert=function(t,n){return[-n,2*$v(Qv(t))-jv]};var Z_=function(){var t=fo(bo),n=t.center,e=t.rotate;return t.center=function(t){return arguments.length?n([-t[1],t[0]]):(t=n(),[t[1],-t[0]])},t.rotate=function(t){return arguments.length?e([t[0],t[1],t.length>2?t[2]+90:90]):(t=e(),[t[0],t[1],t[2]-90])},e([0,0,90]).scale(159.155)},$_=function(){function t(t){var o,u=0;t.eachAfter(function(t){var e=t.children;e?(t.x=Mo(e),t.y=To(e)):(t.x=o?u+=n(t,o):0,t.y=0,o=t)});var a=Ao(t),c=No(t),s=a.x-n(a,c)/2,l=c.x+n(c,a)/2;return t.eachAfter(i?function(n){n.x=(n.x-t.x)*e,n.y=(t.y-n.y)*r}:function(n){n.x=(n.x-s)/(l-s)*e,n.y=(1-(t.y?n.y/t.y:1))*r})}var n=wo,e=1,r=1,i=!1;return t.separation=function(e){return arguments.length?(n=e,t):n},t.size=function(n){return arguments.length?(i=!1,e=+n[0],r=+n[1],t):i?null:[e,r]},t.nodeSize=function(n){return arguments.length?(i=!0,e=+n[0],r=+n[1],t):i?[e,r]:null},t},W_=function(){return this.eachAfter(Eo)},G_=function(t){var n,e,r,i,o=this,u=[o];do for(n=u.reverse(),u=[];o=n.pop();)if(t(o),e=o.children)for(r=0,i=e.length;r<i;++r)u.push(e[r]);while(u.length);return this},J_=function(t){for(var n,e,r=this,i=[r];r=i.pop();)if(t(r),n=r.children)for(e=n.length-1;e>=0;--e)i.push(n[e]);return this},Q_=function(t){for(var n,e,r,i=this,o=[i],u=[];i=o.pop();)if(u.push(i),n=i.children)for(e=0,r=n.length;e<r;++e)o.push(n[e]);for(;i=u.pop();)t(i);return this},K_=function(t){return this.eachAfter(function(n){for(var e=+t(n.data)||0,r=n.children,i=r&&r.length;--i>=0;)e+=r[i].value;n.value=e})},tm=function(t){return this.eachBefore(function(n){n.children&&n.children.sort(t)})},nm=function(t){for(var n=this,e=Co(n,t),r=[n];n!==e;)n=n.parent,r.push(n);for(var i=r.length;t!==e;)r.splice(i,0,t),t=t.parent;return r},em=function(){for(var t=this,n=[t];t=t.parent;)n.push(t);return n},rm=function(){var t=[];return this.each(function(n){t.push(n)}),t},im=function(){var t=[];return this.eachBefore(function(n){n.children||t.push(n)}),t},om=function(){var t=this,n=[];return t.each(function(e){e!==t&&n.push({source:e.parent,target:e})}),n};Uo.prototype=zo.prototype={constructor:Uo,count:W_,each:G_,eachAfter:Q_,eachBefore:J_,sum:K_,sort:tm,path:nm,ancestors:em,descendants:rm,leaves:im,links:om,copy:Do};var um=function(t){for(var n,e=(t=t.slice()).length,r=null,i=r;e;){var o=new Ro(t[e-1]);i=i?i.next=o:r=o,t[n]=t[--e]}return{head:r,tail:i}},am=function(t){return Fo(um(t),[])},cm=function(t){return Zo(t),t},sm=function(t){return function(){return t}},lm=function(){function t(t){return t.x=e/2,t.y=r/2,n?t.eachBefore(Qo(n)).eachAfter(Ko(i,.5)).eachBefore(tu(1)):t.eachBefore(Qo(Jo)).eachAfter(Ko(Go,1)).eachAfter(Ko(i,t.r/Math.min(e,r))).eachBefore(tu(Math.min(e,r)/(2*t.r))),t}var n=null,e=1,r=1,i=Go;return t.radius=function(e){return arguments.length?(n=$o(e),t):n},t.size=function(n){return arguments.length?(e=+n[0],r=+n[1],t):[e,r]},t.padding=function(n){return arguments.length?(i="function"==typeof n?n:sm(+n),t):i},t},fm=function(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)},hm=function(t,n,e,r,i){for(var o,u=t.children,a=-1,c=u.length,s=t.value&&(r-n)/t.value;++a<c;)o=u[a],o.y0=e,o.y1=i,o.x0=n,o.x1=n+=o.value*s},pm=function(){function t(t){var u=t.height+1;return t.x0=t.y0=i,t.x1=e,t.y1=r/u,t.eachBefore(n(r,u)),o&&t.eachBefore(fm),t}function n(t,n){return function(e){e.children&&hm(e,e.x0,t*(e.depth+1)/n,e.x1,t*(e.depth+2)/n);var r=e.x0,o=e.y0,u=e.x1-i,a=e.y1-i;u<r&&(r=u=(r+u)/2),a<o&&(o=a=(o+a)/2),e.x0=r,e.y0=o,e.x1=u,e.y1=a}}var e=1,r=1,i=0,o=!1;return t.round=function(n){return arguments.length?(o=!!n,t):o},t.size=function(n){return arguments.length?(e=+n[0],r=+n[1],t):[e,r]},t.padding=function(n){return arguments.length?(i=+n,t):i},t},dm="$",gm={depth:-1},vm={},ym=function(){function t(t){var r,i,o,u,a,c,s,l=t.length,f=new Array(l),h={};for(i=0;i<l;++i)r=t[i],a=f[i]=new Uo(r),null!=(c=n(r,i,t))&&(c+="")&&(s=dm+(a.id=c),h[s]=s in h?vm:a);for(i=0;i<l;++i)if(a=f[i],c=e(t[i],i,t),null!=c&&(c+="")){if(u=h[dm+c],!u)throw new Error("missing: "+c);if(u===vm)throw new Error("ambiguous: "+c);u.children?u.children.push(a):u.children=[a],a.parent=u}else{if(o)throw new Error("multiple roots");o=a}if(!o)throw new Error("no root");if(o.parent=gm,o.eachBefore(function(t){t.depth=t.parent.depth+1,--l}).eachBefore(qo),o.parent=null,l>0)throw new Error("cycle");return o}var n=nu,e=eu;return t.id=function(e){return arguments.length?(n=Wo(e),t):n},t.parentId=function(n){return arguments.length?(e=Wo(n),t):e},t};su.prototype=Object.create(Uo.prototype);var _m=function(){function t(t){var r=lu(t);if(r.eachAfter(n),r.parent.m=-r.z,r.eachBefore(e),c)t.eachBefore(i);else{var s=t,l=t,f=t;t.eachBefore(function(t){t.x<s.x&&(s=t),t.x>l.x&&(l=t),t.depth>f.depth&&(f=t)});var h=s===l?1:o(s,l)/2,p=h-s.x,d=u/(l.x+h+p),g=a/(f.depth||1);t.eachBefore(function(t){t.x=(t.x+p)*d,t.y=t.depth*g})}return t}function n(t){var n=t.children,e=t.parent.children,i=t.i?e[t.i-1]:null;if(n){au(t);var u=(n[0].z+n[n.length-1].z)/2;i?(t.z=i.z+o(t._,i._),t.m=t.z-u):t.z=u}else i&&(t.z=i.z+o(t._,i._));t.parent.A=r(t,i,t.parent.A||e[0])}function e(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function r(t,n,e){if(n){for(var r,i=t,u=t,a=n,c=i.parent.children[0],s=i.m,l=u.m,f=a.m,h=c.m;a=ou(a),i=iu(i),a&&i;)c=iu(c),u=ou(u),u.a=t,r=a.z+f-i.z-s+o(a._,i._),r>0&&(uu(cu(a,t,e),t,r),s+=r,l+=r),f+=a.m,s+=i.m,h+=c.m,l+=u.m;a&&!ou(u)&&(u.t=a,u.m+=f-l),i&&!iu(c)&&(c.t=i,c.m+=s-h,e=t)}return e}function i(t){t.x*=u,t.y=t.depth*a}var o=ru,u=1,a=1,c=null;return t.separation=function(n){return arguments.length?(o=n,t):o},t.size=function(n){return arguments.length?(c=!1,u=+n[0],a=+n[1],t):c?null:[u,a]},t.nodeSize=function(n){return arguments.length?(c=!0,u=+n[0],a=+n[1],t):c?[u,a]:null},t},mm=function(t,n,e,r,i){for(var o,u=t.children,a=-1,c=u.length,s=t.value&&(i-e)/t.value;++a<c;)o=u[a],o.x0=n,o.x1=r,o.y0=e,o.y1=e+=o.value*s},xm=(1+Math.sqrt(5))/2,bm=function AM(t){function n(n,e,r,i,o){fu(t,n,e,r,i,o)}return n.ratio=function(t){return AM((t=+t)>1?t:1)},n}(xm),wm=function(){function t(t){return t.x0=t.y0=0,t.x1=i,t.y1=o,t.eachBefore(n),u=[0],r&&t.eachBefore(fm),t}function n(t){var n=u[t.depth],r=t.x0+n,i=t.y0+n,o=t.x1-n,h=t.y1-n;o<r&&(r=o=(r+o)/2),h<i&&(i=h=(i+h)/2),t.x0=r,t.y0=i,t.x1=o,t.y1=h,t.children&&(n=u[t.depth+1]=a(t)/2,r+=f(t)-n,i+=c(t)-n,o-=s(t)-n,h-=l(t)-n,o<r&&(r=o=(r+o)/2),h<i&&(i=h=(i+h)/2),e(t,r,i,o,h))}var e=bm,r=!1,i=1,o=1,u=[0],a=Go,c=Go,s=Go,l=Go,f=Go;return t.round=function(n){return arguments.length?(r=!!n,t):r},t.size=function(n){return arguments.length?(i=+n[0],o=+n[1],t):[i,o]},t.tile=function(n){return arguments.length?(e=Wo(n),t):e},t.padding=function(n){return arguments.length?t.paddingInner(n).paddingOuter(n):t.paddingInner()},t.paddingInner=function(n){return arguments.length?(a="function"==typeof n?n:sm(+n),t):a},t.paddingOuter=function(n){return arguments.length?t.paddingTop(n).paddingRight(n).paddingBottom(n).paddingLeft(n):t.paddingTop()},t.paddingTop=function(n){return arguments.length?(c="function"==typeof n?n:sm(+n),t):c},t.paddingRight=function(n){return arguments.length?(s="function"==typeof n?n:sm(+n),t):s},t.paddingBottom=function(n){return arguments.length?(l="function"==typeof n?n:sm(+n),t):l},t.paddingLeft=function(n){return arguments.length?(f="function"==typeof n?n:sm(+n),t):f},t},Mm=function(t,n,e,r,i){function o(t,n,e,r,i,u,a){if(t>=n-1){var s=c[t];return s.x0=r,s.y0=i,s.x1=u,s.y1=a,void 0}for(var f=l[t],h=e/2+f,p=t+1,d=n-1;p<d;){var g=p+d>>>1;l[g]<h?p=g+1:d=g}h-l[p-1]<l[p]-h&&t+1<p&&--p;var v=l[p]-f,y=e-v;if(u-r>a-i){var _=(r*y+u*v)/e;o(t,p,v,r,i,_,a),o(p,n,y,_,i,u,a)}else{var m=(i*y+a*v)/e;o(t,p,v,r,i,u,m),o(p,n,y,r,m,u,a)}}var u,a,c=t.children,s=c.length,l=new Array(s+1);for(l[0]=a=u=0;u<s;++u)l[u+1]=a+=c[u].value;o(0,s,t.value,n,e,r,i)},km=function(t,n,e,r,i){(1&t.depth?mm:hm)(t,n,e,r,i)},Tm=function NM(t){function n(n,e,r,i,o){if((u=n._squarify)&&u.ratio===t)for(var u,a,c,s,l,f=-1,h=u.length,p=n.value;++f<h;){for(a=u[f],c=a.children,s=a.value=0,l=c.length;s<l;++s)a.value+=c[s].value;a.dice?hm(a,e,r,i,r+=(o-r)*a.value/p):mm(a,e,r,e+=(i-e)*a.value/p,o),p-=a.value}else n._squarify=u=fu(t,n,e,r,i,o),u.ratio=t}return n.ratio=function(t){return NM((t=+t)>1?t:1)},n}(xm),Sm=function(t){for(var n,e=-1,r=t.length,i=t[r-1],o=0;++e<r;)n=i,i=t[e],o+=n[1]*i[0]-n[0]*i[1];return o/2},Am=function(t){for(var n,e,r=-1,i=t.length,o=0,u=0,a=t[i-1],c=0;++r<i;)n=a,a=t[r],c+=e=n[0]*a[1]-a[0]*n[1],o+=(n[0]+a[0])*e,u+=(n[1]+a[1])*e;return c*=3,[o/c,u/c]},Nm=function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])-(n[1]-t[1])*(e[0]-t[0])},Em=function(t){if((e=t.length)<3)return null;var n,e,r=new Array(e),i=new Array(e);for(n=0;n<e;++n)r[n]=[+t[n][0],+t[n][1],n];for(r.sort(hu),n=0;n<e;++n)i[n]=[r[n][0],-r[n][1]];var o=pu(r),u=pu(i),a=u[0]===o[0],c=u[u.length-1]===o[o.length-1],s=[];for(n=o.length-1;n>=0;--n)s.push(t[r[o[n]][2]]);for(n=+a;n<u.length-c;++n)s.push(t[r[u[n]][2]]);return s},Cm=function(t,n){for(var e,r,i=t.length,o=t[i-1],u=n[0],a=n[1],c=o[0],s=o[1],l=!1,f=0;f<i;++f)o=t[f],e=o[0],r=o[1],r>a!=s>a&&u<(c-e)*(a-r)/(s-r)+e&&(l=!l),c=e,s=r;return l},zm=function(t){for(var n,e,r=-1,i=t.length,o=t[i-1],u=o[0],a=o[1],c=0;++r<i;)n=u,e=a,o=t[r],u=o[0],a=o[1],n-=u,e-=a,c+=Math.sqrt(n*n+e*e);return c},Dm=[].slice,Lm={};du.prototype=xu.prototype={constructor:du,defer:function(t){if("function"!=typeof t)throw new Error("invalid callback");if(this._call)throw new Error("defer after await");if(null!=this._error)return this;var n=Dm.call(arguments,1);return n.push(t),++this._waiting,this._tasks.push(n),gu(this),this},abort:function(){return null==this._error&&_u(this,new Error("abort")),this},await:function(t){if("function"!=typeof t)throw new Error("invalid callback");if(this._call)throw new Error("multiple await");return this._call=function(n,e){t.apply(null,[n].concat(e))},mu(this),this},awaitAll:function(t){if("function"!=typeof t)throw new Error("invalid callback");if(this._call)throw new Error("multiple await");return this._call=t,mu(this),this}};var Pm=function(){return Math.random()},qm=function EM(t){function n(n,e){return n=null==n?0:+n,e=null==e?1:+e,1===arguments.length?(e=n,n=0):e-=n,function(){return t()*e+n}}return n.source=EM,n}(Pm),Um=function CM(t){function n(n,e){var r,i;return n=null==n?0:+n,e=null==e?1:+e,function(){var o;if(null!=r)o=r,r=null;else do r=2*t()-1,o=2*t()-1,i=r*r+o*o;while(!i||i>1);return n+e*o*Math.sqrt(-2*Math.log(i)/i)}}return n.source=CM,n}(Pm),Rm=function zM(t){function n(){var n=Um.source(t).apply(this,arguments);return function(){return Math.exp(n())}}return n.source=zM,n}(Pm),Om=function DM(t){function n(n){return function(){for(var e=0,r=0;r<n;++r)e+=t();return e}}return n.source=DM,n}(Pm),Fm=function LM(t){function n(n){var e=Om.source(t)(n);return function(){return e()/n}}return n.source=LM,n}(Pm),Ym=function PM(t){function n(n){return function(){return-Math.log(1-t())/n}}return n.source=PM,n}(Pm),Im=function(t,n){function e(t){var n,e=s.status;if(!e&&wu(s)||e>=200&&e<300||304===e){if(o)try{n=o.call(r,s)}catch(i){return void a.call("error",r,i)}else n=s;a.call("load",r,n)}else a.call("error",r,t)}var r,i,o,u,a=g("beforesend","progress","load","error"),c=He(),s=new XMLHttpRequest,l=null,f=null,h=0;if("undefined"==typeof XDomainRequest||"withCredentials"in s||!/^(http(s)?:)?\/\//.test(t)||(s=new XDomainRequest),"onload"in s?s.onload=s.onerror=s.ontimeout=e:s.onreadystatechange=function(t){s.readyState>3&&e(t)},s.onprogress=function(t){a.call("progress",r,t)},r={header:function(t,n){return t=(t+"").toLowerCase(),arguments.length<2?c.get(t):(null==n?c.remove(t):c.set(t,n+""),r)},mimeType:function(t){return arguments.length?(i=null==t?null:t+"",r):i},responseType:function(t){return arguments.length?(u=t,r):u},timeout:function(t){return arguments.length?(h=+t,r):h},user:function(t){return arguments.length<1?l:(l=null==t?null:t+"",r)},password:function(t){return arguments.length<1?f:(f=null==t?null:t+"",r)},response:function(t){return o=t,r},get:function(t,n){return r.send("GET",t,n)},post:function(t,n){return r.send("POST",t,n)},send:function(n,e,o){return s.open(n,t,!0,l,f),null==i||c.has("accept")||c.set("accept",i+",*/*"),s.setRequestHeader&&c.each(function(t,n){s.setRequestHeader(n,t)}),null!=i&&s.overrideMimeType&&s.overrideMimeType(i),null!=u&&(s.responseType=u),h>0&&(s.timeout=h),null==o&&"function"==typeof e&&(o=e,e=null),null!=o&&1===o.length&&(o=bu(o)),null!=o&&r.on("error",o).on("load",function(t){o(null,t)}),a.call("beforesend",r,s),s.send(null==e?null:e),r},abort:function(){return s.abort(),r},on:function(){var t=a.on.apply(a,arguments);return t===a?r:t}},null!=n){if("function"!=typeof n)throw new Error("invalid callback: "+n);return r.get(n)}return r},jm=function(t,n){return function(e,r){var i=Im(e).mimeType(t).response(n);if(null!=r){if("function"!=typeof r)throw new Error("invalid callback: "+r);return i.get(r)}return i}},Hm=jm("text/html",function(t){return document.createRange().createContextualFragment(t.responseText)}),Bm=jm("application/json",function(t){return JSON.parse(t.responseText)}),Xm=jm("text/plain",function(t){return t.responseText}),Vm=jm("application/xml",function(t){var n=t.responseXML;if(!n)throw new Error("parse error");return n}),Zm=function(t,n){return function(e,r,i){arguments.length<3&&(i=r,r=null);var o=Im(e).mimeType(t);return o.row=function(t){return arguments.length?o.response(Mu(n,r=t)):r},o.row(r),i?o.get(i):o}},$m=Zm("text/csv",sg),Wm=Zm("text/tab-separated-values",dg),Gm=Array.prototype,Jm=Gm.map,Qm=Gm.slice,Km={name:"implicit"},tx=function(t){return function(){return t}},nx=function(t){return+t},ex=[0,1],rx=function(n,e,r){var o,u=n[0],a=n[n.length-1],c=i(u,a,null==e?10:e);switch(r=pr(null==r?",f":r),r.type){case"s":var s=Math.max(Math.abs(u),Math.abs(a));return null!=r.precision||isNaN(o=iv(c,s))||(r.precision=o),t.formatPrefix(r,s);case"":case"e":case"g":case"p":case"r":null!=r.precision||isNaN(o=ov(c,Math.max(Math.abs(u),Math.abs(a))))||(r.precision=o-("e"===r.type));break;case"f":case"%":null!=r.precision||isNaN(o=rv(c))||(r.precision=o-2*("%"===r.type))}return t.format(r)},ix=function(t,n){t=t.slice();var e,r=0,i=t.length-1,o=t[r],u=t[i];return u<o&&(e=r,r=i,i=e,e=o,o=u,u=e),t[r]=n.floor(o),t[i]=n.ceil(u),t},ox=new Date,ux=new Date,ax=Ju(function(){},function(t,n){t.setTime(+t+n)},function(t,n){return n-t});ax.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?Ju(function(n){n.setTime(Math.floor(n/t)*t)},function(n,e){n.setTime(+n+e*t)},function(n,e){return(e-n)/t}):ax:null};var cx=ax.range,sx=1e3,lx=6e4,fx=36e5,hx=864e5,px=6048e5,dx=Ju(function(t){t.setTime(Math.floor(t/sx)*sx)},function(t,n){t.setTime(+t+n*sx)},function(t,n){return(n-t)/sx},function(t){return t.getUTCSeconds()}),gx=dx.range,vx=Ju(function(t){t.setTime(Math.floor(t/lx)*lx)},function(t,n){t.setTime(+t+n*lx)},function(t,n){return(n-t)/lx},function(t){return t.getMinutes()}),yx=vx.range,_x=Ju(function(t){var n=t.getTimezoneOffset()*lx%fx;n<0&&(n+=fx),t.setTime(Math.floor((+t-n)/fx)*fx+n)},function(t,n){t.setTime(+t+n*fx)},function(t,n){return(n-t)/fx},function(t){return t.getHours()}),mx=_x.range,xx=Ju(function(t){t.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*lx)/hx},function(t){return t.getDate()-1}),bx=xx.range,wx=Qu(0),Mx=Qu(1),kx=Qu(2),Tx=Qu(3),Sx=Qu(4),Ax=Qu(5),Nx=Qu(6),Ex=wx.range,Cx=Mx.range,zx=kx.range,Dx=Tx.range,Lx=Sx.range,Px=Ax.range,qx=Nx.range,Ux=Ju(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,n){t.setMonth(t.getMonth()+n)},function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())},function(t){return t.getMonth()}),Rx=Ux.range,Ox=Ju(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t,n){return n.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()});Ox.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Ju(function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,e){n.setFullYear(n.getFullYear()+e*t)}):null};var Fx=Ox.range,Yx=Ju(function(t){t.setUTCSeconds(0,0)},function(t,n){t.setTime(+t+n*lx)},function(t,n){return(n-t)/lx},function(t){return t.getUTCMinutes()}),Ix=Yx.range,jx=Ju(function(t){t.setUTCMinutes(0,0,0)},function(t,n){t.setTime(+t+n*fx)},function(t,n){return(n-t)/fx},function(t){return t.getUTCHours()}),Hx=jx.range,Bx=Ju(function(t){t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+n)},function(t,n){return(n-t)/hx},function(t){return t.getUTCDate()-1}),Xx=Bx.range,Vx=Ku(0),Zx=Ku(1),$x=Ku(2),Wx=Ku(3),Gx=Ku(4),Jx=Ku(5),Qx=Ku(6),Kx=Vx.range,tb=Zx.range,nb=$x.range,eb=Wx.range,rb=Gx.range,ib=Jx.range,ob=Qx.range,ub=Ju(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCMonth(t.getUTCMonth()+n)},function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()}),ab=ub.range,cb=Ju(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)},function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()});cb.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Ju(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)}):null};var sb,lb=cb.range,fb={"-":"",_:" ",0:"0"},hb=/^\s*\d+/,pb=/^%/,db=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;Ja({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var gb="%Y-%m-%dT%H:%M:%S.%LZ",vb=Date.prototype.toISOString?Qa:t.utcFormat(gb),yb=+new Date("2000-01-01T00:00:00.000Z")?Ka:t.utcParse(gb),_b=1e3,mb=60*_b,xb=60*mb,bb=24*xb,wb=7*bb,Mb=30*bb,kb=365*bb,Tb=function(){return ec(Ox,Ux,wx,xx,_x,vx,dx,ax,t.timeFormat).domain([new Date(2e3,0,1),new Date(2e3,0,2)])},Sb=function(){return ec(cb,ub,Vx,Bx,jx,Yx,dx,ax,t.utcFormat).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)])},Ab=function(t){return t.match(/.{6}/g).map(function(t){return"#"+t})},Nb=Ab("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),Eb=Ab("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6"),Cb=Ab("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9"),zb=Ab("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5"),Db=rp($t(300,.5,0),$t(-240,.5,1)),Lb=rp($t(-100,.75,.35),$t(80,1.5,.8)),Pb=rp($t(260,.75,.35),$t(80,1.5,.8)),qb=$t(),Ub=function(t){(t<0||t>1)&&(t-=Math.floor(t));var n=Math.abs(t-.5);return qb.h=360*t-100,qb.s=1.5-1.5*n,qb.l=.8-.9*n,qb+""},Rb=rc(Ab("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),Ob=rc(Ab("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),Fb=rc(Ab("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),Yb=rc(Ab("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921")),Ib=function(t){return function(){return t}},jb=Math.abs,Hb=Math.atan2,Bb=Math.cos,Xb=Math.max,Vb=Math.min,Zb=Math.sin,$b=Math.sqrt,Wb=1e-12,Gb=Math.PI,Jb=Gb/2,Qb=2*Gb,Kb=function(){function t(){var t,s,l=+n.apply(this,arguments),f=+e.apply(this,arguments),h=o.apply(this,arguments)-Jb,p=u.apply(this,arguments)-Jb,d=jb(p-h),g=p>h;if(c||(c=t=Ue()),f<l&&(s=f,f=l,l=s),f>Wb)if(d>Qb-Wb)c.moveTo(f*Bb(h),f*Zb(h)),c.arc(0,0,f,h,p,!g),l>Wb&&(c.moveTo(l*Bb(p),l*Zb(p)),c.arc(0,0,l,p,h,g));else{var v,y,_=h,m=p,x=h,b=p,w=d,M=d,k=a.apply(this,arguments)/2,T=k>Wb&&(i?+i.apply(this,arguments):$b(l*l+f*f)),S=Vb(jb(f-l)/2,+r.apply(this,arguments)),A=S,N=S;if(T>Wb){var E=uc(T/l*Zb(k)),C=uc(T/f*Zb(k));(w-=2*E)>Wb?(E*=g?1:-1,x+=E,b-=E):(w=0,x=b=(h+p)/2),(M-=2*C)>Wb?(C*=g?1:-1,_+=C,m-=C):(M=0,_=m=(h+p)/2)}var z=f*Bb(_),D=f*Zb(_),L=l*Bb(b),P=l*Zb(b);if(S>Wb){
var q=f*Bb(m),U=f*Zb(m),R=l*Bb(x),O=l*Zb(x);if(d<Gb){var F=w>Wb?hc(z,D,R,O,q,U,L,P):[L,P],Y=z-F[0],I=D-F[1],j=q-F[0],H=U-F[1],B=1/Zb(oc((Y*j+I*H)/($b(Y*Y+I*I)*$b(j*j+H*H)))/2),X=$b(F[0]*F[0]+F[1]*F[1]);A=Vb(S,(l-X)/(B-1)),N=Vb(S,(f-X)/(B+1))}}M>Wb?N>Wb?(v=pc(R,O,z,D,f,N,g),y=pc(q,U,L,P,f,N,g),c.moveTo(v.cx+v.x01,v.cy+v.y01),N<S?c.arc(v.cx,v.cy,N,Hb(v.y01,v.x01),Hb(y.y01,y.x01),!g):(c.arc(v.cx,v.cy,N,Hb(v.y01,v.x01),Hb(v.y11,v.x11),!g),c.arc(0,0,f,Hb(v.cy+v.y11,v.cx+v.x11),Hb(y.cy+y.y11,y.cx+y.x11),!g),c.arc(y.cx,y.cy,N,Hb(y.y11,y.x11),Hb(y.y01,y.x01),!g))):(c.moveTo(z,D),c.arc(0,0,f,_,m,!g)):c.moveTo(z,D),l>Wb&&w>Wb?A>Wb?(v=pc(L,P,q,U,l,-A,g),y=pc(z,D,R,O,l,-A,g),c.lineTo(v.cx+v.x01,v.cy+v.y01),A<S?c.arc(v.cx,v.cy,A,Hb(v.y01,v.x01),Hb(y.y01,y.x01),!g):(c.arc(v.cx,v.cy,A,Hb(v.y01,v.x01),Hb(v.y11,v.x11),!g),c.arc(0,0,l,Hb(v.cy+v.y11,v.cx+v.x11),Hb(y.cy+y.y11,y.cx+y.x11),g),c.arc(y.cx,y.cy,A,Hb(y.y11,y.x11),Hb(y.y01,y.x01),!g))):c.arc(0,0,l,b,x,g):c.lineTo(L,P)}else c.moveTo(0,0);if(c.closePath(),t)return c=null,t+""||null}var n=ac,e=cc,r=Ib(0),i=null,o=sc,u=lc,a=fc,c=null;return t.centroid=function(){var t=(+n.apply(this,arguments)+ +e.apply(this,arguments))/2,r=(+o.apply(this,arguments)+ +u.apply(this,arguments))/2-Gb/2;return[Bb(r)*t,Zb(r)*t]},t.innerRadius=function(e){return arguments.length?(n="function"==typeof e?e:Ib(+e),t):n},t.outerRadius=function(n){return arguments.length?(e="function"==typeof n?n:Ib(+n),t):e},t.cornerRadius=function(n){return arguments.length?(r="function"==typeof n?n:Ib(+n),t):r},t.padRadius=function(n){return arguments.length?(i=null==n?null:"function"==typeof n?n:Ib(+n),t):i},t.startAngle=function(n){return arguments.length?(o="function"==typeof n?n:Ib(+n),t):o},t.endAngle=function(n){return arguments.length?(u="function"==typeof n?n:Ib(+n),t):u},t.padAngle=function(n){return arguments.length?(a="function"==typeof n?n:Ib(+n),t):a},t.context=function(n){return arguments.length?(c=null==n?null:n,t):c},t};dc.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._context.lineTo(t,n)}}};var tw=function(t){return new dc(t)},nw=function(){function t(t){var a,c,s,l=t.length,f=!1;for(null==i&&(u=o(s=Ue())),a=0;a<=l;++a)!(a<l&&r(c=t[a],a,t))===f&&((f=!f)?u.lineStart():u.lineEnd()),f&&u.point(+n(c,a,t),+e(c,a,t));if(s)return u=null,s+""||null}var n=gc,e=vc,r=Ib(!0),i=null,o=tw,u=null;return t.x=function(e){return arguments.length?(n="function"==typeof e?e:Ib(+e),t):n},t.y=function(n){return arguments.length?(e="function"==typeof n?n:Ib(+n),t):e},t.defined=function(n){return arguments.length?(r="function"==typeof n?n:Ib(!!n),t):r},t.curve=function(n){return arguments.length?(o=n,null!=i&&(u=o(i)),t):o},t.context=function(n){return arguments.length?(null==n?i=u=null:u=o(i=n),t):i},t},ew=function(){function t(t){var n,l,f,h,p,d=t.length,g=!1,v=new Array(d),y=new Array(d);for(null==a&&(s=c(p=Ue())),n=0;n<=d;++n){if(!(n<d&&u(h=t[n],n,t))===g)if(g=!g)l=n,s.areaStart(),s.lineStart();else{for(s.lineEnd(),s.lineStart(),f=n-1;f>=l;--f)s.point(v[f],y[f]);s.lineEnd(),s.areaEnd()}g&&(v[n]=+e(h,n,t),y[n]=+i(h,n,t),s.point(r?+r(h,n,t):v[n],o?+o(h,n,t):y[n]))}if(p)return s=null,p+""||null}function n(){return nw().defined(u).curve(c).context(a)}var e=gc,r=null,i=Ib(0),o=vc,u=Ib(!0),a=null,c=tw,s=null;return t.x=function(n){return arguments.length?(e="function"==typeof n?n:Ib(+n),r=null,t):e},t.x0=function(n){return arguments.length?(e="function"==typeof n?n:Ib(+n),t):e},t.x1=function(n){return arguments.length?(r=null==n?null:"function"==typeof n?n:Ib(+n),t):r},t.y=function(n){return arguments.length?(i="function"==typeof n?n:Ib(+n),o=null,t):i},t.y0=function(n){return arguments.length?(i="function"==typeof n?n:Ib(+n),t):i},t.y1=function(n){return arguments.length?(o=null==n?null:"function"==typeof n?n:Ib(+n),t):o},t.lineX0=t.lineY0=function(){return n().x(e).y(i)},t.lineY1=function(){return n().x(e).y(o)},t.lineX1=function(){return n().x(r).y(i)},t.defined=function(n){return arguments.length?(u="function"==typeof n?n:Ib(!!n),t):u},t.curve=function(n){return arguments.length?(c=n,null!=a&&(s=c(a)),t):c},t.context=function(n){return arguments.length?(null==n?a=s=null:s=c(a=n),t):a},t},rw=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},iw=function(t){return t},ow=function(){function t(t){var a,c,s,l,f,h=t.length,p=0,d=new Array(h),g=new Array(h),v=+i.apply(this,arguments),y=Math.min(Qb,Math.max(-Qb,o.apply(this,arguments)-v)),_=Math.min(Math.abs(y)/h,u.apply(this,arguments)),m=_*(y<0?-1:1);for(a=0;a<h;++a)(f=g[d[a]=a]=+n(t[a],a,t))>0&&(p+=f);for(null!=e?d.sort(function(t,n){return e(g[t],g[n])}):null!=r&&d.sort(function(n,e){return r(t[n],t[e])}),a=0,s=p?(y-h*m)/p:0;a<h;++a,v=l)c=d[a],f=g[c],l=v+(f>0?f*s:0)+m,g[c]={data:t[c],index:a,value:f,startAngle:v,endAngle:l,padAngle:_};return g}var n=iw,e=rw,r=null,i=Ib(0),o=Ib(Qb),u=Ib(0);return t.value=function(e){return arguments.length?(n="function"==typeof e?e:Ib(+e),t):n},t.sortValues=function(n){return arguments.length?(e=n,r=null,t):e},t.sort=function(n){return arguments.length?(r=n,e=null,t):r},t.startAngle=function(n){return arguments.length?(i="function"==typeof n?n:Ib(+n),t):i},t.endAngle=function(n){return arguments.length?(o="function"==typeof n?n:Ib(+n),t):o},t.padAngle=function(n){return arguments.length?(u="function"==typeof n?n:Ib(+n),t):u},t},uw=_c(tw);yc.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,n){this._curve.point(n*Math.sin(t),n*-Math.cos(t))}};var aw=function(){return mc(nw().curve(uw))},cw=function(){var t=ew().curve(uw),n=t.curve,e=t.lineX0,r=t.lineX1,i=t.lineY0,o=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return mc(e())},delete t.lineX0,t.lineEndAngle=function(){return mc(r())},delete t.lineX1,t.lineInnerRadius=function(){return mc(i())},delete t.lineY0,t.lineOuterRadius=function(){return mc(o())},delete t.lineY1,t.curve=function(t){return arguments.length?n(_c(t)):n()._curve},t},sw=Array.prototype.slice,lw=function(t,n){return[(n=+n)*Math.cos(t-=Math.PI/2),n*Math.sin(t)]},fw={draw:function(t,n){var e=Math.sqrt(n/Gb);t.moveTo(e,0),t.arc(0,0,e,0,Qb)}},hw={draw:function(t,n){var e=Math.sqrt(n/5)/2;t.moveTo(-3*e,-e),t.lineTo(-e,-e),t.lineTo(-e,-3*e),t.lineTo(e,-3*e),t.lineTo(e,-e),t.lineTo(3*e,-e),t.lineTo(3*e,e),t.lineTo(e,e),t.lineTo(e,3*e),t.lineTo(-e,3*e),t.lineTo(-e,e),t.lineTo(-3*e,e),t.closePath()}},pw=Math.sqrt(1/3),dw=2*pw,gw={draw:function(t,n){var e=Math.sqrt(n/dw),r=e*pw;t.moveTo(0,-e),t.lineTo(r,0),t.lineTo(0,e),t.lineTo(-r,0),t.closePath()}},vw=.8908130915292852,yw=Math.sin(Gb/10)/Math.sin(7*Gb/10),_w=Math.sin(Qb/10)*yw,mw=-Math.cos(Qb/10)*yw,xw={draw:function(t,n){var e=Math.sqrt(n*vw),r=_w*e,i=mw*e;t.moveTo(0,-e),t.lineTo(r,i);for(var o=1;o<5;++o){var u=Qb*o/5,a=Math.cos(u),c=Math.sin(u);t.lineTo(c*e,-a*e),t.lineTo(a*r-c*i,c*r+a*i)}t.closePath()}},bw={draw:function(t,n){var e=Math.sqrt(n),r=-e/2;t.rect(r,r,e,e)}},ww=Math.sqrt(3),Mw={draw:function(t,n){var e=-Math.sqrt(n/(3*ww));t.moveTo(0,2*e),t.lineTo(-ww*e,-e),t.lineTo(ww*e,-e),t.closePath()}},kw=-.5,Tw=Math.sqrt(3)/2,Sw=1/Math.sqrt(12),Aw=3*(Sw/2+1),Nw={draw:function(t,n){var e=Math.sqrt(n/Aw),r=e/2,i=e*Sw,o=r,u=e*Sw+e,a=-o,c=u;t.moveTo(r,i),t.lineTo(o,u),t.lineTo(a,c),t.lineTo(kw*r-Tw*i,Tw*r+kw*i),t.lineTo(kw*o-Tw*u,Tw*o+kw*u),t.lineTo(kw*a-Tw*c,Tw*a+kw*c),t.lineTo(kw*r+Tw*i,kw*i-Tw*r),t.lineTo(kw*o+Tw*u,kw*u-Tw*o),t.lineTo(kw*a+Tw*c,kw*c-Tw*a),t.closePath()}},Ew=[fw,hw,gw,bw,xw,Mw,Nw],Cw=function(){function t(){var t;if(r||(r=t=Ue()),n.apply(this,arguments).draw(r,+e.apply(this,arguments)),t)return r=null,t+""||null}var n=Ib(fw),e=Ib(64),r=null;return t.type=function(e){return arguments.length?(n="function"==typeof e?e:Ib(e),t):n},t.size=function(n){return arguments.length?(e="function"==typeof n?n:Ib(+n),t):e},t.context=function(n){return arguments.length?(r=null==n?null:n,t):r},t},zw=function(){};Cc.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:Ec(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:Ec(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Dw=function(t){return new Cc(t)};zc.prototype={areaStart:zw,areaEnd:zw,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x2=t,this._y2=n;break;case 1:this._point=2,this._x3=t,this._y3=n;break;case 2:this._point=3,this._x4=t,this._y4=n,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+n)/6);break;default:Ec(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Lw=function(t){return new zc(t)};Dc.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var e=(this._x0+4*this._x1+t)/6,r=(this._y0+4*this._y1+n)/6;this._line?this._context.lineTo(e,r):this._context.moveTo(e,r);break;case 3:this._point=4;default:Ec(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Pw=function(t){return new Dc(t)};Lc.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,n=this._y,e=t.length-1;if(e>0)for(var r,i=t[0],o=n[0],u=t[e]-i,a=n[e]-o,c=-1;++c<=e;)r=c/e,this._basis.point(this._beta*t[c]+(1-this._beta)*(i+r*u),this._beta*n[c]+(1-this._beta)*(o+r*a));this._x=this._y=null,this._basis.lineEnd()},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var qw=function qM(t){function n(n){return 1===t?new Cc(n):new Lc(n,t)}return n.beta=function(t){return qM(+t)},n}(.85);qc.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:Pc(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2,this._x1=t,this._y1=n;break;case 2:this._point=3;default:Pc(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Uw=function UM(t){function n(n){return new qc(n,t)}return n.tension=function(t){return UM(+t)},n}(0);Uc.prototype={areaStart:zw,areaEnd:zw,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Pc(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Rw=function RM(t){function n(n){return new Uc(n,t)}return n.tension=function(t){return RM(+t)},n}(0);Rc.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Pc(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Ow=function OM(t){function n(n){return new Rc(n,t)}return n.tension=function(t){return OM(+t)},n}(0);Fc.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3;default:Oc(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Fw=function FM(t){function n(n){return t?new Fc(n,t):new qc(n,0)}return n.alpha=function(t){return FM(+t)},n}(.5);Yc.prototype={areaStart:zw,areaEnd:zw,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Oc(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Yw=function YM(t){function n(n){return t?new Yc(n,t):new Uc(n,0)}return n.alpha=function(t){return YM(+t)},n}(.5);Ic.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Oc(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Iw=function IM(t){function n(n){return t?new Ic(n,t):new Rc(n,0)}return n.alpha=function(t){return IM(+t)},n}(.5);jc.prototype={areaStart:zw,areaEnd:zw,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,n){t=+t,n=+n,this._point?this._context.lineTo(t,n):(this._point=1,this._context.moveTo(t,n))}};var jw=function(t){return new jc(t)};Zc.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:Vc(this,this._t0,Xc(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){var e=NaN;if(t=+t,n=+n,t!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,Vc(this,Xc(this,e=Bc(this,t,n)),e);break;default:Vc(this,this._t0,e=Bc(this,t,n))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n,this._t0=e}}},($c.prototype=Object.create(Zc.prototype)).point=function(t,n){Zc.prototype.point.call(this,n,t)},Wc.prototype={moveTo:function(t,n){this._context.moveTo(n,t)},closePath:function(){this._context.closePath()},lineTo:function(t,n){this._context.lineTo(n,t)},bezierCurveTo:function(t,n,e,r,i,o){this._context.bezierCurveTo(n,t,r,e,o,i)}},Qc.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,n=this._y,e=t.length;if(e)if(this._line?this._context.lineTo(t[0],n[0]):this._context.moveTo(t[0],n[0]),2===e)this._context.lineTo(t[1],n[1]);else for(var r=Kc(t),i=Kc(n),o=0,u=1;u<e;++o,++u)this._context.bezierCurveTo(r[0][o],i[0][o],r[1][o],i[1][o],t[u],n[u]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var Hw=function(t){return new Qc(t)};ts.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(t,n);else{var e=this._x*(1-this._t)+t*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,n)}}this._x=t,this._y=n}};var Bw=function(t){return new ts(t,.5)},Xw=function(t,n){if((i=t.length)>1)for(var e,r,i,o=1,u=t[n[0]],a=u.length;o<i;++o)for(r=u,u=t[n[o]],e=0;e<a;++e)u[e][1]+=u[e][0]=isNaN(r[e][1])?r[e][0]:r[e][1]},Vw=function(t){for(var n=t.length,e=new Array(n);--n>=0;)e[n]=n;return e},Zw=function(){function t(t){var o,u,a=n.apply(this,arguments),c=t.length,s=a.length,l=new Array(s);for(o=0;o<s;++o){for(var f,h=a[o],p=l[o]=new Array(c),d=0;d<c;++d)p[d]=f=[0,+i(t[d],h,d,t)],f.data=t[d];p.key=h}for(o=0,u=e(l);o<s;++o)l[u[o]].index=o;return r(l,u),l}var n=Ib([]),e=Vw,r=Xw,i=rs;return t.keys=function(e){return arguments.length?(n="function"==typeof e?e:Ib(sw.call(e)),t):n},t.value=function(n){return arguments.length?(i="function"==typeof n?n:Ib(+n),t):i},t.order=function(n){return arguments.length?(e=null==n?Vw:"function"==typeof n?n:Ib(sw.call(n)),t):e},t.offset=function(n){return arguments.length?(r=null==n?Xw:n,t):r},t},$w=function(t,n){if((r=t.length)>0){for(var e,r,i,o=0,u=t[0].length;o<u;++o){for(i=e=0;e<r;++e)i+=t[e][o][1]||0;if(i)for(e=0;e<r;++e)t[e][o][1]/=i}Xw(t,n)}},Ww=function(t,n){if((a=t.length)>1)for(var e,r,i,o,u,a,c=0,s=t[n[0]].length;c<s;++c)for(o=u=0,e=0;e<a;++e)(i=(r=t[n[e]][c])[1]-r[0])>=0?(r[0]=o,r[1]=o+=i):i<0?(r[1]=u,r[0]=u+=i):r[0]=o},Gw=function(t,n){if((e=t.length)>0){for(var e,r=0,i=t[n[0]],o=i.length;r<o;++r){for(var u=0,a=0;u<e;++u)a+=t[u][r][1]||0;i[r][1]+=i[r][0]=-a/2}Xw(t,n)}},Jw=function(t,n){if((i=t.length)>0&&(r=(e=t[n[0]]).length)>0){for(var e,r,i,o=0,u=1;u<r;++u){for(var a=0,c=0,s=0;a<i;++a){for(var l=t[n[a]],f=l[u][1]||0,h=l[u-1][1]||0,p=(f-h)/2,d=0;d<a;++d){var g=t[n[d]],v=g[u][1]||0,y=g[u-1][1]||0;p+=v-y}c+=f,s+=p*f}e[u-1][1]+=e[u-1][0]=o,c&&(o-=s/c)}e[u-1][1]+=e[u-1][0]=o,Xw(t,n)}},Qw=function(t){var n=t.map(is);return Vw(t).sort(function(t,e){return n[t]-n[e]})},Kw=function(t){return Qw(t).reverse()},tM=function(t){var n,e,r=t.length,i=t.map(is),o=Vw(t).sort(function(t,n){return i[n]-i[t]}),u=0,a=0,c=[],s=[];for(n=0;n<r;++n)e=o[n],u<a?(u+=i[e],c.push(e)):(a+=i[e],s.push(e));return s.reverse().concat(c)},nM=function(t){return Vw(t).reverse()},eM=function(t){return function(){return t}};as.prototype={constructor:as,insert:function(t,n){var e,r,i;if(t){if(n.P=t,n.N=t.N,t.N&&(t.N.P=n),t.N=n,t.R){for(t=t.R;t.L;)t=t.L;t.L=n}else t.R=n;e=t}else this._?(t=fs(this._),n.P=null,n.N=t,t.P=t.L=n,e=t):(n.P=n.N=null,this._=n,e=null);for(n.L=n.R=null,n.U=e,n.C=!0,t=n;e&&e.C;)r=e.U,e===r.L?(i=r.R,i&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.R&&(ss(this,e),t=e,e=t.U),e.C=!1,r.C=!0,ls(this,r))):(i=r.L,i&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.L&&(ls(this,e),t=e,e=t.U),e.C=!1,r.C=!0,ss(this,r))),e=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var n,e,r,i=t.U,o=t.L,u=t.R;if(e=o?u?fs(u):o:u,i?i.L===t?i.L=e:i.R=e:this._=e,o&&u?(r=e.C,e.C=t.C,e.L=o,o.U=e,e!==u?(i=e.U,e.U=t.U,t=e.R,i.L=t,e.R=u,u.U=e):(e.U=i,i=e,t=e.R)):(r=t.C,t=e),t&&(t.U=i),!r){if(t&&t.C)return void(t.C=!1);do{if(t===this._)break;if(t===i.L){if(n=i.R,n.C&&(n.C=!1,i.C=!0,ss(this,i),n=i.R),n.L&&n.L.C||n.R&&n.R.C){n.R&&n.R.C||(n.L.C=!1,n.C=!0,ls(this,n),n=i.R),n.C=i.C,i.C=n.R.C=!1,ss(this,i),t=this._;break}}else if(n=i.L,n.C&&(n.C=!1,i.C=!0,ls(this,i),n=i.L),n.L&&n.L.C||n.R&&n.R.C){n.L&&n.L.C||(n.R.C=!1,n.C=!0,ss(this,n),n=i.L),n.C=i.C,i.C=n.L.C=!1,ls(this,i),t=this._;break}n.C=!0,t=i,i=i.U}while(!t.C);t&&(t.C=!1)}}};var rM,iM,oM,uM,aM,cM=[],sM=[],lM=1e-6,fM=1e-12;Us.prototype={constructor:Us,polygons:function(){var t=this.edges;return this.cells.map(function(n){var e=n.halfedges.map(function(e){return xs(n,t[e])});return e.data=n.site.data,e})},triangles:function(){var t=[],n=this.edges;return this.cells.forEach(function(e,r){if(o=(i=e.halfedges).length)for(var i,o,u,a=e.site,c=-1,s=n[i[o-1]],l=s.left===a?s.right:s.left;++c<o;)u=l,s=n[i[c]],l=s.left===a?s.right:s.left,u&&l&&r<u.index&&r<l.index&&Ps(a,u,l)<0&&t.push([a.data,u.data,l.data])}),t},links:function(){return this.edges.filter(function(t){return t.right}).map(function(t){return{source:t.left.data,target:t.right.data}})},find:function(t,n,e){for(var r,i,o=this,u=o._found||0,a=o.cells.length;!(i=o.cells[u]);)if(++u>=a)return null;var c=t-i.site[0],s=n-i.site[1],l=c*c+s*s;do i=o.cells[r=u],u=null,i.halfedges.forEach(function(e){var r=o.edges[e],a=r.left;if(a!==i.site&&a||(a=r.right)){var c=t-a[0],s=n-a[1],f=c*c+s*s;f<l&&(l=f,u=a.index)}});while(null!==u);return o._found=r,null==e||l<=e*e?i.site:null}};var hM=function(){function t(t){return new Us(t.map(function(r,i){var o=[Math.round(n(r,i,t)/lM)*lM,Math.round(e(r,i,t)/lM)*lM];return o.index=i,o.data=r,o}),r)}var n=os,e=us,r=null;return t.polygons=function(n){return t(n).polygons()},t.links=function(n){return t(n).links()},t.triangles=function(n){return t(n).triangles()},t.x=function(e){return arguments.length?(n="function"==typeof e?e:eM(+e),t):n},t.y=function(n){return arguments.length?(e="function"==typeof n?n:eM(+n),t):e},t.extent=function(n){return arguments.length?(r=null==n?null:[[+n[0][0],+n[0][1]],[+n[1][0],+n[1][1]]],t):r&&[[r[0][0],r[0][1]],[r[1][0],r[1][1]]]},t.size=function(n){return arguments.length?(r=null==n?null:[[0,0],[+n[0],+n[1]]],t):r&&[r[1][0]-r[0][0],r[1][1]-r[0][1]]},t},pM=function(t){return function(){return t}};Os.prototype={constructor:Os,scale:function(t){return 1===t?this:new Os(this.k*t,this.x,this.y)},translate:function(t,n){return 0===t&0===n?this:new Os(this.k,this.x+this.k*t,this.y+this.k*n)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var dM=new Os(1,0,0);Fs.prototype=Os.prototype;var gM=function(){t.event.preventDefault(),t.event.stopImmediatePropagation()},vM=function(){function n(t){t.on("wheel.zoom",s).on("mousedown.zoom",l).on("dblclick.zoom",f).on("touchstart.zoom",h).on("touchmove.zoom",p).on("touchend.zoom touchcancel.zoom",d).style("-webkit-tap-highlight-color","rgba(0,0,0,0)").property("__zoom",Hs)}function e(t,n){return n=Math.max(x,Math.min(b,n)),n===t.k?t:new Os(n,t.x,t.y)}function r(t,n,e){var r=n[0]-e[0]*t.k,i=n[1]-e[1]*t.k;return r===t.x&&i===t.y?t:new Os(t.k,r,i)}function i(t,n){var e=t.invertX(n[0][0])-w,r=t.invertX(n[1][0])-M,i=t.invertY(n[0][1])-k,o=t.invertY(n[1][1])-T;return t.translate(r>e?(e+r)/2:Math.min(0,e)||Math.max(0,r),o>i?(i+o)/2:Math.min(0,i)||Math.max(0,o))}function o(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function u(t,n,e){t.on("start.zoom",function(){a(this,arguments).start()}).on("interrupt.zoom end.zoom",function(){a(this,arguments).end()}).tween("zoom",function(){var t=this,r=arguments,i=a(t,r),u=m.apply(t,r),c=e||o(u),s=Math.max(u[1][0]-u[0][0],u[1][1]-u[0][1]),l=t.__zoom,f="function"==typeof n?n.apply(t,r):n,h=A(l.invert(c).concat(s/l.k),f.invert(c).concat(s/f.k));return function(t){if(1===t)t=f;else{var n=h(t),e=s/n[2];t=new Os(e,c[0]-n[0]*e,c[1]-n[1]*e)}i.zoom(null,t)}})}function a(t,n){for(var e,r=0,i=N.length;r<i;++r)if((e=N[r]).that===t)return e;return new c(t,n)}function c(t,n){this.that=t,this.args=n,this.index=-1,this.active=0,this.extent=m.apply(t,n)}function s(){function n(){o.wheel=null,o.end()}if(_.apply(this,arguments)){var o=a(this,arguments),u=this.__zoom,c=Math.max(x,Math.min(b,u.k*Math.pow(2,-t.event.deltaY*(t.event.deltaMode?120:1)/500))),s=Jl(this);if(o.wheel)o.mouse[0][0]===s[0]&&o.mouse[0][1]===s[1]||(o.mouse[1]=u.invert(o.mouse[0]=s)),clearTimeout(o.wheel);else{if(u.k===c)return;o.mouse=[s,u.invert(s)],Sp(this),o.start()}gM(),o.wheel=setTimeout(n,D),o.zoom("mouse",i(r(e(u,c),o.mouse[0],o.mouse[1]),o.extent))}}function l(){function n(){if(gM(),!o.moved){var n=t.event.clientX-s,e=t.event.clientY-l;o.moved=n*n+e*e>L}o.zoom("mouse",i(r(o.that.__zoom,o.mouse[0]=Jl(o.that),o.mouse[1]),o.extent))}function e(){u.on("mousemove.zoom mouseup.zoom",null),mt(t.event.view,o.moved),gM(),o.end()}if(!y&&_.apply(this,arguments)){var o=a(this,arguments),u=Pf(t.event.view).on("mousemove.zoom",n,!0).on("mouseup.zoom",e,!0),c=Jl(this),s=t.event.clientX,l=t.event.clientY;Ff(t.event.view),Ys(),o.mouse=[c,this.__zoom.invert(c)],Sp(this),o.start()}}function f(){if(_.apply(this,arguments)){var o=this.__zoom,a=Jl(this),c=o.invert(a),s=o.k*(t.event.shiftKey?.5:2),l=i(r(e(o,s),a,c),m.apply(this,arguments));gM(),S>0?Pf(this).transition().duration(S).call(u,l,a):Pf(this).call(n.transform,l)}}function h(){if(_.apply(this,arguments)){var n,e,r,i,o=a(this,arguments),u=t.event.changedTouches,c=u.length;for(Ys(),e=0;e<c;++e)r=u[e],i=Uf(this,u,r.identifier),i=[i,this.__zoom.invert(i),r.identifier],o.touch0?o.touch1||(o.touch1=i):(o.touch0=i,n=!0);return v&&(v=clearTimeout(v),!o.touch1)?(o.end(),i=Pf(this).on("dblclick.zoom"),void(i&&i.apply(this,arguments))):void(n&&(v=setTimeout(function(){v=null},z),Sp(this),o.start()))}}function p(){var n,o,u,c,s=a(this,arguments),l=t.event.changedTouches,f=l.length;for(gM(),v&&(v=clearTimeout(v)),n=0;n<f;++n)o=l[n],u=Uf(this,l,o.identifier),s.touch0&&s.touch0[2]===o.identifier?s.touch0[0]=u:s.touch1&&s.touch1[2]===o.identifier&&(s.touch1[0]=u);if(o=s.that.__zoom,s.touch1){var h=s.touch0[0],p=s.touch0[1],d=s.touch1[0],g=s.touch1[1],y=(y=d[0]-h[0])*y+(y=d[1]-h[1])*y,_=(_=g[0]-p[0])*_+(_=g[1]-p[1])*_;o=e(o,Math.sqrt(y/_)),u=[(h[0]+d[0])/2,(h[1]+d[1])/2],c=[(p[0]+g[0])/2,(p[1]+g[1])/2]}else{if(!s.touch0)return;u=s.touch0[0],c=s.touch0[1]}s.zoom("touch",i(r(o,u,c),s.extent))}function d(){var n,e,r=a(this,arguments),i=t.event.changedTouches,o=i.length;for(Ys(),y&&clearTimeout(y),y=setTimeout(function(){y=null},z),n=0;n<o;++n)e=i[n],r.touch0&&r.touch0[2]===e.identifier?delete r.touch0:r.touch1&&r.touch1[2]===e.identifier&&delete r.touch1;r.touch1&&!r.touch0&&(r.touch0=r.touch1,delete r.touch1),r.touch0?r.touch0[1]=this.__zoom.invert(r.touch0[0]):r.end()}var v,y,_=Is,m=js,x=0,b=1/0,w=-b,M=b,k=w,T=M,S=250,A=Jh,N=[],C=g("start","zoom","end"),z=500,D=150,L=0;return n.transform=function(t,n){var e=t.selection?t.selection():t;e.property("__zoom",Hs),t!==e?u(t,n):e.interrupt().each(function(){a(this,arguments).start().zoom(null,"function"==typeof n?n.apply(this,arguments):n).end()})},n.scaleBy=function(t,e){n.scaleTo(t,function(){var t=this.__zoom.k,n="function"==typeof e?e.apply(this,arguments):e;return t*n})},n.scaleTo=function(t,u){n.transform(t,function(){var t=m.apply(this,arguments),n=this.__zoom,a=o(t),c=n.invert(a),s="function"==typeof u?u.apply(this,arguments):u;return i(r(e(n,s),a,c),t)})},n.translateBy=function(t,e,r){n.transform(t,function(){return i(this.__zoom.translate("function"==typeof e?e.apply(this,arguments):e,"function"==typeof r?r.apply(this,arguments):r),m.apply(this,arguments))})},c.prototype={start:function(){return 1===++this.active&&(this.index=N.push(this)-1,this.emit("start")),this},zoom:function(t,n){return this.mouse&&"mouse"!==t&&(this.mouse[1]=n.invert(this.mouse[0])),this.touch0&&"touch"!==t&&(this.touch0[1]=n.invert(this.touch0[0])),this.touch1&&"touch"!==t&&(this.touch1[1]=n.invert(this.touch1[0])),this.that.__zoom=n,this.emit("zoom"),this},end:function(){return 0===--this.active&&(N.splice(this.index,1),this.index=-1,this.emit("end")),this},emit:function(t){E(new Rs(n,t,this.that.__zoom),C.apply,C,[t,this.that,this.args])}},n.filter=function(t){return arguments.length?(_="function"==typeof t?t:pM(!!t),n):_},n.extent=function(t){return arguments.length?(m="function"==typeof t?t:pM([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),n):m},n.scaleExtent=function(t){return arguments.length?(x=+t[0],b=+t[1],n):[x,b]},n.translateExtent=function(t){return arguments.length?(w=+t[0][0],M=+t[1][0],
k=+t[0][1],T=+t[1][1],n):[[w,k],[M,T]]},n.duration=function(t){return arguments.length?(S=+t,n):S},n.interpolate=function(t){return arguments.length?(A=t,n):A},n.on=function(){var t=C.on.apply(C,arguments);return t===C?n:t},n.clickDistance=function(t){return arguments.length?(L=(t=+t)*t,n):Math.sqrt(L)},n};t.version=Bs,t.bisect=$s,t.bisectRight=$s,t.bisectLeft=Ws,t.ascending=Xs,t.bisector=Vs,t.cross=Js,t.descending=Qs,t.deviation=nl,t.extent=el,t.histogram=dl,t.thresholdFreedmanDiaconis=vl,t.thresholdScott=yl,t.thresholdSturges=pl,t.max=_l,t.mean=ml,t.median=xl,t.merge=bl,t.min=wl,t.pairs=Gs,t.permute=Ml,t.quantile=gl,t.range=cl,t.scan=kl,t.shuffle=Tl,t.sum=Sl,t.ticks=hl,t.tickIncrement=r,t.tickStep=i,t.transpose=Al,t.variance=tl,t.zip=Nl,t.axisTop=f,t.axisRight=h,t.axisBottom=p,t.axisLeft=d,t.brush=Yd,t.brushX=ze,t.brushY=De,t.brushSelection=Ce,t.chord=Zd,t.ribbon=tg,t.nest=eg,t.set=We,t.map=He,t.keys=ig,t.values=og,t.entries=ug,t.color=St,t.rgb=Ct,t.hsl=Pt,t.lab=Ot,t.hcl=Xt,t.cubehelix=$t,t.dispatch=g,t.drag=If,t.dragDisable=Ff,t.dragEnable=mt,t.dsvFormat=ag,t.csvParse=sg,t.csvParseRows=lg,t.csvFormat=fg,t.csvFormatRows=hg,t.tsvParse=dg,t.tsvParseRows=gg,t.tsvFormat=vg,t.tsvFormatRows=yg,t.easeLinear=ie,t.easeQuad=ae,t.easeQuadIn=oe,t.easeQuadOut=ue,t.easeQuadInOut=ae,t.easeCubic=le,t.easeCubicIn=ce,t.easeCubicOut=se,t.easeCubicInOut=le,t.easePoly=Qp,t.easePolyIn=Gp,t.easePolyOut=Jp,t.easePolyInOut=Qp,t.easeSin=pe,t.easeSinIn=fe,t.easeSinOut=he,t.easeSinInOut=pe,t.easeExp=ve,t.easeExpIn=de,t.easeExpOut=ge,t.easeExpInOut=ve,t.easeCircle=me,t.easeCircleIn=ye,t.easeCircleOut=_e,t.easeCircleInOut=me,t.easeBounce=be,t.easeBounceIn=xe,t.easeBounceOut=be,t.easeBounceInOut=we,t.easeBack=dd,t.easeBackIn=hd,t.easeBackOut=pd,t.easeBackInOut=dd,t.easeElastic=md,t.easeElasticIn=_d,t.easeElasticOut=md,t.easeElasticInOut=xd,t.forceCenter=_g,t.forceCollide=Ug,t.forceLink=Rg,t.forceManyBody=Ig,t.forceSimulation=Yg,t.forceX=jg,t.forceY=Hg,t.formatDefaultLocale=gr,t.formatLocale=ev,t.formatSpecifier=pr,t.precisionFixed=rv,t.precisionPrefix=iv,t.precisionRound=ov,t.geoArea=fy,t.geoBounds=dy,t.geoCentroid=vy,t.geoCircle=zy,t.geoClipExtent=Oy,t.geoContains=Wy,t.geoDistance=Vy,t.geoGraticule=ki,t.geoGraticule10=Ti,t.geoInterpolate=Gy,t.geoLength=Hy,t.geoPath=M_,t.geoAlbers=L_,t.geoAlbersUsa=P_,t.geoAzimuthalEqualArea=U_,t.geoAzimuthalEqualAreaRaw=q_,t.geoAzimuthalEquidistant=O_,t.geoAzimuthalEquidistantRaw=R_,t.geoConicConformal=Y_,t.geoConicConformalRaw=po,t.geoConicEqualArea=D_,t.geoConicEqualAreaRaw=uo,t.geoConicEquidistant=j_,t.geoConicEquidistantRaw=vo,t.geoEquirectangular=I_,t.geoEquirectangularRaw=go,t.geoGnomonic=H_,t.geoGnomonicRaw=yo,t.geoIdentity=B_,t.geoProjection=eo,t.geoProjectionMutator=ro,t.geoMercator=F_,t.geoMercatorRaw=lo,t.geoOrthographic=X_,t.geoOrthographicRaw=mo,t.geoStereographic=V_,t.geoStereographicRaw=xo,t.geoTransverseMercator=Z_,t.geoTransverseMercatorRaw=bo,t.geoRotation=Cy,t.geoStream=ay,t.geoTransform=A_,t.cluster=$_,t.hierarchy=zo,t.pack=lm,t.packSiblings=cm,t.packEnclose=am,t.partition=pm,t.stratify=ym,t.tree=_m,t.treemap=wm,t.treemapBinary=Mm,t.treemapDice=hm,t.treemapSlice=mm,t.treemapSliceDice=km,t.treemapSquarify=bm,t.treemapResquarify=Tm,t.interpolate=Yh,t.interpolateArray=Lh,t.interpolateBasis=Ah,t.interpolateBasisClosed=Nh,t.interpolateDate=Ph,t.interpolateNumber=qh,t.interpolateObject=Uh,t.interpolateRound=Ih,t.interpolateString=Fh,t.interpolateTransformCss=Xh,t.interpolateTransformSvg=Vh,t.interpolateZoom=Jh,t.interpolateRgb=Ch,t.interpolateRgbBasis=zh,t.interpolateRgbBasisClosed=Dh,t.interpolateHsl=Qh,t.interpolateHslLong=Kh,t.interpolateLab=pn,t.interpolateHcl=tp,t.interpolateHclLong=np,t.interpolateCubehelix=ep,t.interpolateCubehelixLong=rp,t.quantize=ip,t.path=Ue,t.polygonArea=Sm,t.polygonCentroid=Am,t.polygonHull=Em,t.polygonContains=Cm,t.polygonLength=zm,t.quadtree=ir,t.queue=xu,t.randomUniform=qm,t.randomNormal=Um,t.randomLogNormal=Rm,t.randomBates=Fm,t.randomIrwinHall=Om,t.randomExponential=Ym,t.request=Im,t.html=Hm,t.json=Bm,t.text=Xm,t.xml=Vm,t.csv=$m,t.tsv=Wm,t.scaleBand=Tu,t.scalePoint=Au,t.scaleIdentity=Ru,t.scaleLinear=Uu,t.scaleLog=Bu,t.scaleOrdinal=ku,t.scaleImplicit=Km,t.scalePow=Vu,t.scaleSqrt=Zu,t.scaleQuantile=$u,t.scaleQuantize=Wu,t.scaleThreshold=Gu,t.scaleTime=Tb,t.scaleUtc=Sb,t.schemeCategory10=Nb,t.schemeCategory20b=Eb,t.schemeCategory20c=Cb,t.schemeCategory20=zb,t.interpolateCubehelixDefault=Db,t.interpolateRainbow=Ub,t.interpolateWarm=Lb,t.interpolateCool=Pb,t.interpolateViridis=Rb,t.interpolateMagma=Ob,t.interpolateInferno=Fb,t.interpolatePlasma=Yb,t.scaleSequential=ic,t.creator=Yl,t.local=w,t.matcher=Xl,t.mouse=Jl,t.namespace=Fl,t.namespaces=Ol,t.select=Pf,t.selectAll=qf,t.selection=yt,t.selector=Ql,t.selectorAll=tf,t.style=X,t.touch=Uf,t.touches=Rf,t.window=xf,t.customEvent=E,t.arc=Kb,t.area=ew,t.line=nw,t.pie=ow,t.radialArea=cw,t.radialLine=aw,t.linkHorizontal=Sc,t.linkVertical=Ac,t.linkRadial=Nc,t.symbol=Cw,t.symbols=Ew,t.symbolCircle=fw,t.symbolCross=hw,t.symbolDiamond=gw,t.symbolSquare=bw,t.symbolStar=xw,t.symbolTriangle=Mw,t.symbolWye=Nw,t.curveBasisClosed=Lw,t.curveBasisOpen=Pw,t.curveBasis=Dw,t.curveBundle=qw,t.curveCardinalClosed=Rw,t.curveCardinalOpen=Ow,t.curveCardinal=Uw,t.curveCatmullRomClosed=Yw,t.curveCatmullRomOpen=Iw,t.curveCatmullRom=Fw,t.curveLinearClosed=jw,t.curveLinear=tw,t.curveMonotoneX=Gc,t.curveMonotoneY=Jc,t.curveNatural=Hw,t.curveStep=Bw,t.curveStepAfter=es,t.curveStepBefore=ns,t.stack=Zw,t.stackOffsetExpand=$w,t.stackOffsetDiverging=Ww,t.stackOffsetNone=Xw,t.stackOffsetSilhouette=Gw,t.stackOffsetWiggle=Jw,t.stackOrderAscending=Qw,t.stackOrderDescending=Kw,t.stackOrderInsideOut=tM,t.stackOrderNone=Vw,t.stackOrderReverse=nM,t.timeInterval=Ju,t.timeMillisecond=ax,t.timeMilliseconds=cx,t.utcMillisecond=ax,t.utcMilliseconds=cx,t.timeSecond=dx,t.timeSeconds=gx,t.utcSecond=dx,t.utcSeconds=gx,t.timeMinute=vx,t.timeMinutes=yx,t.timeHour=_x,t.timeHours=mx,t.timeDay=xx,t.timeDays=bx,t.timeWeek=wx,t.timeWeeks=Ex,t.timeSunday=wx,t.timeSundays=Ex,t.timeMonday=Mx,t.timeMondays=Cx,t.timeTuesday=kx,t.timeTuesdays=zx,t.timeWednesday=Tx,t.timeWednesdays=Dx,t.timeThursday=Sx,t.timeThursdays=Lx,t.timeFriday=Ax,t.timeFridays=Px,t.timeSaturday=Nx,t.timeSaturdays=qx,t.timeMonth=Ux,t.timeMonths=Rx,t.timeYear=Ox,t.timeYears=Fx,t.utcMinute=Yx,t.utcMinutes=Ix,t.utcHour=jx,t.utcHours=Hx,t.utcDay=Bx,t.utcDays=Xx,t.utcWeek=Vx,t.utcWeeks=Kx,t.utcSunday=Vx,t.utcSundays=Kx,t.utcMonday=Zx,t.utcMondays=tb,t.utcTuesday=$x,t.utcTuesdays=nb,t.utcWednesday=Wx,t.utcWednesdays=eb,t.utcThursday=Gx,t.utcThursdays=rb,t.utcFriday=Jx,t.utcFridays=ib,t.utcSaturday=Qx,t.utcSaturdays=ob,t.utcMonth=ub,t.utcMonths=ab,t.utcYear=cb,t.utcYears=lb,t.timeFormatDefaultLocale=Ja,t.timeFormatLocale=ra,t.isoFormat=vb,t.isoParse=yb,t.now=vn,t.timer=mn,t.timerFlush=xn,t.timeout=dp,t.interval=gp,t.transition=ee,t.active=kd,t.interrupt=Sp,t.voronoi=hM,t.zoom=vM,t.zoomTransform=Fs,t.zoomIdentity=dM,Object.defineProperty(t,"__esModule",{value:!0})})},{}],4:[function(t,n,e){"use strict";function r(t){o.select("#main").append("circle").attr("cx",50).attr("cy",50).attr("r",50),o.select(document.body).append("h3").text("You selected data for:");var n=o.select(document.body).append("h2");o.select(document.body).append("div").call(u().domain([new Date("1/1/1975"),new Date("1/1/2015")]).width(500).labelFormat(o.time.format("%Y")).on("change",function(t){var e=o.time.format("%Y");n.text(e(t))}))}function i(){var t=(new Date).getTime(),n=CryptoJS.MD5(t+a+c).toString(),e="http://gateway.marvel.com:80/v1/public/events",r=100;console.log(e),$.getJSON(e,{limit:r,offset:0,ts:t,apikey:c,hash:n}).done(function(t){console.log(t),s=t}).fail(function(t){console.log(t)})}var o=(t("./js/timeSlider"),t("d3")),u=t("chroniton"),a="2bc84665e9b2df0787d56fb4cf274d9c4645bd1f",c="979b099b043e4964b948d981ac2264b0",s=[];r(),i()},{"./js/timeSlider":5,chroniton:2,d3:3}],5:[function(t,n,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t("d3"),i=t("chroniton"),o=i().domain([new Date("1/1/1975"),new Date("1/1/2015")]).width(500).labelFormat(r.time.format("%Y")).on("change",function(t){var n=r.time.format("%Y");yearOutput.text(n(t))});e.TimeSlider=o},{chroniton:2,d3:3}]},{},[4]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
